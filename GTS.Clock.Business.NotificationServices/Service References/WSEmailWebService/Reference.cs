//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GTS.Clock.Business.NotificationServices.WSEmailWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSEmailWebService.IEmailWebService")]
    public interface IEmailWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailWebService/SendKartablEmails", ReplyAction="http://tempuri.org/IEmailWebService/SendKartablEmailsResponse")]
        void SendKartablEmails(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailWebService/SendRequestEmails", ReplyAction="http://tempuri.org/IEmailWebService/SendRequestEmailsResponse")]
        void SendRequestEmails(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailWebService/SendTrafficEmails", ReplyAction="http://tempuri.org/IEmailWebService/SendTrafficEmailsResponse")]
        void SendTrafficEmails(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailWebService/GetAllEmailSettings", ReplyAction="http://tempuri.org/IEmailWebService/GetAllEmailSettingsResponse")]
        GTS.Clock.Infrastructure.InfoServiceProxy[] GetAllEmailSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailWebService/RunEmailServices", ReplyAction="http://tempuri.org/IEmailWebService/RunEmailServicesResponse")]
        void RunEmailServices(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailWebServiceChannel : GTS.Clock.Business.NotificationServices.WSEmailWebService.IEmailWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailWebServiceClient : System.ServiceModel.ClientBase<GTS.Clock.Business.NotificationServices.WSEmailWebService.IEmailWebService>, GTS.Clock.Business.NotificationServices.WSEmailWebService.IEmailWebService {
        
        public EmailWebServiceClient() {
        }
        
        public EmailWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendKartablEmails(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail) {
            base.Channel.SendKartablEmails(readyForSendEmail);
        }
        
        public void SendRequestEmails(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail) {
            base.Channel.SendRequestEmails(readyForSendEmail);
        }
        
        public void SendTrafficEmails(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail) {
            base.Channel.SendTrafficEmails(readyForSendEmail);
        }
        
        public GTS.Clock.Infrastructure.InfoServiceProxy[] GetAllEmailSettings() {
            return base.Channel.GetAllEmailSettings();
        }
        
        public void RunEmailServices(GTS.Clock.Infrastructure.InfoServiceProxy[] readyForSendEmail) {
            base.Channel.RunEmailServices(readyForSendEmail);
        }
    }
}
