//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GTS.Clock.AppSetup.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ClockDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClockDataSet : global::System.Data.DataSet {
        
        private TA_RuleTemplateMappingDataTable tableTA_RuleTemplateMapping;
        
        private TA_RuleTemplateParameterDataTable tableTA_RuleTemplateParameter;
        
        private TA_TemplateConditionDataTable tableTA_TemplateCondition;
        
        private TA_ConceptTemplateParameterDataTable tableTA_ConceptTemplateParameter;
        
        private TA_ConceptTemplateDataTable tableTA_ConceptTemplate;
        
        private TA_ConceptTemplateMappingDataTable tableTA_ConceptTemplateMapping;
        
        private tmpWinCategory_viewDataTable tabletmpWinCategory_view;
        
        private TA_CalculationDateRangeTemplateDataTable tableTA_CalculationDateRangeTemplate;
        
        private TA_RuleTemplateDataTable tableTA_RuleTemplate;
        
        private holidayDataTable tableholiday;
        
        private TA_RuleTypeDataTable tableTA_RuleType;
        
        private global::System.Data.DataRelation relationFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate;
        
        private global::System.Data.DataRelation relationFK_TA_RuleTemplateParameter_TA_RuleTemplate;
        
        private global::System.Data.DataRelation relationFK_TA_ConceptTemplateParameter_TA_ConceptTemplate;
        
        private global::System.Data.DataRelation relationFK_TA_RuleTemplate_TA_OrginRuleType;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClockDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ClockDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TA_RuleTemplateMapping"] != null)) {
                    base.Tables.Add(new TA_RuleTemplateMappingDataTable(ds.Tables["TA_RuleTemplateMapping"]));
                }
                if ((ds.Tables["TA_RuleTemplateParameter"] != null)) {
                    base.Tables.Add(new TA_RuleTemplateParameterDataTable(ds.Tables["TA_RuleTemplateParameter"]));
                }
                if ((ds.Tables["TA_TemplateCondition"] != null)) {
                    base.Tables.Add(new TA_TemplateConditionDataTable(ds.Tables["TA_TemplateCondition"]));
                }
                if ((ds.Tables["TA_ConceptTemplateParameter"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateParameterDataTable(ds.Tables["TA_ConceptTemplateParameter"]));
                }
                if ((ds.Tables["TA_ConceptTemplate"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateDataTable(ds.Tables["TA_ConceptTemplate"]));
                }
                if ((ds.Tables["TA_ConceptTemplateMapping"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateMappingDataTable(ds.Tables["TA_ConceptTemplateMapping"]));
                }
                if ((ds.Tables["tmpWinCategory_view"] != null)) {
                    base.Tables.Add(new tmpWinCategory_viewDataTable(ds.Tables["tmpWinCategory_view"]));
                }
                if ((ds.Tables["TA_CalculationDateRangeTemplate"] != null)) {
                    base.Tables.Add(new TA_CalculationDateRangeTemplateDataTable(ds.Tables["TA_CalculationDateRangeTemplate"]));
                }
                if ((ds.Tables["TA_RuleTemplate"] != null)) {
                    base.Tables.Add(new TA_RuleTemplateDataTable(ds.Tables["TA_RuleTemplate"]));
                }
                if ((ds.Tables["holiday"] != null)) {
                    base.Tables.Add(new holidayDataTable(ds.Tables["holiday"]));
                }
                if ((ds.Tables["TA_RuleType"] != null)) {
                    base.Tables.Add(new TA_RuleTypeDataTable(ds.Tables["TA_RuleType"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_RuleTemplateMappingDataTable TA_RuleTemplateMapping {
            get {
                return this.tableTA_RuleTemplateMapping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_RuleTemplateParameterDataTable TA_RuleTemplateParameter {
            get {
                return this.tableTA_RuleTemplateParameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_TemplateConditionDataTable TA_TemplateCondition {
            get {
                return this.tableTA_TemplateCondition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_ConceptTemplateParameterDataTable TA_ConceptTemplateParameter {
            get {
                return this.tableTA_ConceptTemplateParameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_ConceptTemplateDataTable TA_ConceptTemplate {
            get {
                return this.tableTA_ConceptTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_ConceptTemplateMappingDataTable TA_ConceptTemplateMapping {
            get {
                return this.tableTA_ConceptTemplateMapping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tmpWinCategory_viewDataTable tmpWinCategory_view {
            get {
                return this.tabletmpWinCategory_view;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_CalculationDateRangeTemplateDataTable TA_CalculationDateRangeTemplate {
            get {
                return this.tableTA_CalculationDateRangeTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_RuleTemplateDataTable TA_RuleTemplate {
            get {
                return this.tableTA_RuleTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public holidayDataTable holiday {
            get {
                return this.tableholiday;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_RuleTypeDataTable TA_RuleType {
            get {
                return this.tableTA_RuleType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ClockDataSet cln = ((ClockDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TA_RuleTemplateMapping"] != null)) {
                    base.Tables.Add(new TA_RuleTemplateMappingDataTable(ds.Tables["TA_RuleTemplateMapping"]));
                }
                if ((ds.Tables["TA_RuleTemplateParameter"] != null)) {
                    base.Tables.Add(new TA_RuleTemplateParameterDataTable(ds.Tables["TA_RuleTemplateParameter"]));
                }
                if ((ds.Tables["TA_TemplateCondition"] != null)) {
                    base.Tables.Add(new TA_TemplateConditionDataTable(ds.Tables["TA_TemplateCondition"]));
                }
                if ((ds.Tables["TA_ConceptTemplateParameter"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateParameterDataTable(ds.Tables["TA_ConceptTemplateParameter"]));
                }
                if ((ds.Tables["TA_ConceptTemplate"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateDataTable(ds.Tables["TA_ConceptTemplate"]));
                }
                if ((ds.Tables["TA_ConceptTemplateMapping"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateMappingDataTable(ds.Tables["TA_ConceptTemplateMapping"]));
                }
                if ((ds.Tables["tmpWinCategory_view"] != null)) {
                    base.Tables.Add(new tmpWinCategory_viewDataTable(ds.Tables["tmpWinCategory_view"]));
                }
                if ((ds.Tables["TA_CalculationDateRangeTemplate"] != null)) {
                    base.Tables.Add(new TA_CalculationDateRangeTemplateDataTable(ds.Tables["TA_CalculationDateRangeTemplate"]));
                }
                if ((ds.Tables["TA_RuleTemplate"] != null)) {
                    base.Tables.Add(new TA_RuleTemplateDataTable(ds.Tables["TA_RuleTemplate"]));
                }
                if ((ds.Tables["holiday"] != null)) {
                    base.Tables.Add(new holidayDataTable(ds.Tables["holiday"]));
                }
                if ((ds.Tables["TA_RuleType"] != null)) {
                    base.Tables.Add(new TA_RuleTypeDataTable(ds.Tables["TA_RuleType"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTA_RuleTemplateMapping = ((TA_RuleTemplateMappingDataTable)(base.Tables["TA_RuleTemplateMapping"]));
            if ((initTable == true)) {
                if ((this.tableTA_RuleTemplateMapping != null)) {
                    this.tableTA_RuleTemplateMapping.InitVars();
                }
            }
            this.tableTA_RuleTemplateParameter = ((TA_RuleTemplateParameterDataTable)(base.Tables["TA_RuleTemplateParameter"]));
            if ((initTable == true)) {
                if ((this.tableTA_RuleTemplateParameter != null)) {
                    this.tableTA_RuleTemplateParameter.InitVars();
                }
            }
            this.tableTA_TemplateCondition = ((TA_TemplateConditionDataTable)(base.Tables["TA_TemplateCondition"]));
            if ((initTable == true)) {
                if ((this.tableTA_TemplateCondition != null)) {
                    this.tableTA_TemplateCondition.InitVars();
                }
            }
            this.tableTA_ConceptTemplateParameter = ((TA_ConceptTemplateParameterDataTable)(base.Tables["TA_ConceptTemplateParameter"]));
            if ((initTable == true)) {
                if ((this.tableTA_ConceptTemplateParameter != null)) {
                    this.tableTA_ConceptTemplateParameter.InitVars();
                }
            }
            this.tableTA_ConceptTemplate = ((TA_ConceptTemplateDataTable)(base.Tables["TA_ConceptTemplate"]));
            if ((initTable == true)) {
                if ((this.tableTA_ConceptTemplate != null)) {
                    this.tableTA_ConceptTemplate.InitVars();
                }
            }
            this.tableTA_ConceptTemplateMapping = ((TA_ConceptTemplateMappingDataTable)(base.Tables["TA_ConceptTemplateMapping"]));
            if ((initTable == true)) {
                if ((this.tableTA_ConceptTemplateMapping != null)) {
                    this.tableTA_ConceptTemplateMapping.InitVars();
                }
            }
            this.tabletmpWinCategory_view = ((tmpWinCategory_viewDataTable)(base.Tables["tmpWinCategory_view"]));
            if ((initTable == true)) {
                if ((this.tabletmpWinCategory_view != null)) {
                    this.tabletmpWinCategory_view.InitVars();
                }
            }
            this.tableTA_CalculationDateRangeTemplate = ((TA_CalculationDateRangeTemplateDataTable)(base.Tables["TA_CalculationDateRangeTemplate"]));
            if ((initTable == true)) {
                if ((this.tableTA_CalculationDateRangeTemplate != null)) {
                    this.tableTA_CalculationDateRangeTemplate.InitVars();
                }
            }
            this.tableTA_RuleTemplate = ((TA_RuleTemplateDataTable)(base.Tables["TA_RuleTemplate"]));
            if ((initTable == true)) {
                if ((this.tableTA_RuleTemplate != null)) {
                    this.tableTA_RuleTemplate.InitVars();
                }
            }
            this.tableholiday = ((holidayDataTable)(base.Tables["holiday"]));
            if ((initTable == true)) {
                if ((this.tableholiday != null)) {
                    this.tableholiday.InitVars();
                }
            }
            this.tableTA_RuleType = ((TA_RuleTypeDataTable)(base.Tables["TA_RuleType"]));
            if ((initTable == true)) {
                if ((this.tableTA_RuleType != null)) {
                    this.tableTA_RuleType.InitVars();
                }
            }
            this.relationFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate = this.Relations["FK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate"];
            this.relationFK_TA_RuleTemplateParameter_TA_RuleTemplate = this.Relations["FK_TA_RuleTemplateParameter_TA_RuleTemplate"];
            this.relationFK_TA_ConceptTemplateParameter_TA_ConceptTemplate = this.Relations["FK_TA_ConceptTemplateParameter_TA_ConceptTemplate"];
            this.relationFK_TA_RuleTemplate_TA_OrginRuleType = this.Relations["FK_TA_RuleTemplate_TA_OrginRuleType"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ClockDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ClockDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTA_RuleTemplateMapping = new TA_RuleTemplateMappingDataTable();
            base.Tables.Add(this.tableTA_RuleTemplateMapping);
            this.tableTA_RuleTemplateParameter = new TA_RuleTemplateParameterDataTable();
            base.Tables.Add(this.tableTA_RuleTemplateParameter);
            this.tableTA_TemplateCondition = new TA_TemplateConditionDataTable();
            base.Tables.Add(this.tableTA_TemplateCondition);
            this.tableTA_ConceptTemplateParameter = new TA_ConceptTemplateParameterDataTable();
            base.Tables.Add(this.tableTA_ConceptTemplateParameter);
            this.tableTA_ConceptTemplate = new TA_ConceptTemplateDataTable();
            base.Tables.Add(this.tableTA_ConceptTemplate);
            this.tableTA_ConceptTemplateMapping = new TA_ConceptTemplateMappingDataTable();
            base.Tables.Add(this.tableTA_ConceptTemplateMapping);
            this.tabletmpWinCategory_view = new tmpWinCategory_viewDataTable();
            base.Tables.Add(this.tabletmpWinCategory_view);
            this.tableTA_CalculationDateRangeTemplate = new TA_CalculationDateRangeTemplateDataTable();
            base.Tables.Add(this.tableTA_CalculationDateRangeTemplate);
            this.tableTA_RuleTemplate = new TA_RuleTemplateDataTable();
            base.Tables.Add(this.tableTA_RuleTemplate);
            this.tableholiday = new holidayDataTable();
            base.Tables.Add(this.tableholiday);
            this.tableTA_RuleType = new TA_RuleTypeDataTable();
            base.Tables.Add(this.tableTA_RuleType);
            this.relationFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate = new global::System.Data.DataRelation("FK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate", new global::System.Data.DataColumn[] {
                        this.tableTA_ConceptTemplate.ConceptTmp_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTA_CalculationDateRangeTemplate.calcDateRng_CnpTmpIdColumn}, false);
            this.Relations.Add(this.relationFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate);
            this.relationFK_TA_RuleTemplateParameter_TA_RuleTemplate = new global::System.Data.DataRelation("FK_TA_RuleTemplateParameter_TA_RuleTemplate", new global::System.Data.DataColumn[] {
                        this.tableTA_RuleTemplate.RuleTmp_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTA_RuleTemplateParameter.RuleTmpParam_RuleTemplateIdColumn}, false);
            this.Relations.Add(this.relationFK_TA_RuleTemplateParameter_TA_RuleTemplate);
            this.relationFK_TA_ConceptTemplateParameter_TA_ConceptTemplate = new global::System.Data.DataRelation("FK_TA_ConceptTemplateParameter_TA_ConceptTemplate", new global::System.Data.DataColumn[] {
                        this.tableTA_ConceptTemplate.ConceptTmp_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTA_ConceptTemplateParameter.ConceptTmpParam_ConceptTemplateIdColumn}, false);
            this.Relations.Add(this.relationFK_TA_ConceptTemplateParameter_TA_ConceptTemplate);
            this.relationFK_TA_RuleTemplate_TA_OrginRuleType = new global::System.Data.DataRelation("FK_TA_RuleTemplate_TA_OrginRuleType", new global::System.Data.DataColumn[] {
                        this.tableTA_RuleType.RuleType_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTA_RuleTemplate.RuleTmp_RuleTypeIdColumn}, false);
            this.Relations.Add(this.relationFK_TA_RuleTemplate_TA_OrginRuleType);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_RuleTemplateMapping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_RuleTemplateParameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_TemplateCondition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_ConceptTemplateParameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_ConceptTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_ConceptTemplateMapping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetmpWinCategory_view() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_CalculationDateRangeTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_RuleTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeholiday() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_RuleType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ClockDataSet ds = new ClockDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_RuleTemplateMappingRowChangeEventHandler(object sender, TA_RuleTemplateMappingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_RuleTemplateParameterRowChangeEventHandler(object sender, TA_RuleTemplateParameterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_TemplateConditionRowChangeEventHandler(object sender, TA_TemplateConditionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_ConceptTemplateParameterRowChangeEventHandler(object sender, TA_ConceptTemplateParameterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_ConceptTemplateRowChangeEventHandler(object sender, TA_ConceptTemplateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_ConceptTemplateMappingRowChangeEventHandler(object sender, TA_ConceptTemplateMappingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tmpWinCategory_viewRowChangeEventHandler(object sender, tmpWinCategory_viewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_CalculationDateRangeTemplateRowChangeEventHandler(object sender, TA_CalculationDateRangeTemplateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_RuleTemplateRowChangeEventHandler(object sender, TA_RuleTemplateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void holidayRowChangeEventHandler(object sender, holidayRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_RuleTypeRowChangeEventHandler(object sender, TA_RuleTypeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_RuleTemplateMappingDataTable : global::System.Data.TypedTableBase<TA_RuleTemplateMappingRow> {
            
            private global::System.Data.DataColumn columnRleTmpMapping_ID;
            
            private global::System.Data.DataColumn columnRleTmpMapping_TemplateConditionId;
            
            private global::System.Data.DataColumn columnRleTmpMapping_RuleTemplateId;
            
            private global::System.Data.DataColumn columnRleTmpMapping_Is;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingDataTable() {
                this.TableName = "TA_RuleTemplateMapping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTemplateMappingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_RuleTemplateMappingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RleTmpMapping_IDColumn {
                get {
                    return this.columnRleTmpMapping_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RleTmpMapping_TemplateConditionIdColumn {
                get {
                    return this.columnRleTmpMapping_TemplateConditionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RleTmpMapping_RuleTemplateIdColumn {
                get {
                    return this.columnRleTmpMapping_RuleTemplateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RleTmpMapping_IsColumn {
                get {
                    return this.columnRleTmpMapping_Is;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingRow this[int index] {
                get {
                    return ((TA_RuleTemplateMappingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateMappingRowChangeEventHandler TA_RuleTemplateMappingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateMappingRowChangeEventHandler TA_RuleTemplateMappingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateMappingRowChangeEventHandler TA_RuleTemplateMappingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateMappingRowChangeEventHandler TA_RuleTemplateMappingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_RuleTemplateMappingRow(TA_RuleTemplateMappingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingRow AddTA_RuleTemplateMappingRow(decimal RleTmpMapping_TemplateConditionId, decimal RleTmpMapping_RuleTemplateId, bool RleTmpMapping_Is) {
                TA_RuleTemplateMappingRow rowTA_RuleTemplateMappingRow = ((TA_RuleTemplateMappingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RleTmpMapping_TemplateConditionId,
                        RleTmpMapping_RuleTemplateId,
                        RleTmpMapping_Is};
                rowTA_RuleTemplateMappingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_RuleTemplateMappingRow);
                return rowTA_RuleTemplateMappingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingRow FindByRleTmpMapping_ID(decimal RleTmpMapping_ID) {
                return ((TA_RuleTemplateMappingRow)(this.Rows.Find(new object[] {
                            RleTmpMapping_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_RuleTemplateMappingDataTable cln = ((TA_RuleTemplateMappingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_RuleTemplateMappingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRleTmpMapping_ID = base.Columns["RleTmpMapping_ID"];
                this.columnRleTmpMapping_TemplateConditionId = base.Columns["RleTmpMapping_TemplateConditionId"];
                this.columnRleTmpMapping_RuleTemplateId = base.Columns["RleTmpMapping_RuleTemplateId"];
                this.columnRleTmpMapping_Is = base.Columns["RleTmpMapping_Is"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRleTmpMapping_ID = new global::System.Data.DataColumn("RleTmpMapping_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRleTmpMapping_ID);
                this.columnRleTmpMapping_TemplateConditionId = new global::System.Data.DataColumn("RleTmpMapping_TemplateConditionId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRleTmpMapping_TemplateConditionId);
                this.columnRleTmpMapping_RuleTemplateId = new global::System.Data.DataColumn("RleTmpMapping_RuleTemplateId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRleTmpMapping_RuleTemplateId);
                this.columnRleTmpMapping_Is = new global::System.Data.DataColumn("RleTmpMapping_Is", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRleTmpMapping_Is);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRleTmpMapping_ID}, true));
                this.columnRleTmpMapping_ID.AutoIncrement = true;
                this.columnRleTmpMapping_ID.AutoIncrementSeed = -1;
                this.columnRleTmpMapping_ID.AutoIncrementStep = -1;
                this.columnRleTmpMapping_ID.AllowDBNull = false;
                this.columnRleTmpMapping_ID.ReadOnly = true;
                this.columnRleTmpMapping_ID.Unique = true;
                this.columnRleTmpMapping_TemplateConditionId.AllowDBNull = false;
                this.columnRleTmpMapping_RuleTemplateId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingRow NewTA_RuleTemplateMappingRow() {
                return ((TA_RuleTemplateMappingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_RuleTemplateMappingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_RuleTemplateMappingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_RuleTemplateMappingRowChanged != null)) {
                    this.TA_RuleTemplateMappingRowChanged(this, new TA_RuleTemplateMappingRowChangeEvent(((TA_RuleTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_RuleTemplateMappingRowChanging != null)) {
                    this.TA_RuleTemplateMappingRowChanging(this, new TA_RuleTemplateMappingRowChangeEvent(((TA_RuleTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_RuleTemplateMappingRowDeleted != null)) {
                    this.TA_RuleTemplateMappingRowDeleted(this, new TA_RuleTemplateMappingRowChangeEvent(((TA_RuleTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_RuleTemplateMappingRowDeleting != null)) {
                    this.TA_RuleTemplateMappingRowDeleting(this, new TA_RuleTemplateMappingRowChangeEvent(((TA_RuleTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_RuleTemplateMappingRow(TA_RuleTemplateMappingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_RuleTemplateMappingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_RuleTemplateParameterDataTable : global::System.Data.TypedTableBase<TA_RuleTemplateParameterRow> {
            
            private global::System.Data.DataColumn columnRuleTmpParam_ID;
            
            private global::System.Data.DataColumn columnRuleTmpParam_RuleTemplateId;
            
            private global::System.Data.DataColumn columnRuleTmpParam_Name;
            
            private global::System.Data.DataColumn columnRuleTmpParam_ColumnName;
            
            private global::System.Data.DataColumn columnRuleTmpParam_TableName;
            
            private global::System.Data.DataColumn columnRuleTmpParam_Type;
            
            private global::System.Data.DataColumn columnRuleTmpParam_Title;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterDataTable() {
                this.TableName = "TA_RuleTemplateParameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTemplateParameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_RuleTemplateParameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_IDColumn {
                get {
                    return this.columnRuleTmpParam_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_RuleTemplateIdColumn {
                get {
                    return this.columnRuleTmpParam_RuleTemplateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_NameColumn {
                get {
                    return this.columnRuleTmpParam_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_ColumnNameColumn {
                get {
                    return this.columnRuleTmpParam_ColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_TableNameColumn {
                get {
                    return this.columnRuleTmpParam_TableName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_TypeColumn {
                get {
                    return this.columnRuleTmpParam_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmpParam_TitleColumn {
                get {
                    return this.columnRuleTmpParam_Title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRow this[int index] {
                get {
                    return ((TA_RuleTemplateParameterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateParameterRowChangeEventHandler TA_RuleTemplateParameterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateParameterRowChangeEventHandler TA_RuleTemplateParameterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateParameterRowChangeEventHandler TA_RuleTemplateParameterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateParameterRowChangeEventHandler TA_RuleTemplateParameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_RuleTemplateParameterRow(TA_RuleTemplateParameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRow AddTA_RuleTemplateParameterRow(TA_RuleTemplateRow parentTA_RuleTemplateRowByFK_TA_RuleTemplateParameter_TA_RuleTemplate, string RuleTmpParam_Name, string RuleTmpParam_ColumnName, string RuleTmpParam_TableName, short RuleTmpParam_Type, string RuleTmpParam_Title) {
                TA_RuleTemplateParameterRow rowTA_RuleTemplateParameterRow = ((TA_RuleTemplateParameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        RuleTmpParam_Name,
                        RuleTmpParam_ColumnName,
                        RuleTmpParam_TableName,
                        RuleTmpParam_Type,
                        RuleTmpParam_Title};
                if ((parentTA_RuleTemplateRowByFK_TA_RuleTemplateParameter_TA_RuleTemplate != null)) {
                    columnValuesArray[1] = parentTA_RuleTemplateRowByFK_TA_RuleTemplateParameter_TA_RuleTemplate[0];
                }
                rowTA_RuleTemplateParameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_RuleTemplateParameterRow);
                return rowTA_RuleTemplateParameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRow FindByRuleTmpParam_ID(decimal RuleTmpParam_ID) {
                return ((TA_RuleTemplateParameterRow)(this.Rows.Find(new object[] {
                            RuleTmpParam_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_RuleTemplateParameterDataTable cln = ((TA_RuleTemplateParameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_RuleTemplateParameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRuleTmpParam_ID = base.Columns["RuleTmpParam_ID"];
                this.columnRuleTmpParam_RuleTemplateId = base.Columns["RuleTmpParam_RuleTemplateId"];
                this.columnRuleTmpParam_Name = base.Columns["RuleTmpParam_Name"];
                this.columnRuleTmpParam_ColumnName = base.Columns["RuleTmpParam_ColumnName"];
                this.columnRuleTmpParam_TableName = base.Columns["RuleTmpParam_TableName"];
                this.columnRuleTmpParam_Type = base.Columns["RuleTmpParam_Type"];
                this.columnRuleTmpParam_Title = base.Columns["RuleTmpParam_Title"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRuleTmpParam_ID = new global::System.Data.DataColumn("RuleTmpParam_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_ID);
                this.columnRuleTmpParam_RuleTemplateId = new global::System.Data.DataColumn("RuleTmpParam_RuleTemplateId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_RuleTemplateId);
                this.columnRuleTmpParam_Name = new global::System.Data.DataColumn("RuleTmpParam_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_Name);
                this.columnRuleTmpParam_ColumnName = new global::System.Data.DataColumn("RuleTmpParam_ColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_ColumnName);
                this.columnRuleTmpParam_TableName = new global::System.Data.DataColumn("RuleTmpParam_TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_TableName);
                this.columnRuleTmpParam_Type = new global::System.Data.DataColumn("RuleTmpParam_Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_Type);
                this.columnRuleTmpParam_Title = new global::System.Data.DataColumn("RuleTmpParam_Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmpParam_Title);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRuleTmpParam_ID}, true));
                this.columnRuleTmpParam_ID.AutoIncrement = true;
                this.columnRuleTmpParam_ID.AutoIncrementSeed = 1;
                this.columnRuleTmpParam_ID.AllowDBNull = false;
                this.columnRuleTmpParam_ID.ReadOnly = true;
                this.columnRuleTmpParam_ID.Unique = true;
                this.columnRuleTmpParam_RuleTemplateId.AllowDBNull = false;
                this.columnRuleTmpParam_Name.AllowDBNull = false;
                this.columnRuleTmpParam_Name.MaxLength = 50;
                this.columnRuleTmpParam_ColumnName.MaxLength = 50;
                this.columnRuleTmpParam_TableName.MaxLength = 50;
                this.columnRuleTmpParam_Type.AllowDBNull = false;
                this.columnRuleTmpParam_Title.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRow NewTA_RuleTemplateParameterRow() {
                return ((TA_RuleTemplateParameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_RuleTemplateParameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_RuleTemplateParameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_RuleTemplateParameterRowChanged != null)) {
                    this.TA_RuleTemplateParameterRowChanged(this, new TA_RuleTemplateParameterRowChangeEvent(((TA_RuleTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_RuleTemplateParameterRowChanging != null)) {
                    this.TA_RuleTemplateParameterRowChanging(this, new TA_RuleTemplateParameterRowChangeEvent(((TA_RuleTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_RuleTemplateParameterRowDeleted != null)) {
                    this.TA_RuleTemplateParameterRowDeleted(this, new TA_RuleTemplateParameterRowChangeEvent(((TA_RuleTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_RuleTemplateParameterRowDeleting != null)) {
                    this.TA_RuleTemplateParameterRowDeleting(this, new TA_RuleTemplateParameterRowChangeEvent(((TA_RuleTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_RuleTemplateParameterRow(TA_RuleTemplateParameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_RuleTemplateParameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_TemplateConditionDataTable : global::System.Data.TypedTableBase<TA_TemplateConditionRow> {
            
            private global::System.Data.DataColumn columnTmpCondition_ID;
            
            private global::System.Data.DataColumn columnTmpCondition_TableName;
            
            private global::System.Data.DataColumn columnTmpCondition_ColumnName;
            
            private global::System.Data.DataColumn columnTmpCondition_ComparativeOperation;
            
            private global::System.Data.DataColumn columnTmpCondition_ExpectedValue;
            
            private global::System.Data.DataColumn columnTmpCondition_ORRleTmpConditionId;
            
            private global::System.Data.DataColumn columnTmpCondition_ANDRleTmpConditionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionDataTable() {
                this.TableName = "TA_TemplateCondition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_TemplateConditionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_TemplateConditionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_IDColumn {
                get {
                    return this.columnTmpCondition_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_TableNameColumn {
                get {
                    return this.columnTmpCondition_TableName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_ColumnNameColumn {
                get {
                    return this.columnTmpCondition_ColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_ComparativeOperationColumn {
                get {
                    return this.columnTmpCondition_ComparativeOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_ExpectedValueColumn {
                get {
                    return this.columnTmpCondition_ExpectedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_ORRleTmpConditionIdColumn {
                get {
                    return this.columnTmpCondition_ORRleTmpConditionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmpCondition_ANDRleTmpConditionIdColumn {
                get {
                    return this.columnTmpCondition_ANDRleTmpConditionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionRow this[int index] {
                get {
                    return ((TA_TemplateConditionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_TemplateConditionRowChangeEventHandler TA_TemplateConditionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_TemplateConditionRowChangeEventHandler TA_TemplateConditionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_TemplateConditionRowChangeEventHandler TA_TemplateConditionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_TemplateConditionRowChangeEventHandler TA_TemplateConditionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_TemplateConditionRow(TA_TemplateConditionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionRow AddTA_TemplateConditionRow(string TmpCondition_TableName, string TmpCondition_ColumnName, short TmpCondition_ComparativeOperation, decimal TmpCondition_ExpectedValue, decimal TmpCondition_ORRleTmpConditionId, decimal TmpCondition_ANDRleTmpConditionId) {
                TA_TemplateConditionRow rowTA_TemplateConditionRow = ((TA_TemplateConditionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TmpCondition_TableName,
                        TmpCondition_ColumnName,
                        TmpCondition_ComparativeOperation,
                        TmpCondition_ExpectedValue,
                        TmpCondition_ORRleTmpConditionId,
                        TmpCondition_ANDRleTmpConditionId};
                rowTA_TemplateConditionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_TemplateConditionRow);
                return rowTA_TemplateConditionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionRow FindByTmpCondition_ID(decimal TmpCondition_ID) {
                return ((TA_TemplateConditionRow)(this.Rows.Find(new object[] {
                            TmpCondition_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_TemplateConditionDataTable cln = ((TA_TemplateConditionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_TemplateConditionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTmpCondition_ID = base.Columns["TmpCondition_ID"];
                this.columnTmpCondition_TableName = base.Columns["TmpCondition_TableName"];
                this.columnTmpCondition_ColumnName = base.Columns["TmpCondition_ColumnName"];
                this.columnTmpCondition_ComparativeOperation = base.Columns["TmpCondition_ComparativeOperation"];
                this.columnTmpCondition_ExpectedValue = base.Columns["TmpCondition_ExpectedValue"];
                this.columnTmpCondition_ORRleTmpConditionId = base.Columns["TmpCondition_ORRleTmpConditionId"];
                this.columnTmpCondition_ANDRleTmpConditionId = base.Columns["TmpCondition_ANDRleTmpConditionId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTmpCondition_ID = new global::System.Data.DataColumn("TmpCondition_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_ID);
                this.columnTmpCondition_TableName = new global::System.Data.DataColumn("TmpCondition_TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_TableName);
                this.columnTmpCondition_ColumnName = new global::System.Data.DataColumn("TmpCondition_ColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_ColumnName);
                this.columnTmpCondition_ComparativeOperation = new global::System.Data.DataColumn("TmpCondition_ComparativeOperation", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_ComparativeOperation);
                this.columnTmpCondition_ExpectedValue = new global::System.Data.DataColumn("TmpCondition_ExpectedValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_ExpectedValue);
                this.columnTmpCondition_ORRleTmpConditionId = new global::System.Data.DataColumn("TmpCondition_ORRleTmpConditionId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_ORRleTmpConditionId);
                this.columnTmpCondition_ANDRleTmpConditionId = new global::System.Data.DataColumn("TmpCondition_ANDRleTmpConditionId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmpCondition_ANDRleTmpConditionId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTmpCondition_ID}, true));
                this.columnTmpCondition_ID.AutoIncrement = true;
                this.columnTmpCondition_ID.AutoIncrementSeed = -1;
                this.columnTmpCondition_ID.AutoIncrementStep = -1;
                this.columnTmpCondition_ID.AllowDBNull = false;
                this.columnTmpCondition_ID.ReadOnly = true;
                this.columnTmpCondition_ID.Unique = true;
                this.columnTmpCondition_TableName.MaxLength = 50;
                this.columnTmpCondition_ColumnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionRow NewTA_TemplateConditionRow() {
                return ((TA_TemplateConditionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_TemplateConditionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_TemplateConditionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_TemplateConditionRowChanged != null)) {
                    this.TA_TemplateConditionRowChanged(this, new TA_TemplateConditionRowChangeEvent(((TA_TemplateConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_TemplateConditionRowChanging != null)) {
                    this.TA_TemplateConditionRowChanging(this, new TA_TemplateConditionRowChangeEvent(((TA_TemplateConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_TemplateConditionRowDeleted != null)) {
                    this.TA_TemplateConditionRowDeleted(this, new TA_TemplateConditionRowChangeEvent(((TA_TemplateConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_TemplateConditionRowDeleting != null)) {
                    this.TA_TemplateConditionRowDeleting(this, new TA_TemplateConditionRowChangeEvent(((TA_TemplateConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_TemplateConditionRow(TA_TemplateConditionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_TemplateConditionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_ConceptTemplateParameterDataTable : global::System.Data.TypedTableBase<TA_ConceptTemplateParameterRow> {
            
            private global::System.Data.DataColumn columnConceptTmpParam_ID;
            
            private global::System.Data.DataColumn columnConceptTmpParam_ConceptTemplateId;
            
            private global::System.Data.DataColumn columnConceptTmpParam_Name;
            
            private global::System.Data.DataColumn columnConceptTmpParam_ColumnName;
            
            private global::System.Data.DataColumn columnConceptTmpParam_TableName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterDataTable() {
                this.TableName = "TA_ConceptTemplateParameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateParameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_ConceptTemplateParameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpParam_IDColumn {
                get {
                    return this.columnConceptTmpParam_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpParam_ConceptTemplateIdColumn {
                get {
                    return this.columnConceptTmpParam_ConceptTemplateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpParam_NameColumn {
                get {
                    return this.columnConceptTmpParam_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpParam_ColumnNameColumn {
                get {
                    return this.columnConceptTmpParam_ColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpParam_TableNameColumn {
                get {
                    return this.columnConceptTmpParam_TableName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRow this[int index] {
                get {
                    return ((TA_ConceptTemplateParameterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateParameterRowChangeEventHandler TA_ConceptTemplateParameterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateParameterRowChangeEventHandler TA_ConceptTemplateParameterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateParameterRowChangeEventHandler TA_ConceptTemplateParameterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateParameterRowChangeEventHandler TA_ConceptTemplateParameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_ConceptTemplateParameterRow(TA_ConceptTemplateParameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRow AddTA_ConceptTemplateParameterRow(TA_ConceptTemplateRow parentTA_ConceptTemplateRowByFK_TA_ConceptTemplateParameter_TA_ConceptTemplate, string ConceptTmpParam_Name, string ConceptTmpParam_ColumnName, string ConceptTmpParam_TableName) {
                TA_ConceptTemplateParameterRow rowTA_ConceptTemplateParameterRow = ((TA_ConceptTemplateParameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ConceptTmpParam_Name,
                        ConceptTmpParam_ColumnName,
                        ConceptTmpParam_TableName};
                if ((parentTA_ConceptTemplateRowByFK_TA_ConceptTemplateParameter_TA_ConceptTemplate != null)) {
                    columnValuesArray[1] = parentTA_ConceptTemplateRowByFK_TA_ConceptTemplateParameter_TA_ConceptTemplate[0];
                }
                rowTA_ConceptTemplateParameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_ConceptTemplateParameterRow);
                return rowTA_ConceptTemplateParameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRow FindByConceptTmpParam_ID(decimal ConceptTmpParam_ID) {
                return ((TA_ConceptTemplateParameterRow)(this.Rows.Find(new object[] {
                            ConceptTmpParam_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_ConceptTemplateParameterDataTable cln = ((TA_ConceptTemplateParameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_ConceptTemplateParameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConceptTmpParam_ID = base.Columns["ConceptTmpParam_ID"];
                this.columnConceptTmpParam_ConceptTemplateId = base.Columns["ConceptTmpParam_ConceptTemplateId"];
                this.columnConceptTmpParam_Name = base.Columns["ConceptTmpParam_Name"];
                this.columnConceptTmpParam_ColumnName = base.Columns["ConceptTmpParam_ColumnName"];
                this.columnConceptTmpParam_TableName = base.Columns["ConceptTmpParam_TableName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConceptTmpParam_ID = new global::System.Data.DataColumn("ConceptTmpParam_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpParam_ID);
                this.columnConceptTmpParam_ConceptTemplateId = new global::System.Data.DataColumn("ConceptTmpParam_ConceptTemplateId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpParam_ConceptTemplateId);
                this.columnConceptTmpParam_Name = new global::System.Data.DataColumn("ConceptTmpParam_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpParam_Name);
                this.columnConceptTmpParam_ColumnName = new global::System.Data.DataColumn("ConceptTmpParam_ColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpParam_ColumnName);
                this.columnConceptTmpParam_TableName = new global::System.Data.DataColumn("ConceptTmpParam_TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpParam_TableName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnConceptTmpParam_ID}, true));
                this.columnConceptTmpParam_ID.AutoIncrement = true;
                this.columnConceptTmpParam_ID.AutoIncrementSeed = -1;
                this.columnConceptTmpParam_ID.AutoIncrementStep = -1;
                this.columnConceptTmpParam_ID.AllowDBNull = false;
                this.columnConceptTmpParam_ID.ReadOnly = true;
                this.columnConceptTmpParam_ID.Unique = true;
                this.columnConceptTmpParam_ConceptTemplateId.AllowDBNull = false;
                this.columnConceptTmpParam_Name.AllowDBNull = false;
                this.columnConceptTmpParam_Name.MaxLength = 100;
                this.columnConceptTmpParam_ColumnName.AllowDBNull = false;
                this.columnConceptTmpParam_ColumnName.MaxLength = 50;
                this.columnConceptTmpParam_TableName.AllowDBNull = false;
                this.columnConceptTmpParam_TableName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRow NewTA_ConceptTemplateParameterRow() {
                return ((TA_ConceptTemplateParameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_ConceptTemplateParameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_ConceptTemplateParameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_ConceptTemplateParameterRowChanged != null)) {
                    this.TA_ConceptTemplateParameterRowChanged(this, new TA_ConceptTemplateParameterRowChangeEvent(((TA_ConceptTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_ConceptTemplateParameterRowChanging != null)) {
                    this.TA_ConceptTemplateParameterRowChanging(this, new TA_ConceptTemplateParameterRowChangeEvent(((TA_ConceptTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_ConceptTemplateParameterRowDeleted != null)) {
                    this.TA_ConceptTemplateParameterRowDeleted(this, new TA_ConceptTemplateParameterRowChangeEvent(((TA_ConceptTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_ConceptTemplateParameterRowDeleting != null)) {
                    this.TA_ConceptTemplateParameterRowDeleting(this, new TA_ConceptTemplateParameterRowChangeEvent(((TA_ConceptTemplateParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_ConceptTemplateParameterRow(TA_ConceptTemplateParameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_ConceptTemplateParameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_ConceptTemplateDataTable : global::System.Data.TypedTableBase<TA_ConceptTemplateRow> {
            
            private global::System.Data.DataColumn columnConceptTmp_ID;
            
            private global::System.Data.DataColumn columnConceptTmp_Name;
            
            private global::System.Data.DataColumn columnConceptTmp_Script;
            
            private global::System.Data.DataColumn columnConceptTmp_CSharpCode;
            
            private global::System.Data.DataColumn columnConceptTmp_IdentifierCode;
            
            private global::System.Data.DataColumn columnConceptTmp_CustomCode;
            
            private global::System.Data.DataColumn columnConceptTmp_CustomCategoryCode;
            
            private global::System.Data.DataColumn columnConceptTmp_Type;
            
            private global::System.Data.DataColumn columnConceptTmp_PColumn;
            
            private global::System.Data.DataColumn columnConceptTmp_PersistSituationType;
            
            private global::System.Data.DataColumn columnConceptTmp_EngName;
            
            private global::System.Data.DataColumn columnConceptTmp_FnName;
            
            private global::System.Data.DataColumn columnConceptTmp_KeyColumnName;
            
            private global::System.Data.DataColumn columnConceptTmp_Color;
            
            private global::System.Data.DataColumn columnConceptTmp_IsPeriodic;
            
            private global::System.Data.DataColumn columnConceptTmp_CalcSituationType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateDataTable() {
                this.TableName = "TA_ConceptTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_ConceptTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IDColumn {
                get {
                    return this.columnConceptTmp_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_NameColumn {
                get {
                    return this.columnConceptTmp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_ScriptColumn {
                get {
                    return this.columnConceptTmp_Script;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CSharpCodeColumn {
                get {
                    return this.columnConceptTmp_CSharpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IdentifierCodeColumn {
                get {
                    return this.columnConceptTmp_IdentifierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CustomCodeColumn {
                get {
                    return this.columnConceptTmp_CustomCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CustomCategoryCodeColumn {
                get {
                    return this.columnConceptTmp_CustomCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_TypeColumn {
                get {
                    return this.columnConceptTmp_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_PColumnColumn {
                get {
                    return this.columnConceptTmp_PColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_PersistSituationTypeColumn {
                get {
                    return this.columnConceptTmp_PersistSituationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_EngNameColumn {
                get {
                    return this.columnConceptTmp_EngName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_FnNameColumn {
                get {
                    return this.columnConceptTmp_FnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_KeyColumnNameColumn {
                get {
                    return this.columnConceptTmp_KeyColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_ColorColumn {
                get {
                    return this.columnConceptTmp_Color;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IsPeriodicColumn {
                get {
                    return this.columnConceptTmp_IsPeriodic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CalcSituationTypeColumn {
                get {
                    return this.columnConceptTmp_CalcSituationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow this[int index] {
                get {
                    return ((TA_ConceptTemplateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_ConceptTemplateRow(TA_ConceptTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow AddTA_ConceptTemplateRow(string ConceptTmp_Name, string ConceptTmp_Script, string ConceptTmp_CSharpCode, int ConceptTmp_IdentifierCode, string ConceptTmp_CustomCode, string ConceptTmp_CustomCategoryCode, short ConceptTmp_Type, string ConceptTmp_PColumn, int ConceptTmp_PersistSituationType, string ConceptTmp_EngName, string ConceptTmp_FnName, string ConceptTmp_KeyColumnName, string ConceptTmp_Color, int ConceptTmp_IsPeriodic, int ConceptTmp_CalcSituationType) {
                TA_ConceptTemplateRow rowTA_ConceptTemplateRow = ((TA_ConceptTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ConceptTmp_Name,
                        ConceptTmp_Script,
                        ConceptTmp_CSharpCode,
                        ConceptTmp_IdentifierCode,
                        ConceptTmp_CustomCode,
                        ConceptTmp_CustomCategoryCode,
                        ConceptTmp_Type,
                        ConceptTmp_PColumn,
                        ConceptTmp_PersistSituationType,
                        ConceptTmp_EngName,
                        ConceptTmp_FnName,
                        ConceptTmp_KeyColumnName,
                        ConceptTmp_Color,
                        ConceptTmp_IsPeriodic,
                        ConceptTmp_CalcSituationType};
                rowTA_ConceptTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_ConceptTemplateRow);
                return rowTA_ConceptTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow FindByConceptTmp_ID(decimal ConceptTmp_ID) {
                return ((TA_ConceptTemplateRow)(this.Rows.Find(new object[] {
                            ConceptTmp_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_ConceptTemplateDataTable cln = ((TA_ConceptTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_ConceptTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConceptTmp_ID = base.Columns["ConceptTmp_ID"];
                this.columnConceptTmp_Name = base.Columns["ConceptTmp_Name"];
                this.columnConceptTmp_Script = base.Columns["ConceptTmp_Script"];
                this.columnConceptTmp_CSharpCode = base.Columns["ConceptTmp_CSharpCode"];
                this.columnConceptTmp_IdentifierCode = base.Columns["ConceptTmp_IdentifierCode"];
                this.columnConceptTmp_CustomCode = base.Columns["ConceptTmp_CustomCode"];
                this.columnConceptTmp_CustomCategoryCode = base.Columns["ConceptTmp_CustomCategoryCode"];
                this.columnConceptTmp_Type = base.Columns["ConceptTmp_Type"];
                this.columnConceptTmp_PColumn = base.Columns["ConceptTmp_PColumn"];
                this.columnConceptTmp_PersistSituationType = base.Columns["ConceptTmp_PersistSituationType"];
                this.columnConceptTmp_EngName = base.Columns["ConceptTmp_EngName"];
                this.columnConceptTmp_FnName = base.Columns["ConceptTmp_FnName"];
                this.columnConceptTmp_KeyColumnName = base.Columns["ConceptTmp_KeyColumnName"];
                this.columnConceptTmp_Color = base.Columns["ConceptTmp_Color"];
                this.columnConceptTmp_IsPeriodic = base.Columns["ConceptTmp_IsPeriodic"];
                this.columnConceptTmp_CalcSituationType = base.Columns["ConceptTmp_CalcSituationType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConceptTmp_ID = new global::System.Data.DataColumn("ConceptTmp_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_ID);
                this.columnConceptTmp_Name = new global::System.Data.DataColumn("ConceptTmp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Name);
                this.columnConceptTmp_Script = new global::System.Data.DataColumn("ConceptTmp_Script", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Script);
                this.columnConceptTmp_CSharpCode = new global::System.Data.DataColumn("ConceptTmp_CSharpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CSharpCode);
                this.columnConceptTmp_IdentifierCode = new global::System.Data.DataColumn("ConceptTmp_IdentifierCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_IdentifierCode);
                this.columnConceptTmp_CustomCode = new global::System.Data.DataColumn("ConceptTmp_CustomCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CustomCode);
                this.columnConceptTmp_CustomCategoryCode = new global::System.Data.DataColumn("ConceptTmp_CustomCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CustomCategoryCode);
                this.columnConceptTmp_Type = new global::System.Data.DataColumn("ConceptTmp_Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Type);
                this.columnConceptTmp_PColumn = new global::System.Data.DataColumn("ConceptTmp_PColumn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_PColumn);
                this.columnConceptTmp_PersistSituationType = new global::System.Data.DataColumn("ConceptTmp_PersistSituationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_PersistSituationType);
                this.columnConceptTmp_EngName = new global::System.Data.DataColumn("ConceptTmp_EngName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_EngName);
                this.columnConceptTmp_FnName = new global::System.Data.DataColumn("ConceptTmp_FnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_FnName);
                this.columnConceptTmp_KeyColumnName = new global::System.Data.DataColumn("ConceptTmp_KeyColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_KeyColumnName);
                this.columnConceptTmp_Color = new global::System.Data.DataColumn("ConceptTmp_Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Color);
                this.columnConceptTmp_IsPeriodic = new global::System.Data.DataColumn("ConceptTmp_IsPeriodic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_IsPeriodic);
                this.columnConceptTmp_CalcSituationType = new global::System.Data.DataColumn("ConceptTmp_CalcSituationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CalcSituationType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnConceptTmp_ID}, true));
                this.columnConceptTmp_ID.AutoIncrement = true;
                this.columnConceptTmp_ID.AutoIncrementSeed = 1;
                this.columnConceptTmp_ID.AllowDBNull = false;
                this.columnConceptTmp_ID.ReadOnly = true;
                this.columnConceptTmp_ID.Unique = true;
                this.columnConceptTmp_Name.AllowDBNull = false;
                this.columnConceptTmp_Name.MaxLength = 100;
                this.columnConceptTmp_Script.AllowDBNull = false;
                this.columnConceptTmp_Script.MaxLength = 1073741823;
                this.columnConceptTmp_CSharpCode.AllowDBNull = false;
                this.columnConceptTmp_CSharpCode.MaxLength = 1073741823;
                this.columnConceptTmp_IdentifierCode.AllowDBNull = false;
                this.columnConceptTmp_CustomCode.MaxLength = 10;
                this.columnConceptTmp_CustomCategoryCode.MaxLength = 10;
                this.columnConceptTmp_Type.AllowDBNull = false;
                this.columnConceptTmp_PColumn.MaxLength = 50;
                this.columnConceptTmp_PersistSituationType.AllowDBNull = false;
                this.columnConceptTmp_EngName.MaxLength = 50;
                this.columnConceptTmp_FnName.MaxLength = 50;
                this.columnConceptTmp_KeyColumnName.MaxLength = 50;
                this.columnConceptTmp_Color.MaxLength = 50;
                this.columnConceptTmp_IsPeriodic.AllowDBNull = false;
                this.columnConceptTmp_CalcSituationType.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow NewTA_ConceptTemplateRow() {
                return ((TA_ConceptTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_ConceptTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_ConceptTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_ConceptTemplateRowChanged != null)) {
                    this.TA_ConceptTemplateRowChanged(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_ConceptTemplateRowChanging != null)) {
                    this.TA_ConceptTemplateRowChanging(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_ConceptTemplateRowDeleted != null)) {
                    this.TA_ConceptTemplateRowDeleted(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_ConceptTemplateRowDeleting != null)) {
                    this.TA_ConceptTemplateRowDeleting(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_ConceptTemplateRow(TA_ConceptTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_ConceptTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_ConceptTemplateMappingDataTable : global::System.Data.TypedTableBase<TA_ConceptTemplateMappingRow> {
            
            private global::System.Data.DataColumn columnConceptTmpMapping_ID;
            
            private global::System.Data.DataColumn columnConceptTmpMapping_TemplateConditionId;
            
            private global::System.Data.DataColumn columnConceptTmpMapping_ConceptTemplateId;
            
            private global::System.Data.DataColumn columnConceptTmpMapping_Is;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingDataTable() {
                this.TableName = "TA_ConceptTemplateMapping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateMappingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_ConceptTemplateMappingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpMapping_IDColumn {
                get {
                    return this.columnConceptTmpMapping_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpMapping_TemplateConditionIdColumn {
                get {
                    return this.columnConceptTmpMapping_TemplateConditionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpMapping_ConceptTemplateIdColumn {
                get {
                    return this.columnConceptTmpMapping_ConceptTemplateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmpMapping_IsColumn {
                get {
                    return this.columnConceptTmpMapping_Is;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingRow this[int index] {
                get {
                    return ((TA_ConceptTemplateMappingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateMappingRowChangeEventHandler TA_ConceptTemplateMappingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateMappingRowChangeEventHandler TA_ConceptTemplateMappingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateMappingRowChangeEventHandler TA_ConceptTemplateMappingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateMappingRowChangeEventHandler TA_ConceptTemplateMappingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_ConceptTemplateMappingRow(TA_ConceptTemplateMappingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingRow AddTA_ConceptTemplateMappingRow(decimal ConceptTmpMapping_TemplateConditionId, decimal ConceptTmpMapping_ConceptTemplateId, bool ConceptTmpMapping_Is) {
                TA_ConceptTemplateMappingRow rowTA_ConceptTemplateMappingRow = ((TA_ConceptTemplateMappingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ConceptTmpMapping_TemplateConditionId,
                        ConceptTmpMapping_ConceptTemplateId,
                        ConceptTmpMapping_Is};
                rowTA_ConceptTemplateMappingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_ConceptTemplateMappingRow);
                return rowTA_ConceptTemplateMappingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingRow FindByConceptTmpMapping_ID(decimal ConceptTmpMapping_ID) {
                return ((TA_ConceptTemplateMappingRow)(this.Rows.Find(new object[] {
                            ConceptTmpMapping_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_ConceptTemplateMappingDataTable cln = ((TA_ConceptTemplateMappingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_ConceptTemplateMappingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConceptTmpMapping_ID = base.Columns["ConceptTmpMapping_ID"];
                this.columnConceptTmpMapping_TemplateConditionId = base.Columns["ConceptTmpMapping_TemplateConditionId"];
                this.columnConceptTmpMapping_ConceptTemplateId = base.Columns["ConceptTmpMapping_ConceptTemplateId"];
                this.columnConceptTmpMapping_Is = base.Columns["ConceptTmpMapping_Is"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConceptTmpMapping_ID = new global::System.Data.DataColumn("ConceptTmpMapping_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpMapping_ID);
                this.columnConceptTmpMapping_TemplateConditionId = new global::System.Data.DataColumn("ConceptTmpMapping_TemplateConditionId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpMapping_TemplateConditionId);
                this.columnConceptTmpMapping_ConceptTemplateId = new global::System.Data.DataColumn("ConceptTmpMapping_ConceptTemplateId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpMapping_ConceptTemplateId);
                this.columnConceptTmpMapping_Is = new global::System.Data.DataColumn("ConceptTmpMapping_Is", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmpMapping_Is);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnConceptTmpMapping_ID}, true));
                this.columnConceptTmpMapping_ID.AutoIncrement = true;
                this.columnConceptTmpMapping_ID.AutoIncrementSeed = -1;
                this.columnConceptTmpMapping_ID.AutoIncrementStep = -1;
                this.columnConceptTmpMapping_ID.AllowDBNull = false;
                this.columnConceptTmpMapping_ID.ReadOnly = true;
                this.columnConceptTmpMapping_ID.Unique = true;
                this.columnConceptTmpMapping_TemplateConditionId.AllowDBNull = false;
                this.columnConceptTmpMapping_ConceptTemplateId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingRow NewTA_ConceptTemplateMappingRow() {
                return ((TA_ConceptTemplateMappingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_ConceptTemplateMappingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_ConceptTemplateMappingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_ConceptTemplateMappingRowChanged != null)) {
                    this.TA_ConceptTemplateMappingRowChanged(this, new TA_ConceptTemplateMappingRowChangeEvent(((TA_ConceptTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_ConceptTemplateMappingRowChanging != null)) {
                    this.TA_ConceptTemplateMappingRowChanging(this, new TA_ConceptTemplateMappingRowChangeEvent(((TA_ConceptTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_ConceptTemplateMappingRowDeleted != null)) {
                    this.TA_ConceptTemplateMappingRowDeleted(this, new TA_ConceptTemplateMappingRowChangeEvent(((TA_ConceptTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_ConceptTemplateMappingRowDeleting != null)) {
                    this.TA_ConceptTemplateMappingRowDeleting(this, new TA_ConceptTemplateMappingRowChangeEvent(((TA_ConceptTemplateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_ConceptTemplateMappingRow(TA_ConceptTemplateMappingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_ConceptTemplateMappingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tmpWinCategory_viewDataTable : global::System.Data.TypedTableBase<tmpWinCategory_viewRow> {
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnParentName;
            
            private global::System.Data.DataColumn columnChildID;
            
            private global::System.Data.DataColumn columnChildName;
            
            private global::System.Data.DataColumn columnCat_CustomCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewDataTable() {
                this.TableName = "tmpWinCategory_view";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tmpWinCategory_viewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tmpWinCategory_viewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildIDColumn {
                get {
                    return this.columnChildID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildNameColumn {
                get {
                    return this.columnChildName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Cat_CustomCodeColumn {
                get {
                    return this.columnCat_CustomCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewRow this[int index] {
                get {
                    return ((tmpWinCategory_viewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tmpWinCategory_viewRowChangeEventHandler tmpWinCategory_viewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tmpWinCategory_viewRowChangeEventHandler tmpWinCategory_viewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tmpWinCategory_viewRowChangeEventHandler tmpWinCategory_viewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tmpWinCategory_viewRowChangeEventHandler tmpWinCategory_viewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtmpWinCategory_viewRow(tmpWinCategory_viewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewRow AddtmpWinCategory_viewRow(decimal ParentID, string ParentName, decimal ChildID, string ChildName, string Cat_CustomCode) {
                tmpWinCategory_viewRow rowtmpWinCategory_viewRow = ((tmpWinCategory_viewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParentID,
                        ParentName,
                        ChildID,
                        ChildName,
                        Cat_CustomCode};
                rowtmpWinCategory_viewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtmpWinCategory_viewRow);
                return rowtmpWinCategory_viewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewRow FindByParentIDChildID(decimal ParentID, decimal ChildID) {
                return ((tmpWinCategory_viewRow)(this.Rows.Find(new object[] {
                            ParentID,
                            ChildID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tmpWinCategory_viewDataTable cln = ((tmpWinCategory_viewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tmpWinCategory_viewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnParentID = base.Columns["ParentID"];
                this.columnParentName = base.Columns["ParentName"];
                this.columnChildID = base.Columns["ChildID"];
                this.columnChildName = base.Columns["ChildName"];
                this.columnCat_CustomCode = base.Columns["Cat_CustomCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
                this.columnChildID = new global::System.Data.DataColumn("ChildID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildID);
                this.columnChildName = new global::System.Data.DataColumn("ChildName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildName);
                this.columnCat_CustomCode = new global::System.Data.DataColumn("Cat_CustomCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_CustomCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnParentID,
                                this.columnChildID}, true));
                this.columnParentID.AllowDBNull = false;
                this.columnParentName.MaxLength = 200;
                this.columnChildID.AllowDBNull = false;
                this.columnChildName.MaxLength = 200;
                this.columnCat_CustomCode.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewRow NewtmpWinCategory_viewRow() {
                return ((tmpWinCategory_viewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tmpWinCategory_viewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tmpWinCategory_viewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tmpWinCategory_viewRowChanged != null)) {
                    this.tmpWinCategory_viewRowChanged(this, new tmpWinCategory_viewRowChangeEvent(((tmpWinCategory_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tmpWinCategory_viewRowChanging != null)) {
                    this.tmpWinCategory_viewRowChanging(this, new tmpWinCategory_viewRowChangeEvent(((tmpWinCategory_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tmpWinCategory_viewRowDeleted != null)) {
                    this.tmpWinCategory_viewRowDeleted(this, new tmpWinCategory_viewRowChangeEvent(((tmpWinCategory_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tmpWinCategory_viewRowDeleting != null)) {
                    this.tmpWinCategory_viewRowDeleting(this, new tmpWinCategory_viewRowChangeEvent(((tmpWinCategory_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetmpWinCategory_viewRow(tmpWinCategory_viewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tmpWinCategory_viewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_CalculationDateRangeTemplateDataTable : global::System.Data.TypedTableBase<TA_CalculationDateRangeTemplateRow> {
            
            private global::System.Data.DataColumn columncalcDateRng_ID;
            
            private global::System.Data.DataColumn columncalcDateRng_CnpTmpId;
            
            private global::System.Data.DataColumn columncalcDateRng_FromDate;
            
            private global::System.Data.DataColumn columncalcDateRng_ToDate;
            
            private global::System.Data.DataColumn columncalcDateRng_Type;
            
            private global::System.Data.DataColumn columncalcDateRng_Param;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateDataTable() {
                this.TableName = "TA_CalculationDateRangeTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_CalculationDateRangeTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_CalculationDateRangeTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn calcDateRng_IDColumn {
                get {
                    return this.columncalcDateRng_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn calcDateRng_CnpTmpIdColumn {
                get {
                    return this.columncalcDateRng_CnpTmpId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn calcDateRng_FromDateColumn {
                get {
                    return this.columncalcDateRng_FromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn calcDateRng_ToDateColumn {
                get {
                    return this.columncalcDateRng_ToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn calcDateRng_TypeColumn {
                get {
                    return this.columncalcDateRng_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn calcDateRng_ParamColumn {
                get {
                    return this.columncalcDateRng_Param;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRow this[int index] {
                get {
                    return ((TA_CalculationDateRangeTemplateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_CalculationDateRangeTemplateRowChangeEventHandler TA_CalculationDateRangeTemplateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_CalculationDateRangeTemplateRowChangeEventHandler TA_CalculationDateRangeTemplateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_CalculationDateRangeTemplateRowChangeEventHandler TA_CalculationDateRangeTemplateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_CalculationDateRangeTemplateRowChangeEventHandler TA_CalculationDateRangeTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_CalculationDateRangeTemplateRow(TA_CalculationDateRangeTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRow AddTA_CalculationDateRangeTemplateRow(TA_ConceptTemplateRow parentTA_ConceptTemplateRowByFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate, System.DateTime calcDateRng_FromDate, System.DateTime calcDateRng_ToDate, int calcDateRng_Type, int calcDateRng_Param) {
                TA_CalculationDateRangeTemplateRow rowTA_CalculationDateRangeTemplateRow = ((TA_CalculationDateRangeTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        calcDateRng_FromDate,
                        calcDateRng_ToDate,
                        calcDateRng_Type,
                        calcDateRng_Param};
                if ((parentTA_ConceptTemplateRowByFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate != null)) {
                    columnValuesArray[1] = parentTA_ConceptTemplateRowByFK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate[0];
                }
                rowTA_CalculationDateRangeTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_CalculationDateRangeTemplateRow);
                return rowTA_CalculationDateRangeTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRow FindBycalcDateRng_ID(decimal calcDateRng_ID) {
                return ((TA_CalculationDateRangeTemplateRow)(this.Rows.Find(new object[] {
                            calcDateRng_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_CalculationDateRangeTemplateDataTable cln = ((TA_CalculationDateRangeTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_CalculationDateRangeTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncalcDateRng_ID = base.Columns["calcDateRng_ID"];
                this.columncalcDateRng_CnpTmpId = base.Columns["calcDateRng_CnpTmpId"];
                this.columncalcDateRng_FromDate = base.Columns["calcDateRng_FromDate"];
                this.columncalcDateRng_ToDate = base.Columns["calcDateRng_ToDate"];
                this.columncalcDateRng_Type = base.Columns["calcDateRng_Type"];
                this.columncalcDateRng_Param = base.Columns["calcDateRng_Param"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncalcDateRng_ID = new global::System.Data.DataColumn("calcDateRng_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalcDateRng_ID);
                this.columncalcDateRng_CnpTmpId = new global::System.Data.DataColumn("calcDateRng_CnpTmpId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalcDateRng_CnpTmpId);
                this.columncalcDateRng_FromDate = new global::System.Data.DataColumn("calcDateRng_FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalcDateRng_FromDate);
                this.columncalcDateRng_ToDate = new global::System.Data.DataColumn("calcDateRng_ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalcDateRng_ToDate);
                this.columncalcDateRng_Type = new global::System.Data.DataColumn("calcDateRng_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalcDateRng_Type);
                this.columncalcDateRng_Param = new global::System.Data.DataColumn("calcDateRng_Param", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalcDateRng_Param);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncalcDateRng_ID}, true));
                this.columncalcDateRng_ID.AutoIncrement = true;
                this.columncalcDateRng_ID.AutoIncrementSeed = -1;
                this.columncalcDateRng_ID.AutoIncrementStep = -1;
                this.columncalcDateRng_ID.AllowDBNull = false;
                this.columncalcDateRng_ID.ReadOnly = true;
                this.columncalcDateRng_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRow NewTA_CalculationDateRangeTemplateRow() {
                return ((TA_CalculationDateRangeTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_CalculationDateRangeTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_CalculationDateRangeTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_CalculationDateRangeTemplateRowChanged != null)) {
                    this.TA_CalculationDateRangeTemplateRowChanged(this, new TA_CalculationDateRangeTemplateRowChangeEvent(((TA_CalculationDateRangeTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_CalculationDateRangeTemplateRowChanging != null)) {
                    this.TA_CalculationDateRangeTemplateRowChanging(this, new TA_CalculationDateRangeTemplateRowChangeEvent(((TA_CalculationDateRangeTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_CalculationDateRangeTemplateRowDeleted != null)) {
                    this.TA_CalculationDateRangeTemplateRowDeleted(this, new TA_CalculationDateRangeTemplateRowChangeEvent(((TA_CalculationDateRangeTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_CalculationDateRangeTemplateRowDeleting != null)) {
                    this.TA_CalculationDateRangeTemplateRowDeleting(this, new TA_CalculationDateRangeTemplateRowChangeEvent(((TA_CalculationDateRangeTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_CalculationDateRangeTemplateRow(TA_CalculationDateRangeTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_CalculationDateRangeTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_RuleTemplateDataTable : global::System.Data.TypedTableBase<TA_RuleTemplateRow> {
            
            private global::System.Data.DataColumn columnRuleTmp_ID;
            
            private global::System.Data.DataColumn columnRuleTmp_Name;
            
            private global::System.Data.DataColumn columnRuleTmp_Script;
            
            private global::System.Data.DataColumn columnRuleTmp_CSharpCode;
            
            private global::System.Data.DataColumn columnRuleTmp_CustomCode;
            
            private global::System.Data.DataColumn columnRuleTmp_CustomCategoryCode;
            
            private global::System.Data.DataColumn columnRuleTmp_Order;
            
            private global::System.Data.DataColumn columnRuleTmp_IsPeriodic;
            
            private global::System.Data.DataColumn columnRuleTmp_IdentifierCode;
            
            private global::System.Data.DataColumn columnRuleTmp_RuleTypeId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateDataTable() {
                this.TableName = "TA_RuleTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_RuleTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_IDColumn {
                get {
                    return this.columnRuleTmp_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_NameColumn {
                get {
                    return this.columnRuleTmp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_ScriptColumn {
                get {
                    return this.columnRuleTmp_Script;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_CSharpCodeColumn {
                get {
                    return this.columnRuleTmp_CSharpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_CustomCodeColumn {
                get {
                    return this.columnRuleTmp_CustomCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_CustomCategoryCodeColumn {
                get {
                    return this.columnRuleTmp_CustomCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_OrderColumn {
                get {
                    return this.columnRuleTmp_Order;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_IsPeriodicColumn {
                get {
                    return this.columnRuleTmp_IsPeriodic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_IdentifierCodeColumn {
                get {
                    return this.columnRuleTmp_IdentifierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleTmp_RuleTypeIdColumn {
                get {
                    return this.columnRuleTmp_RuleTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow this[int index] {
                get {
                    return ((TA_RuleTemplateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateRowChangeEventHandler TA_RuleTemplateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateRowChangeEventHandler TA_RuleTemplateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateRowChangeEventHandler TA_RuleTemplateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTemplateRowChangeEventHandler TA_RuleTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_RuleTemplateRow(TA_RuleTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow AddTA_RuleTemplateRow(string RuleTmp_Name, string RuleTmp_Script, string RuleTmp_CSharpCode, string RuleTmp_CustomCode, string RuleTmp_CustomCategoryCode, int RuleTmp_Order, bool RuleTmp_IsPeriodic, int RuleTmp_IdentifierCode, TA_RuleTypeRow parentTA_RuleTypeRowByFK_TA_RuleTemplate_TA_OrginRuleType) {
                TA_RuleTemplateRow rowTA_RuleTemplateRow = ((TA_RuleTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RuleTmp_Name,
                        RuleTmp_Script,
                        RuleTmp_CSharpCode,
                        RuleTmp_CustomCode,
                        RuleTmp_CustomCategoryCode,
                        RuleTmp_Order,
                        RuleTmp_IsPeriodic,
                        RuleTmp_IdentifierCode,
                        null};
                if ((parentTA_RuleTypeRowByFK_TA_RuleTemplate_TA_OrginRuleType != null)) {
                    columnValuesArray[9] = parentTA_RuleTypeRowByFK_TA_RuleTemplate_TA_OrginRuleType[0];
                }
                rowTA_RuleTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_RuleTemplateRow);
                return rowTA_RuleTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow FindByRuleTmp_ID(decimal RuleTmp_ID) {
                return ((TA_RuleTemplateRow)(this.Rows.Find(new object[] {
                            RuleTmp_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_RuleTemplateDataTable cln = ((TA_RuleTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_RuleTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRuleTmp_ID = base.Columns["RuleTmp_ID"];
                this.columnRuleTmp_Name = base.Columns["RuleTmp_Name"];
                this.columnRuleTmp_Script = base.Columns["RuleTmp_Script"];
                this.columnRuleTmp_CSharpCode = base.Columns["RuleTmp_CSharpCode"];
                this.columnRuleTmp_CustomCode = base.Columns["RuleTmp_CustomCode"];
                this.columnRuleTmp_CustomCategoryCode = base.Columns["RuleTmp_CustomCategoryCode"];
                this.columnRuleTmp_Order = base.Columns["RuleTmp_Order"];
                this.columnRuleTmp_IsPeriodic = base.Columns["RuleTmp_IsPeriodic"];
                this.columnRuleTmp_IdentifierCode = base.Columns["RuleTmp_IdentifierCode"];
                this.columnRuleTmp_RuleTypeId = base.Columns["RuleTmp_RuleTypeId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRuleTmp_ID = new global::System.Data.DataColumn("RuleTmp_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_ID);
                this.columnRuleTmp_Name = new global::System.Data.DataColumn("RuleTmp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_Name);
                this.columnRuleTmp_Script = new global::System.Data.DataColumn("RuleTmp_Script", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_Script);
                this.columnRuleTmp_CSharpCode = new global::System.Data.DataColumn("RuleTmp_CSharpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_CSharpCode);
                this.columnRuleTmp_CustomCode = new global::System.Data.DataColumn("RuleTmp_CustomCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_CustomCode);
                this.columnRuleTmp_CustomCategoryCode = new global::System.Data.DataColumn("RuleTmp_CustomCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_CustomCategoryCode);
                this.columnRuleTmp_Order = new global::System.Data.DataColumn("RuleTmp_Order", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_Order);
                this.columnRuleTmp_IsPeriodic = new global::System.Data.DataColumn("RuleTmp_IsPeriodic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_IsPeriodic);
                this.columnRuleTmp_IdentifierCode = new global::System.Data.DataColumn("RuleTmp_IdentifierCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_IdentifierCode);
                this.columnRuleTmp_RuleTypeId = new global::System.Data.DataColumn("RuleTmp_RuleTypeId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleTmp_RuleTypeId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRuleTmp_ID}, true));
                this.columnRuleTmp_ID.AutoIncrement = true;
                this.columnRuleTmp_ID.AutoIncrementSeed = 1;
                this.columnRuleTmp_ID.AllowDBNull = false;
                this.columnRuleTmp_ID.ReadOnly = true;
                this.columnRuleTmp_ID.Unique = true;
                this.columnRuleTmp_Name.AllowDBNull = false;
                this.columnRuleTmp_Name.MaxLength = 10000;
                this.columnRuleTmp_Script.AllowDBNull = false;
                this.columnRuleTmp_Script.MaxLength = 2147483647;
                this.columnRuleTmp_CSharpCode.AllowDBNull = false;
                this.columnRuleTmp_CSharpCode.MaxLength = 2147483647;
                this.columnRuleTmp_CustomCode.MaxLength = 10;
                this.columnRuleTmp_CustomCategoryCode.AllowDBNull = false;
                this.columnRuleTmp_CustomCategoryCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow NewTA_RuleTemplateRow() {
                return ((TA_RuleTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_RuleTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_RuleTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_RuleTemplateRowChanged != null)) {
                    this.TA_RuleTemplateRowChanged(this, new TA_RuleTemplateRowChangeEvent(((TA_RuleTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_RuleTemplateRowChanging != null)) {
                    this.TA_RuleTemplateRowChanging(this, new TA_RuleTemplateRowChangeEvent(((TA_RuleTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_RuleTemplateRowDeleted != null)) {
                    this.TA_RuleTemplateRowDeleted(this, new TA_RuleTemplateRowChangeEvent(((TA_RuleTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_RuleTemplateRowDeleting != null)) {
                    this.TA_RuleTemplateRowDeleting(this, new TA_RuleTemplateRowChangeEvent(((TA_RuleTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_RuleTemplateRow(TA_RuleTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_RuleTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class holidayDataTable : global::System.Data.TypedTableBase<holidayRow> {
            
            private global::System.Data.DataColumn columnholiday_year;
            
            private global::System.Data.DataColumn columnholiday_Month;
            
            private global::System.Data.DataColumn columnholiday_Rasmi;
            
            private global::System.Data.DataColumn columnholiday_NonRasmi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public holidayDataTable() {
                this.TableName = "holiday";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal holidayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected holidayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn holiday_yearColumn {
                get {
                    return this.columnholiday_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn holiday_MonthColumn {
                get {
                    return this.columnholiday_Month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn holiday_RasmiColumn {
                get {
                    return this.columnholiday_Rasmi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn holiday_NonRasmiColumn {
                get {
                    return this.columnholiday_NonRasmi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public holidayRow this[int index] {
                get {
                    return ((holidayRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event holidayRowChangeEventHandler holidayRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event holidayRowChangeEventHandler holidayRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event holidayRowChangeEventHandler holidayRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event holidayRowChangeEventHandler holidayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddholidayRow(holidayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public holidayRow AddholidayRow(short holiday_year, short holiday_Month, string holiday_Rasmi, string holiday_NonRasmi) {
                holidayRow rowholidayRow = ((holidayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        holiday_year,
                        holiday_Month,
                        holiday_Rasmi,
                        holiday_NonRasmi};
                rowholidayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowholidayRow);
                return rowholidayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                holidayDataTable cln = ((holidayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new holidayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnholiday_year = base.Columns["holiday_year"];
                this.columnholiday_Month = base.Columns["holiday_Month"];
                this.columnholiday_Rasmi = base.Columns["holiday_Rasmi"];
                this.columnholiday_NonRasmi = base.Columns["holiday_NonRasmi"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnholiday_year = new global::System.Data.DataColumn("holiday_year", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnholiday_year);
                this.columnholiday_Month = new global::System.Data.DataColumn("holiday_Month", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnholiday_Month);
                this.columnholiday_Rasmi = new global::System.Data.DataColumn("holiday_Rasmi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnholiday_Rasmi);
                this.columnholiday_NonRasmi = new global::System.Data.DataColumn("holiday_NonRasmi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnholiday_NonRasmi);
                this.columnholiday_Rasmi.MaxLength = 31;
                this.columnholiday_NonRasmi.MaxLength = 31;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public holidayRow NewholidayRow() {
                return ((holidayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new holidayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(holidayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.holidayRowChanged != null)) {
                    this.holidayRowChanged(this, new holidayRowChangeEvent(((holidayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.holidayRowChanging != null)) {
                    this.holidayRowChanging(this, new holidayRowChangeEvent(((holidayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.holidayRowDeleted != null)) {
                    this.holidayRowDeleted(this, new holidayRowChangeEvent(((holidayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.holidayRowDeleting != null)) {
                    this.holidayRowDeleting(this, new holidayRowChangeEvent(((holidayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveholidayRow(holidayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "holidayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_RuleTypeDataTable : global::System.Data.TypedTableBase<TA_RuleTypeRow> {
            
            private global::System.Data.DataColumn columnRuleType_ID;
            
            private global::System.Data.DataColumn columnRuleType_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeDataTable() {
                this.TableName = "TA_RuleType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_RuleTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleType_IDColumn {
                get {
                    return this.columnRuleType_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RuleType_NameColumn {
                get {
                    return this.columnRuleType_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRow this[int index] {
                get {
                    return ((TA_RuleTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTypeRowChangeEventHandler TA_RuleTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTypeRowChangeEventHandler TA_RuleTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTypeRowChangeEventHandler TA_RuleTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_RuleTypeRowChangeEventHandler TA_RuleTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_RuleTypeRow(TA_RuleTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRow AddTA_RuleTypeRow(string RuleType_Name) {
                TA_RuleTypeRow rowTA_RuleTypeRow = ((TA_RuleTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RuleType_Name};
                rowTA_RuleTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_RuleTypeRow);
                return rowTA_RuleTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRow FindByRuleType_ID(decimal RuleType_ID) {
                return ((TA_RuleTypeRow)(this.Rows.Find(new object[] {
                            RuleType_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_RuleTypeDataTable cln = ((TA_RuleTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_RuleTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRuleType_ID = base.Columns["RuleType_ID"];
                this.columnRuleType_Name = base.Columns["RuleType_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRuleType_ID = new global::System.Data.DataColumn("RuleType_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleType_ID);
                this.columnRuleType_Name = new global::System.Data.DataColumn("RuleType_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleType_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRuleType_ID}, true));
                this.columnRuleType_ID.AutoIncrement = true;
                this.columnRuleType_ID.AutoIncrementSeed = -1;
                this.columnRuleType_ID.AutoIncrementStep = -1;
                this.columnRuleType_ID.AllowDBNull = false;
                this.columnRuleType_ID.ReadOnly = true;
                this.columnRuleType_ID.Unique = true;
                this.columnRuleType_Name.AllowDBNull = false;
                this.columnRuleType_Name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRow NewTA_RuleTypeRow() {
                return ((TA_RuleTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_RuleTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_RuleTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_RuleTypeRowChanged != null)) {
                    this.TA_RuleTypeRowChanged(this, new TA_RuleTypeRowChangeEvent(((TA_RuleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_RuleTypeRowChanging != null)) {
                    this.TA_RuleTypeRowChanging(this, new TA_RuleTypeRowChangeEvent(((TA_RuleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_RuleTypeRowDeleted != null)) {
                    this.TA_RuleTypeRowDeleted(this, new TA_RuleTypeRowChangeEvent(((TA_RuleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_RuleTypeRowDeleting != null)) {
                    this.TA_RuleTypeRowDeleting(this, new TA_RuleTypeRowChangeEvent(((TA_RuleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_RuleTypeRow(TA_RuleTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClockDataSet ds = new ClockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_RuleTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_RuleTemplateMappingRow : global::System.Data.DataRow {
            
            private TA_RuleTemplateMappingDataTable tableTA_RuleTemplateMapping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTemplateMappingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_RuleTemplateMapping = ((TA_RuleTemplateMappingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RleTmpMapping_ID {
                get {
                    return ((decimal)(this[this.tableTA_RuleTemplateMapping.RleTmpMapping_IDColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateMapping.RleTmpMapping_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RleTmpMapping_TemplateConditionId {
                get {
                    return ((decimal)(this[this.tableTA_RuleTemplateMapping.RleTmpMapping_TemplateConditionIdColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateMapping.RleTmpMapping_TemplateConditionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RleTmpMapping_RuleTemplateId {
                get {
                    return ((decimal)(this[this.tableTA_RuleTemplateMapping.RleTmpMapping_RuleTemplateIdColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateMapping.RleTmpMapping_RuleTemplateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RleTmpMapping_Is {
                get {
                    try {
                        return ((bool)(this[this.tableTA_RuleTemplateMapping.RleTmpMapping_IsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RleTmpMapping_Is\' in table \'TA_RuleTemplateMapping\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplateMapping.RleTmpMapping_IsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRleTmpMapping_IsNull() {
                return this.IsNull(this.tableTA_RuleTemplateMapping.RleTmpMapping_IsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRleTmpMapping_IsNull() {
                this[this.tableTA_RuleTemplateMapping.RleTmpMapping_IsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_RuleTemplateParameterRow : global::System.Data.DataRow {
            
            private TA_RuleTemplateParameterDataTable tableTA_RuleTemplateParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTemplateParameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_RuleTemplateParameter = ((TA_RuleTemplateParameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RuleTmpParam_ID {
                get {
                    return ((decimal)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_IDColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RuleTmpParam_RuleTemplateId {
                get {
                    return ((decimal)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_RuleTemplateIdColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_RuleTemplateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmpParam_Name {
                get {
                    return ((string)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_NameColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmpParam_ColumnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_ColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmpParam_ColumnName\' in table \'TA_RuleTemplateParameter" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_ColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmpParam_TableName {
                get {
                    try {
                        return ((string)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmpParam_TableName\' in table \'TA_RuleTemplateParameter\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TableNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RuleTmpParam_Type {
                get {
                    return ((short)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TypeColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmpParam_Title {
                get {
                    try {
                        return ((string)(this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmpParam_Title\' in table \'TA_RuleTemplateParameter\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow TA_RuleTemplateRow {
                get {
                    return ((TA_RuleTemplateRow)(this.GetParentRow(this.Table.ParentRelations["FK_TA_RuleTemplateParameter_TA_RuleTemplate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TA_RuleTemplateParameter_TA_RuleTemplate"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmpParam_ColumnNameNull() {
                return this.IsNull(this.tableTA_RuleTemplateParameter.RuleTmpParam_ColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmpParam_ColumnNameNull() {
                this[this.tableTA_RuleTemplateParameter.RuleTmpParam_ColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmpParam_TableNameNull() {
                return this.IsNull(this.tableTA_RuleTemplateParameter.RuleTmpParam_TableNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmpParam_TableNameNull() {
                this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TableNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmpParam_TitleNull() {
                return this.IsNull(this.tableTA_RuleTemplateParameter.RuleTmpParam_TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmpParam_TitleNull() {
                this[this.tableTA_RuleTemplateParameter.RuleTmpParam_TitleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_TemplateConditionRow : global::System.Data.DataRow {
            
            private TA_TemplateConditionDataTable tableTA_TemplateCondition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_TemplateConditionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_TemplateCondition = ((TA_TemplateConditionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TmpCondition_ID {
                get {
                    return ((decimal)(this[this.tableTA_TemplateCondition.TmpCondition_IDColumn]));
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TmpCondition_TableName {
                get {
                    try {
                        return ((string)(this[this.tableTA_TemplateCondition.TmpCondition_TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TmpCondition_TableName\' in table \'TA_TemplateCondition\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_TableNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TmpCondition_ColumnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_TemplateCondition.TmpCondition_ColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TmpCondition_ColumnName\' in table \'TA_TemplateCondition\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_ColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TmpCondition_ComparativeOperation {
                get {
                    try {
                        return ((short)(this[this.tableTA_TemplateCondition.TmpCondition_ComparativeOperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TmpCondition_ComparativeOperation\' in table \'TA_TemplateCon" +
                                "dition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_ComparativeOperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TmpCondition_ExpectedValue {
                get {
                    try {
                        return ((decimal)(this[this.tableTA_TemplateCondition.TmpCondition_ExpectedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TmpCondition_ExpectedValue\' in table \'TA_TemplateCondition\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_ExpectedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TmpCondition_ORRleTmpConditionId {
                get {
                    try {
                        return ((decimal)(this[this.tableTA_TemplateCondition.TmpCondition_ORRleTmpConditionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TmpCondition_ORRleTmpConditionId\' in table \'TA_TemplateCond" +
                                "ition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_ORRleTmpConditionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TmpCondition_ANDRleTmpConditionId {
                get {
                    try {
                        return ((decimal)(this[this.tableTA_TemplateCondition.TmpCondition_ANDRleTmpConditionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TmpCondition_ANDRleTmpConditionId\' in table \'TA_TemplateCon" +
                                "dition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_TemplateCondition.TmpCondition_ANDRleTmpConditionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmpCondition_TableNameNull() {
                return this.IsNull(this.tableTA_TemplateCondition.TmpCondition_TableNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmpCondition_TableNameNull() {
                this[this.tableTA_TemplateCondition.TmpCondition_TableNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmpCondition_ColumnNameNull() {
                return this.IsNull(this.tableTA_TemplateCondition.TmpCondition_ColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmpCondition_ColumnNameNull() {
                this[this.tableTA_TemplateCondition.TmpCondition_ColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmpCondition_ComparativeOperationNull() {
                return this.IsNull(this.tableTA_TemplateCondition.TmpCondition_ComparativeOperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmpCondition_ComparativeOperationNull() {
                this[this.tableTA_TemplateCondition.TmpCondition_ComparativeOperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmpCondition_ExpectedValueNull() {
                return this.IsNull(this.tableTA_TemplateCondition.TmpCondition_ExpectedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmpCondition_ExpectedValueNull() {
                this[this.tableTA_TemplateCondition.TmpCondition_ExpectedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmpCondition_ORRleTmpConditionIdNull() {
                return this.IsNull(this.tableTA_TemplateCondition.TmpCondition_ORRleTmpConditionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmpCondition_ORRleTmpConditionIdNull() {
                this[this.tableTA_TemplateCondition.TmpCondition_ORRleTmpConditionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmpCondition_ANDRleTmpConditionIdNull() {
                return this.IsNull(this.tableTA_TemplateCondition.TmpCondition_ANDRleTmpConditionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmpCondition_ANDRleTmpConditionIdNull() {
                this[this.tableTA_TemplateCondition.TmpCondition_ANDRleTmpConditionIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_ConceptTemplateParameterRow : global::System.Data.DataRow {
            
            private TA_ConceptTemplateParameterDataTable tableTA_ConceptTemplateParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateParameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_ConceptTemplateParameter = ((TA_ConceptTemplateParameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmpParam_ID {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_IDColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmpParam_ConceptTemplateId {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_ConceptTemplateIdColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_ConceptTemplateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmpParam_Name {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_NameColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmpParam_ColumnName {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_ColumnNameColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_ColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmpParam_TableName {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_TableNameColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateParameter.ConceptTmpParam_TableNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow TA_ConceptTemplateRow {
                get {
                    return ((TA_ConceptTemplateRow)(this.GetParentRow(this.Table.ParentRelations["FK_TA_ConceptTemplateParameter_TA_ConceptTemplate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TA_ConceptTemplateParameter_TA_ConceptTemplate"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_ConceptTemplateRow : global::System.Data.DataRow {
            
            private TA_ConceptTemplateDataTable tableTA_ConceptTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_ConceptTemplate = ((TA_ConceptTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmp_ID {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplate.ConceptTmp_IDColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Name {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_NameColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Script {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_ScriptColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_ScriptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CSharpCode {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_CSharpCodeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CSharpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_IdentifierCode {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_IdentifierCodeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_IdentifierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CustomCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_CustomCode\' in table \'TA_ConceptTemplate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CustomCategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_CustomCategoryCode\' in table \'TA_ConceptTemplate" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ConceptTmp_Type {
                get {
                    return ((short)(this[this.tableTA_ConceptTemplate.ConceptTmp_TypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_PColumn {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_PColumn\' in table \'TA_ConceptTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_PersistSituationType {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_PersistSituationTypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_PersistSituationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_EngName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_EngName\' in table \'TA_ConceptTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_FnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_FnName\' in table \'TA_ConceptTemplate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_KeyColumnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_KeyColumnName\' in table \'TA_ConceptTemplate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Color {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_Color\' in table \'TA_ConceptTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_IsPeriodic {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_IsPeriodicColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_IsPeriodicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_CalcSituationType {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_CalcSituationTypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CalcSituationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_CustomCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_CustomCodeNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_CustomCategoryCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_CustomCategoryCodeNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_PColumnNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_PColumnNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_EngNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_EngNameNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_FnNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_FnNameNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_KeyColumnNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_KeyColumnNameNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_ColorNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_ColorNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRow[] GetTA_CalculationDateRangeTemplateRows() {
                if ((this.Table.ChildRelations["FK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate"] == null)) {
                    return new TA_CalculationDateRangeTemplateRow[0];
                }
                else {
                    return ((TA_CalculationDateRangeTemplateRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRow[] GetTA_ConceptTemplateParameterRows() {
                if ((this.Table.ChildRelations["FK_TA_ConceptTemplateParameter_TA_ConceptTemplate"] == null)) {
                    return new TA_ConceptTemplateParameterRow[0];
                }
                else {
                    return ((TA_ConceptTemplateParameterRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TA_ConceptTemplateParameter_TA_ConceptTemplate"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_ConceptTemplateMappingRow : global::System.Data.DataRow {
            
            private TA_ConceptTemplateMappingDataTable tableTA_ConceptTemplateMapping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateMappingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_ConceptTemplateMapping = ((TA_ConceptTemplateMappingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmpMapping_ID {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_IDColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmpMapping_TemplateConditionId {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_TemplateConditionIdColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_TemplateConditionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmpMapping_ConceptTemplateId {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_ConceptTemplateIdColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_ConceptTemplateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConceptTmpMapping_Is {
                get {
                    try {
                        return ((bool)(this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_IsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmpMapping_Is\' in table \'TA_ConceptTemplateMapping\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_IsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmpMapping_IsNull() {
                return this.IsNull(this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_IsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmpMapping_IsNull() {
                this[this.tableTA_ConceptTemplateMapping.ConceptTmpMapping_IsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tmpWinCategory_viewRow : global::System.Data.DataRow {
            
            private tmpWinCategory_viewDataTable tabletmpWinCategory_view;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tmpWinCategory_viewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletmpWinCategory_view = ((tmpWinCategory_viewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ParentID {
                get {
                    return ((decimal)(this[this.tabletmpWinCategory_view.ParentIDColumn]));
                }
                set {
                    this[this.tabletmpWinCategory_view.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tabletmpWinCategory_view.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'tmpWinCategory_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletmpWinCategory_view.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ChildID {
                get {
                    return ((decimal)(this[this.tabletmpWinCategory_view.ChildIDColumn]));
                }
                set {
                    this[this.tabletmpWinCategory_view.ChildIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChildName {
                get {
                    try {
                        return ((string)(this[this.tabletmpWinCategory_view.ChildNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildName\' in table \'tmpWinCategory_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletmpWinCategory_view.ChildNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cat_CustomCode {
                get {
                    try {
                        return ((string)(this[this.tabletmpWinCategory_view.Cat_CustomCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_CustomCode\' in table \'tmpWinCategory_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletmpWinCategory_view.Cat_CustomCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentNameNull() {
                return this.IsNull(this.tabletmpWinCategory_view.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentNameNull() {
                this[this.tabletmpWinCategory_view.ParentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChildNameNull() {
                return this.IsNull(this.tabletmpWinCategory_view.ChildNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChildNameNull() {
                this[this.tabletmpWinCategory_view.ChildNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCat_CustomCodeNull() {
                return this.IsNull(this.tabletmpWinCategory_view.Cat_CustomCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCat_CustomCodeNull() {
                this[this.tabletmpWinCategory_view.Cat_CustomCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_CalculationDateRangeTemplateRow : global::System.Data.DataRow {
            
            private TA_CalculationDateRangeTemplateDataTable tableTA_CalculationDateRangeTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_CalculationDateRangeTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_CalculationDateRangeTemplate = ((TA_CalculationDateRangeTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal calcDateRng_ID {
                get {
                    return ((decimal)(this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_IDColumn]));
                }
                set {
                    this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal calcDateRng_CnpTmpId {
                get {
                    try {
                        return ((decimal)(this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_CnpTmpIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'calcDateRng_CnpTmpId\' in table \'TA_CalculationDateRangeTemp" +
                                "late\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_CnpTmpIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime calcDateRng_FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'calcDateRng_FromDate\' in table \'TA_CalculationDateRangeTemp" +
                                "late\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime calcDateRng_ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'calcDateRng_ToDate\' in table \'TA_CalculationDateRangeTempla" +
                                "te\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int calcDateRng_Type {
                get {
                    try {
                        return ((int)(this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'calcDateRng_Type\' in table \'TA_CalculationDateRangeTemplate" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int calcDateRng_Param {
                get {
                    try {
                        return ((int)(this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_ParamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'calcDateRng_Param\' in table \'TA_CalculationDateRangeTemplat" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_ParamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow TA_ConceptTemplateRow {
                get {
                    return ((TA_ConceptTemplateRow)(this.GetParentRow(this.Table.ParentRelations["FK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TA_CalculationDateRangeTemplate_TA_ConceptTemplate"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscalcDateRng_CnpTmpIdNull() {
                return this.IsNull(this.tableTA_CalculationDateRangeTemplate.calcDateRng_CnpTmpIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcalcDateRng_CnpTmpIdNull() {
                this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_CnpTmpIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscalcDateRng_FromDateNull() {
                return this.IsNull(this.tableTA_CalculationDateRangeTemplate.calcDateRng_FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcalcDateRng_FromDateNull() {
                this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscalcDateRng_ToDateNull() {
                return this.IsNull(this.tableTA_CalculationDateRangeTemplate.calcDateRng_ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcalcDateRng_ToDateNull() {
                this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscalcDateRng_TypeNull() {
                return this.IsNull(this.tableTA_CalculationDateRangeTemplate.calcDateRng_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcalcDateRng_TypeNull() {
                this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscalcDateRng_ParamNull() {
                return this.IsNull(this.tableTA_CalculationDateRangeTemplate.calcDateRng_ParamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcalcDateRng_ParamNull() {
                this[this.tableTA_CalculationDateRangeTemplate.calcDateRng_ParamColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_RuleTemplateRow : global::System.Data.DataRow {
            
            private TA_RuleTemplateDataTable tableTA_RuleTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_RuleTemplate = ((TA_RuleTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RuleTmp_ID {
                get {
                    return ((decimal)(this[this.tableTA_RuleTemplate.RuleTmp_IDColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmp_Name {
                get {
                    return ((string)(this[this.tableTA_RuleTemplate.RuleTmp_NameColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmp_Script {
                get {
                    return ((string)(this[this.tableTA_RuleTemplate.RuleTmp_ScriptColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_ScriptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmp_CSharpCode {
                get {
                    return ((string)(this[this.tableTA_RuleTemplate.RuleTmp_CSharpCodeColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_CSharpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmp_CustomCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_RuleTemplate.RuleTmp_CustomCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmp_CustomCode\' in table \'TA_RuleTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_CustomCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleTmp_CustomCategoryCode {
                get {
                    return ((string)(this[this.tableTA_RuleTemplate.RuleTmp_CustomCategoryCodeColumn]));
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_CustomCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RuleTmp_Order {
                get {
                    try {
                        return ((int)(this[this.tableTA_RuleTemplate.RuleTmp_OrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmp_Order\' in table \'TA_RuleTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_OrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RuleTmp_IsPeriodic {
                get {
                    try {
                        return ((bool)(this[this.tableTA_RuleTemplate.RuleTmp_IsPeriodicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmp_IsPeriodic\' in table \'TA_RuleTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_IsPeriodicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RuleTmp_IdentifierCode {
                get {
                    try {
                        return ((int)(this[this.tableTA_RuleTemplate.RuleTmp_IdentifierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmp_IdentifierCode\' in table \'TA_RuleTemplate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_IdentifierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RuleTmp_RuleTypeId {
                get {
                    try {
                        return ((decimal)(this[this.tableTA_RuleTemplate.RuleTmp_RuleTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleTmp_RuleTypeId\' in table \'TA_RuleTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_RuleTemplate.RuleTmp_RuleTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRow TA_RuleTypeRow {
                get {
                    return ((TA_RuleTypeRow)(this.GetParentRow(this.Table.ParentRelations["FK_TA_RuleTemplate_TA_OrginRuleType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TA_RuleTemplate_TA_OrginRuleType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmp_CustomCodeNull() {
                return this.IsNull(this.tableTA_RuleTemplate.RuleTmp_CustomCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmp_CustomCodeNull() {
                this[this.tableTA_RuleTemplate.RuleTmp_CustomCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmp_OrderNull() {
                return this.IsNull(this.tableTA_RuleTemplate.RuleTmp_OrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmp_OrderNull() {
                this[this.tableTA_RuleTemplate.RuleTmp_OrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmp_IsPeriodicNull() {
                return this.IsNull(this.tableTA_RuleTemplate.RuleTmp_IsPeriodicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmp_IsPeriodicNull() {
                this[this.tableTA_RuleTemplate.RuleTmp_IsPeriodicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmp_IdentifierCodeNull() {
                return this.IsNull(this.tableTA_RuleTemplate.RuleTmp_IdentifierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmp_IdentifierCodeNull() {
                this[this.tableTA_RuleTemplate.RuleTmp_IdentifierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRuleTmp_RuleTypeIdNull() {
                return this.IsNull(this.tableTA_RuleTemplate.RuleTmp_RuleTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRuleTmp_RuleTypeIdNull() {
                this[this.tableTA_RuleTemplate.RuleTmp_RuleTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRow[] GetTA_RuleTemplateParameterRows() {
                if ((this.Table.ChildRelations["FK_TA_RuleTemplateParameter_TA_RuleTemplate"] == null)) {
                    return new TA_RuleTemplateParameterRow[0];
                }
                else {
                    return ((TA_RuleTemplateParameterRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TA_RuleTemplateParameter_TA_RuleTemplate"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class holidayRow : global::System.Data.DataRow {
            
            private holidayDataTable tableholiday;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal holidayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableholiday = ((holidayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short holiday_year {
                get {
                    try {
                        return ((short)(this[this.tableholiday.holiday_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'holiday_year\' in table \'holiday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableholiday.holiday_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short holiday_Month {
                get {
                    try {
                        return ((short)(this[this.tableholiday.holiday_MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'holiday_Month\' in table \'holiday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableholiday.holiday_MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string holiday_Rasmi {
                get {
                    try {
                        return ((string)(this[this.tableholiday.holiday_RasmiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'holiday_Rasmi\' in table \'holiday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableholiday.holiday_RasmiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string holiday_NonRasmi {
                get {
                    try {
                        return ((string)(this[this.tableholiday.holiday_NonRasmiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'holiday_NonRasmi\' in table \'holiday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableholiday.holiday_NonRasmiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isholiday_yearNull() {
                return this.IsNull(this.tableholiday.holiday_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setholiday_yearNull() {
                this[this.tableholiday.holiday_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isholiday_MonthNull() {
                return this.IsNull(this.tableholiday.holiday_MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setholiday_MonthNull() {
                this[this.tableholiday.holiday_MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isholiday_RasmiNull() {
                return this.IsNull(this.tableholiday.holiday_RasmiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setholiday_RasmiNull() {
                this[this.tableholiday.holiday_RasmiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isholiday_NonRasmiNull() {
                return this.IsNull(this.tableholiday.holiday_NonRasmiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setholiday_NonRasmiNull() {
                this[this.tableholiday.holiday_NonRasmiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_RuleTypeRow : global::System.Data.DataRow {
            
            private TA_RuleTypeDataTable tableTA_RuleType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_RuleTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_RuleType = ((TA_RuleTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RuleType_ID {
                get {
                    return ((decimal)(this[this.tableTA_RuleType.RuleType_IDColumn]));
                }
                set {
                    this[this.tableTA_RuleType.RuleType_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RuleType_Name {
                get {
                    return ((string)(this[this.tableTA_RuleType.RuleType_NameColumn]));
                }
                set {
                    this[this.tableTA_RuleType.RuleType_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow[] GetTA_RuleTemplateRows() {
                if ((this.Table.ChildRelations["FK_TA_RuleTemplate_TA_OrginRuleType"] == null)) {
                    return new TA_RuleTemplateRow[0];
                }
                else {
                    return ((TA_RuleTemplateRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TA_RuleTemplate_TA_OrginRuleType"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_RuleTemplateMappingRowChangeEvent : global::System.EventArgs {
            
            private TA_RuleTemplateMappingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingRowChangeEvent(TA_RuleTemplateMappingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateMappingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_RuleTemplateParameterRowChangeEvent : global::System.EventArgs {
            
            private TA_RuleTemplateParameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRowChangeEvent(TA_RuleTemplateParameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateParameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_TemplateConditionRowChangeEvent : global::System.EventArgs {
            
            private TA_TemplateConditionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionRowChangeEvent(TA_TemplateConditionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_TemplateConditionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_ConceptTemplateParameterRowChangeEvent : global::System.EventArgs {
            
            private TA_ConceptTemplateParameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRowChangeEvent(TA_ConceptTemplateParameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateParameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_ConceptTemplateRowChangeEvent : global::System.EventArgs {
            
            private TA_ConceptTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRowChangeEvent(TA_ConceptTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_ConceptTemplateMappingRowChangeEvent : global::System.EventArgs {
            
            private TA_ConceptTemplateMappingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingRowChangeEvent(TA_ConceptTemplateMappingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateMappingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tmpWinCategory_viewRowChangeEvent : global::System.EventArgs {
            
            private tmpWinCategory_viewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewRowChangeEvent(tmpWinCategory_viewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tmpWinCategory_viewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_CalculationDateRangeTemplateRowChangeEvent : global::System.EventArgs {
            
            private TA_CalculationDateRangeTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRowChangeEvent(TA_CalculationDateRangeTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_CalculationDateRangeTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_RuleTemplateRowChangeEvent : global::System.EventArgs {
            
            private TA_RuleTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRowChangeEvent(TA_RuleTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class holidayRowChangeEvent : global::System.EventArgs {
            
            private holidayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public holidayRowChangeEvent(holidayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public holidayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_RuleTypeRowChangeEvent : global::System.EventArgs {
            
            private TA_RuleTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRowChangeEvent(TA_RuleTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_RuleTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GTS.Clock.AppSetup.DataSet.ClockDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_RuleTemplateMappingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_RuleTemplateMappingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_RuleTemplateMapping";
            tableMapping.ColumnMappings.Add("RleTmpMapping_ID", "RleTmpMapping_ID");
            tableMapping.ColumnMappings.Add("RleTmpMapping_TemplateConditionId", "RleTmpMapping_TemplateConditionId");
            tableMapping.ColumnMappings.Add("RleTmpMapping_RuleTemplateId", "RleTmpMapping_RuleTemplateId");
            tableMapping.ColumnMappings.Add("RleTmpMapping_Is", "RleTmpMapping_Is");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TA_RuleTemplateMapping] WHERE (([RleTmpMapping_ID] = @Original_RleTmpMapping_ID) AND ([RleTmpMapping_TemplateConditionId] = @Original_RleTmpMapping_TemplateConditionId) AND ([RleTmpMapping_RuleTemplateId] = @Original_RleTmpMapping_RuleTemplateId) AND ((@IsNull_RleTmpMapping_Is = 1 AND [RleTmpMapping_Is] IS NULL) OR ([RleTmpMapping_Is] = @Original_RleTmpMapping_Is)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_RuleTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RleTmpMapping_Is", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RleTmpMapping_Is", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RleTmpMapping_Is", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TA_RuleTemplateMapping] ([RleTmpMapping_TemplateConditionId], [RleTmpMapping_RuleTemplateId], [RleTmpMapping_Is]) VALUES (@RleTmpMapping_TemplateConditionId, @RleTmpMapping_RuleTemplateId, @RleTmpMapping_Is);
SELECT RleTmpMapping_ID, RleTmpMapping_TemplateConditionId, RleTmpMapping_RuleTemplateId, RleTmpMapping_Is FROM TA_RuleTemplateMapping WHERE (RleTmpMapping_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_RuleTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RleTmpMapping_Is", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TA_RuleTemplateMapping] SET [RleTmpMapping_TemplateConditionId] = @RleTmpMapping_TemplateConditionId, [RleTmpMapping_RuleTemplateId] = @RleTmpMapping_RuleTemplateId, [RleTmpMapping_Is] = @RleTmpMapping_Is WHERE (([RleTmpMapping_ID] = @Original_RleTmpMapping_ID) AND ([RleTmpMapping_TemplateConditionId] = @Original_RleTmpMapping_TemplateConditionId) AND ([RleTmpMapping_RuleTemplateId] = @Original_RleTmpMapping_RuleTemplateId) AND ((@IsNull_RleTmpMapping_Is = 1 AND [RleTmpMapping_Is] IS NULL) OR ([RleTmpMapping_Is] = @Original_RleTmpMapping_Is)));
SELECT RleTmpMapping_ID, RleTmpMapping_TemplateConditionId, RleTmpMapping_RuleTemplateId, RleTmpMapping_Is FROM TA_RuleTemplateMapping WHERE (RleTmpMapping_ID = @RleTmpMapping_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_RuleTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RleTmpMapping_Is", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_RuleTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RleTmpMapping_Is", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RleTmpMapping_Is", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RleTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RleTmpMapping_Is", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RleTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "RleTmpMapping_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RleTmpMapping_ID, RleTmpMapping_TemplateConditionId, RleTmpMapping_RuleTem" +
                "plateId, RleTmpMapping_Is FROM dbo.TA_RuleTemplateMapping";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_RuleTemplateMappingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_RuleTemplateMappingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_RuleTemplateMappingDataTable dataTable = new ClockDataSet.TA_RuleTemplateMappingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_RuleTemplateMappingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_RuleTemplateMapping");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_RleTmpMapping_ID, decimal Original_RleTmpMapping_TemplateConditionId, decimal Original_RleTmpMapping_RuleTemplateId, global::System.Nullable<bool> Original_RleTmpMapping_Is) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_RleTmpMapping_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_RleTmpMapping_TemplateConditionId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_RleTmpMapping_RuleTemplateId));
            if ((Original_RleTmpMapping_Is.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_RleTmpMapping_Is.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal RleTmpMapping_TemplateConditionId, decimal RleTmpMapping_RuleTemplateId, global::System.Nullable<bool> RleTmpMapping_Is) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(RleTmpMapping_TemplateConditionId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(RleTmpMapping_RuleTemplateId));
            if ((RleTmpMapping_Is.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(RleTmpMapping_Is.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal RleTmpMapping_TemplateConditionId, decimal RleTmpMapping_RuleTemplateId, global::System.Nullable<bool> RleTmpMapping_Is, decimal Original_RleTmpMapping_ID, decimal Original_RleTmpMapping_TemplateConditionId, decimal Original_RleTmpMapping_RuleTemplateId, global::System.Nullable<bool> Original_RleTmpMapping_Is, decimal RleTmpMapping_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(RleTmpMapping_TemplateConditionId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(RleTmpMapping_RuleTemplateId));
            if ((RleTmpMapping_Is.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(RleTmpMapping_Is.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_RleTmpMapping_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_RleTmpMapping_TemplateConditionId));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_RleTmpMapping_RuleTemplateId));
            if ((Original_RleTmpMapping_Is.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Original_RleTmpMapping_Is.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(RleTmpMapping_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal RleTmpMapping_TemplateConditionId, decimal RleTmpMapping_RuleTemplateId, global::System.Nullable<bool> RleTmpMapping_Is, decimal Original_RleTmpMapping_ID, decimal Original_RleTmpMapping_TemplateConditionId, decimal Original_RleTmpMapping_RuleTemplateId, global::System.Nullable<bool> Original_RleTmpMapping_Is) {
            return this.Update(RleTmpMapping_TemplateConditionId, RleTmpMapping_RuleTemplateId, RleTmpMapping_Is, Original_RleTmpMapping_ID, Original_RleTmpMapping_TemplateConditionId, Original_RleTmpMapping_RuleTemplateId, Original_RleTmpMapping_Is, Original_RleTmpMapping_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_RuleTemplateParameterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_RuleTemplateParameterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_RuleTemplateParameter";
            tableMapping.ColumnMappings.Add("RuleTmpParam_ID", "RuleTmpParam_ID");
            tableMapping.ColumnMappings.Add("RuleTmpParam_RuleTemplateId", "RuleTmpParam_RuleTemplateId");
            tableMapping.ColumnMappings.Add("RuleTmpParam_Name", "RuleTmpParam_Name");
            tableMapping.ColumnMappings.Add("RuleTmpParam_ColumnName", "RuleTmpParam_ColumnName");
            tableMapping.ColumnMappings.Add("RuleTmpParam_TableName", "RuleTmpParam_TableName");
            tableMapping.ColumnMappings.Add("RuleTmpParam_Type", "RuleTmpParam_Type");
            tableMapping.ColumnMappings.Add("RuleTmpParam_Title", "RuleTmpParam_Title");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TA_RuleTemplateParameter] WHERE (([RuleTmpParam_ID] = @Original_RuleTmpParam_ID) AND ([RuleTmpParam_RuleTemplateId] = @Original_RuleTmpParam_RuleTemplateId) AND ([RuleTmpParam_Name] = @Original_RuleTmpParam_Name) AND ([RuleTmpParam_ColumnName] = @Original_RuleTmpParam_ColumnName) AND ([RuleTmpParam_TableName] = @Original_RuleTmpParam_TableName) AND ([RuleTmpParam_Type] = @Original_RuleTmpParam_Type))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_RuleTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_ColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_RuleTemplateParameter] ([RuleTmpParam_RuleTemplateId], [RuleTmpParam_Name], [RuleTmpParam_ColumnName], [RuleTmpParam_TableName], [RuleTmpParam_Type], [RuleTmpParam_Title]) VALUES (@RuleTmpParam_RuleTemplateId, @RuleTmpParam_Name, @RuleTmpParam_ColumnName, @RuleTmpParam_TableName, @RuleTmpParam_Type, @RuleTmpParam_Title);";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_RuleTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_ColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TA_RuleTemplateParameter] SET [RuleTmpParam_RuleTemplateId] = @RuleTmpParam_RuleTemplateId, [RuleTmpParam_Name] = @RuleTmpParam_Name, [RuleTmpParam_ColumnName] = @RuleTmpParam_ColumnName, [RuleTmpParam_TableName] = @RuleTmpParam_TableName, [RuleTmpParam_Type] = @RuleTmpParam_Type, [RuleTmpParam_Title] = @RuleTmpParam_Title WHERE (([RuleTmpParam_ID] = @Original_RuleTmpParam_ID) AND ([RuleTmpParam_RuleTemplateId] = @Original_RuleTmpParam_RuleTemplateId) AND ([RuleTmpParam_Name] = @Original_RuleTmpParam_Name) AND ([RuleTmpParam_ColumnName] = @Original_RuleTmpParam_ColumnName) AND ([RuleTmpParam_TableName] = @Original_RuleTmpParam_TableName) AND ([RuleTmpParam_Type] = @Original_RuleTmpParam_Type));
SELECT RuleTmpParam_ID, RuleTmpParam_RuleTemplateId, RuleTmpParam_Name, RuleTmpParam_ColumnName, RuleTmpParam_TableName, RuleTmpParam_Type, RuleTmpParam_Title FROM TA_RuleTemplateParameter WHERE (RuleTmpParam_ID = @RuleTmpParam_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_RuleTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_ColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmpParam_Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_RuleTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmpParam_RuleTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_ColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmpParam_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmpParam_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     RuleTmpParam_ID, RuleTmpParam_RuleTemplateId, RuleTmpParam_Name, RuleT" +
                "mpParam_ColumnName, RuleTmpParam_TableName, \r\n                      RuleTmpParam" +
                "_Type, RuleTmpParam_Title\r\nFROM         TA_RuleTemplateParameter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_RuleTemplateParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_RuleTemplateParameterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_RuleTemplateParameterDataTable dataTable = new ClockDataSet.TA_RuleTemplateParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_RuleTemplateParameterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_RuleTemplateParameter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_TemplateConditionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_TemplateConditionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_TemplateCondition";
            tableMapping.ColumnMappings.Add("TmpCondition_ID", "TmpCondition_ID");
            tableMapping.ColumnMappings.Add("TmpCondition_TableName", "TmpCondition_TableName");
            tableMapping.ColumnMappings.Add("TmpCondition_ColumnName", "TmpCondition_ColumnName");
            tableMapping.ColumnMappings.Add("TmpCondition_ComparativeOperation", "TmpCondition_ComparativeOperation");
            tableMapping.ColumnMappings.Add("TmpCondition_ExpectedValue", "TmpCondition_ExpectedValue");
            tableMapping.ColumnMappings.Add("TmpCondition_ORRleTmpConditionId", "TmpCondition_ORRleTmpConditionId");
            tableMapping.ColumnMappings.Add("TmpCondition_ANDRleTmpConditionId", "TmpCondition_ANDRleTmpConditionId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TA_TemplateCondition] WHERE (([TmpCondition_ID] = @Original_TmpCondition_ID) AND ((@IsNull_TmpCondition_TableName = 1 AND [TmpCondition_TableName] IS NULL) OR ([TmpCondition_TableName] = @Original_TmpCondition_TableName)) AND ((@IsNull_TmpCondition_ColumnName = 1 AND [TmpCondition_ColumnName] IS NULL) OR ([TmpCondition_ColumnName] = @Original_TmpCondition_ColumnName)) AND ((@IsNull_TmpCondition_ComparativeOperation = 1 AND [TmpCondition_ComparativeOperation] IS NULL) OR ([TmpCondition_ComparativeOperation] = @Original_TmpCondition_ComparativeOperation)) AND ((@IsNull_TmpCondition_ExpectedValue = 1 AND [TmpCondition_ExpectedValue] IS NULL) OR ([TmpCondition_ExpectedValue] = @Original_TmpCondition_ExpectedValue)) AND ((@IsNull_TmpCondition_ORRleTmpConditionId = 1 AND [TmpCondition_ORRleTmpConditionId] IS NULL) OR ([TmpCondition_ORRleTmpConditionId] = @Original_TmpCondition_ORRleTmpConditionId)) AND ((@IsNull_TmpCondition_ANDRleTmpConditionId = 1 AND [TmpCondition_ANDRleTmpConditionId] IS NULL) OR ([TmpCondition_ANDRleTmpConditionId] = @Original_TmpCondition_ANDRleTmpConditionId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ComparativeOperation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ComparativeOperation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ComparativeOperation", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ComparativeOperation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ExpectedValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ExpectedValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ExpectedValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ExpectedValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ORRleTmpConditionId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ORRleTmpConditionId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ORRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ORRleTmpConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ANDRleTmpConditionId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ANDRleTmpConditionId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ANDRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ANDRleTmpConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TA_TemplateCondition] ([TmpCondition_TableName], [TmpCondition_ColumnName], [TmpCondition_ComparativeOperation], [TmpCondition_ExpectedValue], [TmpCondition_ORRleTmpConditionId], [TmpCondition_ANDRleTmpConditionId]) VALUES (@TmpCondition_TableName, @TmpCondition_ColumnName, @TmpCondition_ComparativeOperation, @TmpCondition_ExpectedValue, @TmpCondition_ORRleTmpConditionId, @TmpCondition_ANDRleTmpConditionId);
SELECT TmpCondition_ID, TmpCondition_TableName, TmpCondition_ColumnName, TmpCondition_ComparativeOperation, TmpCondition_ExpectedValue, TmpCondition_ORRleTmpConditionId, TmpCondition_ANDRleTmpConditionId FROM TA_TemplateCondition WHERE (TmpCondition_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ComparativeOperation", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ComparativeOperation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ExpectedValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ExpectedValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ORRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ORRleTmpConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ANDRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ANDRleTmpConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TA_TemplateCondition] SET [TmpCondition_TableName] = @TmpCondition_" +
                "TableName, [TmpCondition_ColumnName] = @TmpCondition_ColumnName, [TmpCondition_C" +
                "omparativeOperation] = @TmpCondition_ComparativeOperation, [TmpCondition_Expecte" +
                "dValue] = @TmpCondition_ExpectedValue, [TmpCondition_ORRleTmpConditionId] = @Tmp" +
                "Condition_ORRleTmpConditionId, [TmpCondition_ANDRleTmpConditionId] = @TmpConditi" +
                "on_ANDRleTmpConditionId WHERE (([TmpCondition_ID] = @Original_TmpCondition_ID) A" +
                "ND ((@IsNull_TmpCondition_TableName = 1 AND [TmpCondition_TableName] IS NULL) OR" +
                " ([TmpCondition_TableName] = @Original_TmpCondition_TableName)) AND ((@IsNull_Tm" +
                "pCondition_ColumnName = 1 AND [TmpCondition_ColumnName] IS NULL) OR ([TmpConditi" +
                "on_ColumnName] = @Original_TmpCondition_ColumnName)) AND ((@IsNull_TmpCondition_" +
                "ComparativeOperation = 1 AND [TmpCondition_ComparativeOperation] IS NULL) OR ([T" +
                "mpCondition_ComparativeOperation] = @Original_TmpCondition_ComparativeOperation)" +
                ") AND ((@IsNull_TmpCondition_ExpectedValue = 1 AND [TmpCondition_ExpectedValue] " +
                "IS NULL) OR ([TmpCondition_ExpectedValue] = @Original_TmpCondition_ExpectedValue" +
                ")) AND ((@IsNull_TmpCondition_ORRleTmpConditionId = 1 AND [TmpCondition_ORRleTmp" +
                "ConditionId] IS NULL) OR ([TmpCondition_ORRleTmpConditionId] = @Original_TmpCond" +
                "ition_ORRleTmpConditionId)) AND ((@IsNull_TmpCondition_ANDRleTmpConditionId = 1 " +
                "AND [TmpCondition_ANDRleTmpConditionId] IS NULL) OR ([TmpCondition_ANDRleTmpCond" +
                "itionId] = @Original_TmpCondition_ANDRleTmpConditionId)));\r\nSELECT TmpCondition_" +
                "ID, TmpCondition_TableName, TmpCondition_ColumnName, TmpCondition_ComparativeOpe" +
                "ration, TmpCondition_ExpectedValue, TmpCondition_ORRleTmpConditionId, TmpConditi" +
                "on_ANDRleTmpConditionId FROM TA_TemplateCondition WHERE (TmpCondition_ID = @TmpC" +
                "ondition_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ComparativeOperation", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ComparativeOperation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ExpectedValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ExpectedValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ORRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ORRleTmpConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ANDRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ANDRleTmpConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_TableName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_TableName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ComparativeOperation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ComparativeOperation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ComparativeOperation", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ComparativeOperation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ExpectedValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ExpectedValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ExpectedValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ExpectedValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ORRleTmpConditionId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ORRleTmpConditionId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ORRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ORRleTmpConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TmpCondition_ANDRleTmpConditionId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TmpCondition_ANDRleTmpConditionId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TmpCondition_ANDRleTmpConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ANDRleTmpConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TmpCondition_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "TmpCondition_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TmpCondition_ID, TmpCondition_TableName, TmpCondition_ColumnName, TmpCondi" +
                "tion_ComparativeOperation, TmpCondition_ExpectedValue, TmpCondition_ORRleTmpCond" +
                "itionId, TmpCondition_ANDRleTmpConditionId FROM dbo.TA_TemplateCondition";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_TemplateConditionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_TemplateConditionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_TemplateConditionDataTable dataTable = new ClockDataSet.TA_TemplateConditionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_TemplateConditionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_TemplateCondition");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TmpCondition_ID, string Original_TmpCondition_TableName, string Original_TmpCondition_ColumnName, global::System.Nullable<short> Original_TmpCondition_ComparativeOperation, global::System.Nullable<decimal> Original_TmpCondition_ExpectedValue, global::System.Nullable<decimal> Original_TmpCondition_ORRleTmpConditionId, global::System.Nullable<decimal> Original_TmpCondition_ANDRleTmpConditionId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TmpCondition_ID));
            if ((Original_TmpCondition_TableName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TmpCondition_TableName));
            }
            if ((Original_TmpCondition_ColumnName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TmpCondition_ColumnName));
            }
            if ((Original_TmpCondition_ComparativeOperation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_TmpCondition_ComparativeOperation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_TmpCondition_ExpectedValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_TmpCondition_ExpectedValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_TmpCondition_ORRleTmpConditionId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_TmpCondition_ORRleTmpConditionId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_TmpCondition_ANDRleTmpConditionId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_TmpCondition_ANDRleTmpConditionId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TmpCondition_TableName, string TmpCondition_ColumnName, global::System.Nullable<short> TmpCondition_ComparativeOperation, global::System.Nullable<decimal> TmpCondition_ExpectedValue, global::System.Nullable<decimal> TmpCondition_ORRleTmpConditionId, global::System.Nullable<decimal> TmpCondition_ANDRleTmpConditionId) {
            if ((TmpCondition_TableName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TmpCondition_TableName));
            }
            if ((TmpCondition_ColumnName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TmpCondition_ColumnName));
            }
            if ((TmpCondition_ComparativeOperation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(TmpCondition_ComparativeOperation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TmpCondition_ExpectedValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TmpCondition_ExpectedValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TmpCondition_ORRleTmpConditionId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TmpCondition_ORRleTmpConditionId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TmpCondition_ANDRleTmpConditionId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(TmpCondition_ANDRleTmpConditionId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TmpCondition_TableName, string TmpCondition_ColumnName, global::System.Nullable<short> TmpCondition_ComparativeOperation, global::System.Nullable<decimal> TmpCondition_ExpectedValue, global::System.Nullable<decimal> TmpCondition_ORRleTmpConditionId, global::System.Nullable<decimal> TmpCondition_ANDRleTmpConditionId, decimal Original_TmpCondition_ID, string Original_TmpCondition_TableName, string Original_TmpCondition_ColumnName, global::System.Nullable<short> Original_TmpCondition_ComparativeOperation, global::System.Nullable<decimal> Original_TmpCondition_ExpectedValue, global::System.Nullable<decimal> Original_TmpCondition_ORRleTmpConditionId, global::System.Nullable<decimal> Original_TmpCondition_ANDRleTmpConditionId, decimal TmpCondition_ID) {
            if ((TmpCondition_TableName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TmpCondition_TableName));
            }
            if ((TmpCondition_ColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TmpCondition_ColumnName));
            }
            if ((TmpCondition_ComparativeOperation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(TmpCondition_ComparativeOperation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TmpCondition_ExpectedValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TmpCondition_ExpectedValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TmpCondition_ORRleTmpConditionId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TmpCondition_ORRleTmpConditionId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TmpCondition_ANDRleTmpConditionId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TmpCondition_ANDRleTmpConditionId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_TmpCondition_ID));
            if ((Original_TmpCondition_TableName == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TmpCondition_TableName));
            }
            if ((Original_TmpCondition_ColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TmpCondition_ColumnName));
            }
            if ((Original_TmpCondition_ComparativeOperation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(Original_TmpCondition_ComparativeOperation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_TmpCondition_ExpectedValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_TmpCondition_ExpectedValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_TmpCondition_ORRleTmpConditionId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_TmpCondition_ORRleTmpConditionId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_TmpCondition_ANDRleTmpConditionId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_TmpCondition_ANDRleTmpConditionId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(TmpCondition_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TmpCondition_TableName, string TmpCondition_ColumnName, global::System.Nullable<short> TmpCondition_ComparativeOperation, global::System.Nullable<decimal> TmpCondition_ExpectedValue, global::System.Nullable<decimal> TmpCondition_ORRleTmpConditionId, global::System.Nullable<decimal> TmpCondition_ANDRleTmpConditionId, decimal Original_TmpCondition_ID, string Original_TmpCondition_TableName, string Original_TmpCondition_ColumnName, global::System.Nullable<short> Original_TmpCondition_ComparativeOperation, global::System.Nullable<decimal> Original_TmpCondition_ExpectedValue, global::System.Nullable<decimal> Original_TmpCondition_ORRleTmpConditionId, global::System.Nullable<decimal> Original_TmpCondition_ANDRleTmpConditionId) {
            return this.Update(TmpCondition_TableName, TmpCondition_ColumnName, TmpCondition_ComparativeOperation, TmpCondition_ExpectedValue, TmpCondition_ORRleTmpConditionId, TmpCondition_ANDRleTmpConditionId, Original_TmpCondition_ID, Original_TmpCondition_TableName, Original_TmpCondition_ColumnName, Original_TmpCondition_ComparativeOperation, Original_TmpCondition_ExpectedValue, Original_TmpCondition_ORRleTmpConditionId, Original_TmpCondition_ANDRleTmpConditionId, Original_TmpCondition_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_ConceptTemplateParameterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_ConceptTemplateParameterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_ConceptTemplateParameter";
            tableMapping.ColumnMappings.Add("ConceptTmpParam_ID", "ConceptTmpParam_ID");
            tableMapping.ColumnMappings.Add("ConceptTmpParam_ConceptTemplateId", "ConceptTmpParam_ConceptTemplateId");
            tableMapping.ColumnMappings.Add("ConceptTmpParam_Name", "ConceptTmpParam_Name");
            tableMapping.ColumnMappings.Add("ConceptTmpParam_ColumnName", "ConceptTmpParam_ColumnName");
            tableMapping.ColumnMappings.Add("ConceptTmpParam_TableName", "ConceptTmpParam_TableName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TA_ConceptTemplateParameter] WHERE (([ConceptTmpParam_ID] = @Original_ConceptTmpParam_ID) AND ([ConceptTmpParam_ConceptTemplateId] = @Original_ConceptTmpParam_ConceptTemplateId) AND ([ConceptTmpParam_Name] = @Original_ConceptTmpParam_Name) AND ([ConceptTmpParam_ColumnName] = @Original_ConceptTmpParam_ColumnName) AND ([ConceptTmpParam_TableName] = @Original_ConceptTmpParam_TableName))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ConceptTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_ColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TA_ConceptTemplateParameter] ([ConceptTmpParam_ID], [ConceptTmpParam_ConceptTemplateId], [ConceptTmpParam_Name], [ConceptTmpParam_ColumnName], [ConceptTmpParam_TableName]) VALUES (@ConceptTmpParam_ID, @ConceptTmpParam_ConceptTemplateId, @ConceptTmpParam_Name, @ConceptTmpParam_ColumnName, @ConceptTmpParam_TableName);
SELECT ConceptTmpParam_ID, ConceptTmpParam_ConceptTemplateId, ConceptTmpParam_Name, ConceptTmpParam_ColumnName, ConceptTmpParam_TableName FROM TA_ConceptTemplateParameter WHERE (ConceptTmpParam_ID = @ConceptTmpParam_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ConceptTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_ColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TA_ConceptTemplateParameter] SET [ConceptTmpParam_ID] = @ConceptTmpParam_ID, [ConceptTmpParam_ConceptTemplateId] = @ConceptTmpParam_ConceptTemplateId, [ConceptTmpParam_Name] = @ConceptTmpParam_Name, [ConceptTmpParam_ColumnName] = @ConceptTmpParam_ColumnName, [ConceptTmpParam_TableName] = @ConceptTmpParam_TableName WHERE (([ConceptTmpParam_ID] = @Original_ConceptTmpParam_ID) AND ([ConceptTmpParam_ConceptTemplateId] = @Original_ConceptTmpParam_ConceptTemplateId) AND ([ConceptTmpParam_Name] = @Original_ConceptTmpParam_Name) AND ([ConceptTmpParam_ColumnName] = @Original_ConceptTmpParam_ColumnName) AND ([ConceptTmpParam_TableName] = @Original_ConceptTmpParam_TableName));
SELECT ConceptTmpParam_ID, ConceptTmpParam_ConceptTemplateId, ConceptTmpParam_Name, ConceptTmpParam_ColumnName, ConceptTmpParam_TableName FROM TA_ConceptTemplateParameter WHERE (ConceptTmpParam_ID = @ConceptTmpParam_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ConceptTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_ColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_TableName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpParam_ConceptTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_ColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_ColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpParam_TableName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpParam_TableName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ConceptTmpParam_ID, ConceptTmpParam_ConceptTemplateId, ConceptTmpParam_Nam" +
                "e, ConceptTmpParam_ColumnName, ConceptTmpParam_TableName FROM dbo.TA_ConceptTemp" +
                "lateParameter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_ConceptTemplateParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_ConceptTemplateParameterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_ConceptTemplateParameterDataTable dataTable = new ClockDataSet.TA_ConceptTemplateParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_ConceptTemplateParameterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_ConceptTemplateParameter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ConceptTmpParam_ID, decimal Original_ConceptTmpParam_ConceptTemplateId, string Original_ConceptTmpParam_Name, string Original_ConceptTmpParam_ColumnName, string Original_ConceptTmpParam_TableName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ConceptTmpParam_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_ConceptTmpParam_ConceptTemplateId));
            if ((Original_ConceptTmpParam_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmpParam_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ConceptTmpParam_Name));
            }
            if ((Original_ConceptTmpParam_ColumnName == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmpParam_ColumnName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ConceptTmpParam_ColumnName));
            }
            if ((Original_ConceptTmpParam_TableName == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmpParam_TableName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ConceptTmpParam_TableName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ConceptTmpParam_ID, decimal ConceptTmpParam_ConceptTemplateId, string ConceptTmpParam_Name, string ConceptTmpParam_ColumnName, string ConceptTmpParam_TableName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ConceptTmpParam_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ConceptTmpParam_ConceptTemplateId));
            if ((ConceptTmpParam_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmpParam_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ConceptTmpParam_Name));
            }
            if ((ConceptTmpParam_ColumnName == null)) {
                throw new global::System.ArgumentNullException("ConceptTmpParam_ColumnName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ConceptTmpParam_ColumnName));
            }
            if ((ConceptTmpParam_TableName == null)) {
                throw new global::System.ArgumentNullException("ConceptTmpParam_TableName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ConceptTmpParam_TableName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ConceptTmpParam_ID, decimal ConceptTmpParam_ConceptTemplateId, string ConceptTmpParam_Name, string ConceptTmpParam_ColumnName, string ConceptTmpParam_TableName, decimal Original_ConceptTmpParam_ID, decimal Original_ConceptTmpParam_ConceptTemplateId, string Original_ConceptTmpParam_Name, string Original_ConceptTmpParam_ColumnName, string Original_ConceptTmpParam_TableName) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ConceptTmpParam_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ConceptTmpParam_ConceptTemplateId));
            if ((ConceptTmpParam_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmpParam_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ConceptTmpParam_Name));
            }
            if ((ConceptTmpParam_ColumnName == null)) {
                throw new global::System.ArgumentNullException("ConceptTmpParam_ColumnName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ConceptTmpParam_ColumnName));
            }
            if ((ConceptTmpParam_TableName == null)) {
                throw new global::System.ArgumentNullException("ConceptTmpParam_TableName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ConceptTmpParam_TableName));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ConceptTmpParam_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_ConceptTmpParam_ConceptTemplateId));
            if ((Original_ConceptTmpParam_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmpParam_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ConceptTmpParam_Name));
            }
            if ((Original_ConceptTmpParam_ColumnName == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmpParam_ColumnName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ConceptTmpParam_ColumnName));
            }
            if ((Original_ConceptTmpParam_TableName == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmpParam_TableName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ConceptTmpParam_TableName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ConceptTmpParam_ConceptTemplateId, string ConceptTmpParam_Name, string ConceptTmpParam_ColumnName, string ConceptTmpParam_TableName, decimal Original_ConceptTmpParam_ID, decimal Original_ConceptTmpParam_ConceptTemplateId, string Original_ConceptTmpParam_Name, string Original_ConceptTmpParam_ColumnName, string Original_ConceptTmpParam_TableName) {
            return this.Update(Original_ConceptTmpParam_ID, ConceptTmpParam_ConceptTemplateId, ConceptTmpParam_Name, ConceptTmpParam_ColumnName, ConceptTmpParam_TableName, Original_ConceptTmpParam_ID, Original_ConceptTmpParam_ConceptTemplateId, Original_ConceptTmpParam_Name, Original_ConceptTmpParam_ColumnName, Original_ConceptTmpParam_TableName);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_ConceptTemplateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_ConceptTemplateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_ConceptTemplate";
            tableMapping.ColumnMappings.Add("ConceptTmp_ID", "ConceptTmp_ID");
            tableMapping.ColumnMappings.Add("ConceptTmp_Name", "ConceptTmp_Name");
            tableMapping.ColumnMappings.Add("ConceptTmp_Script", "ConceptTmp_Script");
            tableMapping.ColumnMappings.Add("ConceptTmp_CSharpCode", "ConceptTmp_CSharpCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_IdentifierCode", "ConceptTmp_IdentifierCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_CustomCode", "ConceptTmp_CustomCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_CustomCategoryCode", "ConceptTmp_CustomCategoryCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_Type", "ConceptTmp_Type");
            tableMapping.ColumnMappings.Add("ConceptTmp_PColumn", "ConceptTmp_PColumn");
            tableMapping.ColumnMappings.Add("ConceptTmp_PersistSituationType", "ConceptTmp_PersistSituationType");
            tableMapping.ColumnMappings.Add("ConceptTmp_EngName", "ConceptTmp_EngName");
            tableMapping.ColumnMappings.Add("ConceptTmp_FnName", "ConceptTmp_FnName");
            tableMapping.ColumnMappings.Add("ConceptTmp_KeyColumnName", "ConceptTmp_KeyColumnName");
            tableMapping.ColumnMappings.Add("ConceptTmp_Color", "ConceptTmp_Color");
            tableMapping.ColumnMappings.Add("ConceptTmp_IsPeriodic", "ConceptTmp_IsPeriodic");
            tableMapping.ColumnMappings.Add("ConceptTmp_CalcSituationType", "ConceptTmp_CalcSituationType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TA_ConceptTemplate] WHERE (([ConceptTmp_ID] = @Original_ConceptTmp_ID) AND ([ConceptTmp_Name] = @Original_ConceptTmp_Name) AND ([ConceptTmp_IdentifierCode] = @Original_ConceptTmp_IdentifierCode) AND ((@IsNull_ConceptTmp_CustomCode = 1 AND [ConceptTmp_CustomCode] IS NULL) OR ([ConceptTmp_CustomCode] = @Original_ConceptTmp_CustomCode)) AND ((@IsNull_ConceptTmp_CustomCategoryCode = 1 AND [ConceptTmp_CustomCategoryCode] IS NULL) OR ([ConceptTmp_CustomCategoryCode] = @Original_ConceptTmp_CustomCategoryCode)) AND ([ConceptTmp_Type] = @Original_ConceptTmp_Type) AND ((@IsNull_ConceptTmp_PColumn = 1 AND [ConceptTmp_PColumn] IS NULL) OR ([ConceptTmp_PColumn] = @Original_ConceptTmp_PColumn)) AND ([ConceptTmp_PersistSituationType] = @Original_ConceptTmp_PersistSituationType) AND ((@IsNull_ConceptTmp_EngName = 1 AND [ConceptTmp_EngName] IS NULL) OR ([ConceptTmp_EngName] = @Original_ConceptTmp_EngName)) AND ((@IsNull_ConceptTmp_FnName = 1 AND [ConceptTmp_FnName] IS NULL) OR ([ConceptTmp_FnName] = @Original_ConceptTmp_FnName)) AND ((@IsNull_ConceptTmp_KeyColumnName = 1 AND [ConceptTmp_KeyColumnName] IS NULL) OR ([ConceptTmp_KeyColumnName] = @Original_ConceptTmp_KeyColumnName)) AND ((@IsNull_ConceptTmp_Color = 1 AND [ConceptTmp_Color] IS NULL) OR ([ConceptTmp_Color] = @Original_ConceptTmp_Color)) AND ([ConceptTmp_IsPeriodic] = @Original_ConceptTmp_IsPeriodic) AND ([ConceptTmp_CalcSituationType] = @Original_ConceptTmp_CalcSituationType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_PColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_EngName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_FnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_ConceptTemplate] ([ConceptTmp_ID], [ConceptTmp_Name], [ConceptTmp_Script], [ConceptTmp_CSharpCode], [ConceptTmp_IdentifierCode], [ConceptTmp_CustomCode], [ConceptTmp_CustomCategoryCode], [ConceptTmp_Type], [ConceptTmp_PColumn], [ConceptTmp_PersistSituationType], [ConceptTmp_EngName], [ConceptTmp_FnName], [ConceptTmp_KeyColumnName], [ConceptTmp_Color], [ConceptTmp_IsPeriodic], [ConceptTmp_CalcSituationType]) VALUES (@ConceptTmp_ID, @ConceptTmp_Name, @ConceptTmp_Script, @ConceptTmp_CSharpCode, @ConceptTmp_IdentifierCode, @ConceptTmp_CustomCode, @ConceptTmp_CustomCategoryCode, @ConceptTmp_Type, @ConceptTmp_PColumn, @ConceptTmp_PersistSituationType, @ConceptTmp_EngName, @ConceptTmp_FnName, @ConceptTmp_KeyColumnName, @ConceptTmp_Color, @ConceptTmp_IsPeriodic, @ConceptTmp_CalcSituationType);
SELECT ConceptTmp_ID, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType FROM TA_ConceptTemplate WHERE (ConceptTmp_ID = @ConceptTmp_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TA_ConceptTemplate] SET [ConceptTmp_ID] = @ConceptTmp_ID, [ConceptTmp_Nam" +
                "e] = @ConceptTmp_Name, [ConceptTmp_Script] = @ConceptTmp_Script, [ConceptTmp_CSh" +
                "arpCode] = @ConceptTmp_CSharpCode, [ConceptTmp_IdentifierCode] = @ConceptTmp_Ide" +
                "ntifierCode, [ConceptTmp_CustomCode] = @ConceptTmp_CustomCode, [ConceptTmp_Custo" +
                "mCategoryCode] = @ConceptTmp_CustomCategoryCode, [ConceptTmp_Type] = @ConceptTmp" +
                "_Type, [ConceptTmp_PColumn] = @ConceptTmp_PColumn, [ConceptTmp_PersistSituationT" +
                "ype] = @ConceptTmp_PersistSituationType, [ConceptTmp_EngName] = @ConceptTmp_EngN" +
                "ame, [ConceptTmp_FnName] = @ConceptTmp_FnName, [ConceptTmp_KeyColumnName] = @Con" +
                "ceptTmp_KeyColumnName, [ConceptTmp_Color] = @ConceptTmp_Color, [ConceptTmp_IsPer" +
                "iodic] = @ConceptTmp_IsPeriodic, [ConceptTmp_CalcSituationType] = @ConceptTmp_Ca" +
                "lcSituationType WHERE (([ConceptTmp_ID] = @Original_ConceptTmp_ID) AND ([Concept" +
                "Tmp_Name] = @Original_ConceptTmp_Name) AND ([ConceptTmp_IdentifierCode] = @Origi" +
                "nal_ConceptTmp_IdentifierCode) AND ((@IsNull_ConceptTmp_CustomCode = 1 AND [Conc" +
                "eptTmp_CustomCode] IS NULL) OR ([ConceptTmp_CustomCode] = @Original_ConceptTmp_C" +
                "ustomCode)) AND ((@IsNull_ConceptTmp_CustomCategoryCode = 1 AND [ConceptTmp_Cust" +
                "omCategoryCode] IS NULL) OR ([ConceptTmp_CustomCategoryCode] = @Original_Concept" +
                "Tmp_CustomCategoryCode)) AND ([ConceptTmp_Type] = @Original_ConceptTmp_Type) AND" +
                " ((@IsNull_ConceptTmp_PColumn = 1 AND [ConceptTmp_PColumn] IS NULL) OR ([Concept" +
                "Tmp_PColumn] = @Original_ConceptTmp_PColumn)) AND ([ConceptTmp_PersistSituationT" +
                "ype] = @Original_ConceptTmp_PersistSituationType) AND ((@IsNull_ConceptTmp_EngNa" +
                "me = 1 AND [ConceptTmp_EngName] IS NULL) OR ([ConceptTmp_EngName] = @Original_Co" +
                "nceptTmp_EngName)) AND ((@IsNull_ConceptTmp_FnName = 1 AND [ConceptTmp_FnName] I" +
                "S NULL) OR ([ConceptTmp_FnName] = @Original_ConceptTmp_FnName)) AND ((@IsNull_Co" +
                "nceptTmp_KeyColumnName = 1 AND [ConceptTmp_KeyColumnName] IS NULL) OR ([ConceptT" +
                "mp_KeyColumnName] = @Original_ConceptTmp_KeyColumnName)) AND ((@IsNull_ConceptTm" +
                "p_Color = 1 AND [ConceptTmp_Color] IS NULL) OR ([ConceptTmp_Color] = @Original_C" +
                "onceptTmp_Color)) AND ([ConceptTmp_IsPeriodic] = @Original_ConceptTmp_IsPeriodic" +
                ") AND ([ConceptTmp_CalcSituationType] = @Original_ConceptTmp_CalcSituationType))" +
                ";\r\nSELECT ConceptTmp_ID, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCo" +
                "de, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryC" +
                "ode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, Conce" +
                "ptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color, Co" +
                "nceptTmp_IsPeriodic, ConceptTmp_CalcSituationType FROM TA_ConceptTemplate WHERE " +
                "(ConceptTmp_ID = @ConceptTmp_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_PColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_EngName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_FnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ConceptTmp_ID, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, 
                      ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, ConceptTmp_EngName, 
                      ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType
FROM         TA_ConceptTemplate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = new global::System.Data.SqlClient.SqlConnection(global::GTS.Clock.AppSetup.Properties.Settings.Default.GhadirGTSConnectionString);
            this._commandCollection[1].CommandText = @"SELECT ConceptTmp_CSharpCode, ConceptTmp_CalcSituationType, ConceptTmp_Color, ConceptTmp_CustomCategoryCode, ConceptTmp_CustomCode, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_ID, ConceptTmp_IdentifierCode, ConceptTmp_IsPeriodic, ConceptTmp_KeyColumnName, ConceptTmp_Name, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, ConceptTmp_Script, ConceptTmp_Type FROM TA_ConceptTemplate WHERE (ConceptTmp_Type > 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = new global::System.Data.SqlClient.SqlConnection(global::GTS.Clock.AppSetup.Properties.Settings.Default.GhadirGTSConnectionString);
            this._commandCollection[2].CommandText = @"SELECT ConceptTmp_CSharpCode, ConceptTmp_CalcSituationType, ConceptTmp_Color, ConceptTmp_CustomCategoryCode, ConceptTmp_CustomCode, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_ID, ConceptTmp_IdentifierCode, ConceptTmp_IsPeriodic, ConceptTmp_KeyColumnName, ConceptTmp_Name, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, ConceptTmp_Script, ConceptTmp_Type FROM TA_ConceptTemplate WHERE (ConceptTmp_Type > 0)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = new global::System.Data.SqlClient.SqlConnection(global::GTS.Clock.AppSetup.Properties.Settings.Default.GhadirGTSConnectionString);
            this._commandCollection[3].CommandText = @"SELECT ConceptTmp_CSharpCode, ConceptTmp_CalcSituationType, ConceptTmp_Color, ConceptTmp_CustomCategoryCode, ConceptTmp_CustomCode, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_ID, ConceptTmp_IdentifierCode, ConceptTmp_IsPeriodic, ConceptTmp_KeyColumnName, ConceptTmp_Name, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, ConceptTmp_Script, ConceptTmp_Type FROM TA_ConceptTemplate WHERE (ConceptTmp_Type > 0)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_ConceptTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_ConceptTemplateDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_ConceptTemplateDataTable dataTable = new ClockDataSet.TA_ConceptTemplateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(ClockDataSet.TA_ConceptTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(ClockDataSet.TA_ConceptTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy2(ClockDataSet.TA_ConceptTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_ConceptTemplateDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_ConceptTemplate");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ConceptTmp_ID, string Original_ConceptTmp_Name, int Original_ConceptTmp_IdentifierCode, string Original_ConceptTmp_CustomCode, string Original_ConceptTmp_CustomCategoryCode, short Original_ConceptTmp_Type, string Original_ConceptTmp_PColumn, int Original_ConceptTmp_PersistSituationType, string Original_ConceptTmp_EngName, string Original_ConceptTmp_FnName, string Original_ConceptTmp_KeyColumnName, string Original_ConceptTmp_Color, int Original_ConceptTmp_IsPeriodic, int Original_ConceptTmp_CalcSituationType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ConceptTmp_ID));
            if ((Original_ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmp_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ConceptTmp_Name));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ConceptTmp_IdentifierCode));
            if ((Original_ConceptTmp_CustomCode == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ConceptTmp_CustomCode));
            }
            if ((Original_ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ConceptTmp_CustomCategoryCode));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((short)(Original_ConceptTmp_Type));
            if ((Original_ConceptTmp_PColumn == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ConceptTmp_PColumn));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_ConceptTmp_PersistSituationType));
            if ((Original_ConceptTmp_EngName == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ConceptTmp_EngName));
            }
            if ((Original_ConceptTmp_FnName == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ConceptTmp_FnName));
            }
            if ((Original_ConceptTmp_KeyColumnName == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ConceptTmp_KeyColumnName));
            }
            if ((Original_ConceptTmp_Color == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ConceptTmp_Color));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_ConceptTmp_IsPeriodic));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_ConceptTmp_CalcSituationType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal ConceptTmp_ID, 
                    string ConceptTmp_Name, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    int ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    short ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    int ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ConceptTmp_ID));
            if ((ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ConceptTmp_Name));
            }
            if ((ConceptTmp_Script == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Script");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ConceptTmp_Script));
            }
            if ((ConceptTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_CSharpCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ConceptTmp_CSharpCode));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ConceptTmp_IdentifierCode));
            if ((ConceptTmp_CustomCode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ConceptTmp_CustomCode));
            }
            if ((ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ConceptTmp_CustomCategoryCode));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((short)(ConceptTmp_Type));
            if ((ConceptTmp_PColumn == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ConceptTmp_PColumn));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ConceptTmp_PersistSituationType));
            if ((ConceptTmp_EngName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ConceptTmp_EngName));
            }
            if ((ConceptTmp_FnName == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ConceptTmp_FnName));
            }
            if ((ConceptTmp_KeyColumnName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ConceptTmp_KeyColumnName));
            }
            if ((ConceptTmp_Color == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ConceptTmp_Color));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(ConceptTmp_IsPeriodic));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(ConceptTmp_CalcSituationType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ConceptTmp_ID, 
                    string ConceptTmp_Name, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    int ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    short ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    int ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    decimal Original_ConceptTmp_ID, 
                    string Original_ConceptTmp_Name, 
                    int Original_ConceptTmp_IdentifierCode, 
                    string Original_ConceptTmp_CustomCode, 
                    string Original_ConceptTmp_CustomCategoryCode, 
                    short Original_ConceptTmp_Type, 
                    string Original_ConceptTmp_PColumn, 
                    int Original_ConceptTmp_PersistSituationType, 
                    string Original_ConceptTmp_EngName, 
                    string Original_ConceptTmp_FnName, 
                    string Original_ConceptTmp_KeyColumnName, 
                    string Original_ConceptTmp_Color, 
                    int Original_ConceptTmp_IsPeriodic, 
                    int Original_ConceptTmp_CalcSituationType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ConceptTmp_ID));
            if ((ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ConceptTmp_Name));
            }
            if ((ConceptTmp_Script == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Script");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ConceptTmp_Script));
            }
            if ((ConceptTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_CSharpCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ConceptTmp_CSharpCode));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ConceptTmp_IdentifierCode));
            if ((ConceptTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ConceptTmp_CustomCode));
            }
            if ((ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ConceptTmp_CustomCategoryCode));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(ConceptTmp_Type));
            if ((ConceptTmp_PColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ConceptTmp_PColumn));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ConceptTmp_PersistSituationType));
            if ((ConceptTmp_EngName == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ConceptTmp_EngName));
            }
            if ((ConceptTmp_FnName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ConceptTmp_FnName));
            }
            if ((ConceptTmp_KeyColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ConceptTmp_KeyColumnName));
            }
            if ((ConceptTmp_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ConceptTmp_Color));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(ConceptTmp_IsPeriodic));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ConceptTmp_CalcSituationType));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_ConceptTmp_ID));
            if ((Original_ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ConceptTmp_Name));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ConceptTmp_IdentifierCode));
            if ((Original_ConceptTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ConceptTmp_CustomCode));
            }
            if ((Original_ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ConceptTmp_CustomCategoryCode));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((short)(Original_ConceptTmp_Type));
            if ((Original_ConceptTmp_PColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ConceptTmp_PColumn));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_ConceptTmp_PersistSituationType));
            if ((Original_ConceptTmp_EngName == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ConceptTmp_EngName));
            }
            if ((Original_ConceptTmp_FnName == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_ConceptTmp_FnName));
            }
            if ((Original_ConceptTmp_KeyColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ConceptTmp_KeyColumnName));
            }
            if ((Original_ConceptTmp_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ConceptTmp_Color));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_ConceptTmp_IsPeriodic));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_ConceptTmp_CalcSituationType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ConceptTmp_Name, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    int ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    short ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    int ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    decimal Original_ConceptTmp_ID, 
                    string Original_ConceptTmp_Name, 
                    int Original_ConceptTmp_IdentifierCode, 
                    string Original_ConceptTmp_CustomCode, 
                    string Original_ConceptTmp_CustomCategoryCode, 
                    short Original_ConceptTmp_Type, 
                    string Original_ConceptTmp_PColumn, 
                    int Original_ConceptTmp_PersistSituationType, 
                    string Original_ConceptTmp_EngName, 
                    string Original_ConceptTmp_FnName, 
                    string Original_ConceptTmp_KeyColumnName, 
                    string Original_ConceptTmp_Color, 
                    int Original_ConceptTmp_IsPeriodic, 
                    int Original_ConceptTmp_CalcSituationType) {
            return this.Update(Original_ConceptTmp_ID, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType, Original_ConceptTmp_ID, Original_ConceptTmp_Name, Original_ConceptTmp_IdentifierCode, Original_ConceptTmp_CustomCode, Original_ConceptTmp_CustomCategoryCode, Original_ConceptTmp_Type, Original_ConceptTmp_PColumn, Original_ConceptTmp_PersistSituationType, Original_ConceptTmp_EngName, Original_ConceptTmp_FnName, Original_ConceptTmp_KeyColumnName, Original_ConceptTmp_Color, Original_ConceptTmp_IsPeriodic, Original_ConceptTmp_CalcSituationType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_ConceptTemplateMappingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_ConceptTemplateMappingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_ConceptTemplateMapping";
            tableMapping.ColumnMappings.Add("ConceptTmpMapping_ID", "ConceptTmpMapping_ID");
            tableMapping.ColumnMappings.Add("ConceptTmpMapping_TemplateConditionId", "ConceptTmpMapping_TemplateConditionId");
            tableMapping.ColumnMappings.Add("RleTmpMapping_ConceptTemplateId", "ConceptTmpMapping_ConceptTemplateId");
            tableMapping.ColumnMappings.Add("RleTmpMapping_Is", "ConceptTmpMapping_Is");
            tableMapping.ColumnMappings.Add("ConceptTmpMapping_ConceptTemplateId", "ConceptTmpMapping_ConceptTemplateId");
            tableMapping.ColumnMappings.Add("ConceptTmpMapping_Is", "ConceptTmpMapping_Is");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TA_ConceptTemplateMapping] WHERE (([ConceptTmpMapping_ID] = @Original_ConceptTmpMapping_ID) AND ([ConceptTmpMapping_TemplateConditionId] = @Original_ConceptTmpMapping_TemplateConditionId) AND ([ConceptTmpMapping_ConceptTemplateId] = @Original_ConceptTmpMapping_ConceptTemplateId) AND ((@IsNull_ConceptTmpMapping_Is = 1 AND [ConceptTmpMapping_Is] IS NULL) OR ([ConceptTmpMapping_Is] = @Original_ConceptTmpMapping_Is)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ConceptTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmpMapping_Is", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpMapping_Is", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpMapping_Is", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TA_ConceptTemplateMapping] ([ConceptTmpMapping_ID], [ConceptTmpMapping_TemplateConditionId], [ConceptTmpMapping_ConceptTemplateId], [ConceptTmpMapping_Is]) VALUES (@ConceptTmpMapping_ID, @ConceptTmpMapping_TemplateConditionId, @ConceptTmpMapping_ConceptTemplateId, @ConceptTmpMapping_Is);
SELECT ConceptTmpMapping_ID, ConceptTmpMapping_TemplateConditionId, ConceptTmpMapping_ConceptTemplateId, ConceptTmpMapping_Is FROM TA_ConceptTemplateMapping WHERE (ConceptTmpMapping_ID = @ConceptTmpMapping_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ConceptTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpMapping_Is", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TA_ConceptTemplateMapping] SET [ConceptTmpMapping_ID] = @ConceptTmpMapping_ID, [ConceptTmpMapping_TemplateConditionId] = @ConceptTmpMapping_TemplateConditionId, [ConceptTmpMapping_ConceptTemplateId] = @ConceptTmpMapping_ConceptTemplateId, [ConceptTmpMapping_Is] = @ConceptTmpMapping_Is WHERE (([ConceptTmpMapping_ID] = @Original_ConceptTmpMapping_ID) AND ([ConceptTmpMapping_TemplateConditionId] = @Original_ConceptTmpMapping_TemplateConditionId) AND ([ConceptTmpMapping_ConceptTemplateId] = @Original_ConceptTmpMapping_ConceptTemplateId) AND ((@IsNull_ConceptTmpMapping_Is = 1 AND [ConceptTmpMapping_Is] IS NULL) OR ([ConceptTmpMapping_Is] = @Original_ConceptTmpMapping_Is)));
SELECT ConceptTmpMapping_ID, ConceptTmpMapping_TemplateConditionId, ConceptTmpMapping_ConceptTemplateId, ConceptTmpMapping_Is FROM TA_ConceptTemplateMapping WHERE (ConceptTmpMapping_ID = @ConceptTmpMapping_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ConceptTemplateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpMapping_Is", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_TemplateConditionId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_TemplateConditionId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_ConceptTemplateId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmpMapping_ConceptTemplateId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmpMapping_Is", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpMapping_Is", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmpMapping_Is", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmpMapping_Is", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ConceptTmpMapping_ID, ConceptTmpMapping_TemplateConditionId, ConceptTmpMap" +
                "ping_ConceptTemplateId, ConceptTmpMapping_Is FROM dbo.TA_ConceptTemplateMapping";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_ConceptTemplateMappingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_ConceptTemplateMappingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_ConceptTemplateMappingDataTable dataTable = new ClockDataSet.TA_ConceptTemplateMappingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_ConceptTemplateMappingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_ConceptTemplateMapping");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ConceptTmpMapping_ID, decimal Original_ConceptTmpMapping_TemplateConditionId, decimal Original_ConceptTmpMapping_ConceptTemplateId, global::System.Nullable<bool> Original_ConceptTmpMapping_Is) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ConceptTmpMapping_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_ConceptTmpMapping_TemplateConditionId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ConceptTmpMapping_ConceptTemplateId));
            if ((Original_ConceptTmpMapping_Is.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_ConceptTmpMapping_Is.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ConceptTmpMapping_ID, decimal ConceptTmpMapping_TemplateConditionId, decimal ConceptTmpMapping_ConceptTemplateId, global::System.Nullable<bool> ConceptTmpMapping_Is) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ConceptTmpMapping_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ConceptTmpMapping_TemplateConditionId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ConceptTmpMapping_ConceptTemplateId));
            if ((ConceptTmpMapping_Is.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(ConceptTmpMapping_Is.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ConceptTmpMapping_ID, decimal ConceptTmpMapping_TemplateConditionId, decimal ConceptTmpMapping_ConceptTemplateId, global::System.Nullable<bool> ConceptTmpMapping_Is, decimal Original_ConceptTmpMapping_ID, decimal Original_ConceptTmpMapping_TemplateConditionId, decimal Original_ConceptTmpMapping_ConceptTemplateId, global::System.Nullable<bool> Original_ConceptTmpMapping_Is) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ConceptTmpMapping_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ConceptTmpMapping_TemplateConditionId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ConceptTmpMapping_ConceptTemplateId));
            if ((ConceptTmpMapping_Is.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(ConceptTmpMapping_Is.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_ConceptTmpMapping_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ConceptTmpMapping_TemplateConditionId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_ConceptTmpMapping_ConceptTemplateId));
            if ((Original_ConceptTmpMapping_Is.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_ConceptTmpMapping_Is.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ConceptTmpMapping_TemplateConditionId, decimal ConceptTmpMapping_ConceptTemplateId, global::System.Nullable<bool> ConceptTmpMapping_Is, decimal Original_ConceptTmpMapping_ID, decimal Original_ConceptTmpMapping_TemplateConditionId, decimal Original_ConceptTmpMapping_ConceptTemplateId, global::System.Nullable<bool> Original_ConceptTmpMapping_Is) {
            return this.Update(Original_ConceptTmpMapping_ID, ConceptTmpMapping_TemplateConditionId, ConceptTmpMapping_ConceptTemplateId, ConceptTmpMapping_Is, Original_ConceptTmpMapping_ID, Original_ConceptTmpMapping_TemplateConditionId, Original_ConceptTmpMapping_ConceptTemplateId, Original_ConceptTmpMapping_Is);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tmpWinCategory_viewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tmpWinCategory_viewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tmpWinCategory_view";
            tableMapping.ColumnMappings.Add("ParentID", "ParentID");
            tableMapping.ColumnMappings.Add("ParentName", "ParentName");
            tableMapping.ColumnMappings.Add("ChildID", "ChildID");
            tableMapping.ColumnMappings.Add("ChildName", "ChildName");
            tableMapping.ColumnMappings.Add("Cat_CustomCode", "Cat_CustomCode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ParentID, ParentName, ChildID, ChildName, Cat_CustomCode FROM tmpWinCatego" +
                "ry_view";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.tmpWinCategory_viewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.tmpWinCategory_viewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.tmpWinCategory_viewDataTable dataTable = new ClockDataSet.tmpWinCategory_viewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_CalculationDateRangeTemplateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_CalculationDateRangeTemplateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_CalculationDateRangeTemplate";
            tableMapping.ColumnMappings.Add("calcDateRng_ID", "calcDateRng_ID");
            tableMapping.ColumnMappings.Add("calcDateRng_CnpTmpId", "calcDateRng_CnpTmpId");
            tableMapping.ColumnMappings.Add("calcDateRng_FromDate", "calcDateRng_FromDate");
            tableMapping.ColumnMappings.Add("calcDateRng_ToDate", "calcDateRng_ToDate");
            tableMapping.ColumnMappings.Add("calcDateRng_Type", "calcDateRng_Type");
            tableMapping.ColumnMappings.Add("calcDateRng_Param", "calcDateRng_Param");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TA_CalculationDateRangeTemplate] WHERE (([calcDateRng_ID] = @Original_calcDateRng_ID) AND ((@IsNull_calcDateRng_CnpTmpId = 1 AND [calcDateRng_CnpTmpId] IS NULL) OR ([calcDateRng_CnpTmpId] = @Original_calcDateRng_CnpTmpId)) AND ((@IsNull_calcDateRng_FromDate = 1 AND [calcDateRng_FromDate] IS NULL) OR ([calcDateRng_FromDate] = @Original_calcDateRng_FromDate)) AND ((@IsNull_calcDateRng_ToDate = 1 AND [calcDateRng_ToDate] IS NULL) OR ([calcDateRng_ToDate] = @Original_calcDateRng_ToDate)) AND ((@IsNull_calcDateRng_Type = 1 AND [calcDateRng_Type] IS NULL) OR ([calcDateRng_Type] = @Original_calcDateRng_Type)) AND ((@IsNull_calcDateRng_Param = 1 AND [calcDateRng_Param] IS NULL) OR ([calcDateRng_Param] = @Original_calcDateRng_Param)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_CnpTmpId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_CnpTmpId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_CnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_CnpTmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_FromDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_FromDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_FromDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_ToDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_ToDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_ToDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_ToDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_Param", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Param", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_Param", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Param", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_CalculationDateRangeTemplate] ([calcDateRng_CnpTmpId], [calcDateRng_FromDate], [calcDateRng_ToDate], [calcDateRng_Type], [calcDateRng_Param]) VALUES (@calcDateRng_CnpTmpId, @calcDateRng_FromDate, @calcDateRng_ToDate, @calcDateRng_Type, @calcDateRng_Param);
SELECT calcDateRng_ID, calcDateRng_CnpTmpId, calcDateRng_FromDate, calcDateRng_ToDate, calcDateRng_Type, calcDateRng_Param FROM TA_CalculationDateRangeTemplate WHERE (calcDateRng_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_CnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_CnpTmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_FromDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_ToDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_ToDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_Param", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Param", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TA_CalculationDateRangeTemplate] SET [calcDateRng_CnpTmpId] = @calcDateRng_CnpTmpId, [calcDateRng_FromDate] = @calcDateRng_FromDate, [calcDateRng_ToDate] = @calcDateRng_ToDate, [calcDateRng_Type] = @calcDateRng_Type, [calcDateRng_Param] = @calcDateRng_Param WHERE (([calcDateRng_ID] = @Original_calcDateRng_ID) AND ((@IsNull_calcDateRng_CnpTmpId = 1 AND [calcDateRng_CnpTmpId] IS NULL) OR ([calcDateRng_CnpTmpId] = @Original_calcDateRng_CnpTmpId)) AND ((@IsNull_calcDateRng_FromDate = 1 AND [calcDateRng_FromDate] IS NULL) OR ([calcDateRng_FromDate] = @Original_calcDateRng_FromDate)) AND ((@IsNull_calcDateRng_ToDate = 1 AND [calcDateRng_ToDate] IS NULL) OR ([calcDateRng_ToDate] = @Original_calcDateRng_ToDate)) AND ((@IsNull_calcDateRng_Type = 1 AND [calcDateRng_Type] IS NULL) OR ([calcDateRng_Type] = @Original_calcDateRng_Type)) AND ((@IsNull_calcDateRng_Param = 1 AND [calcDateRng_Param] IS NULL) OR ([calcDateRng_Param] = @Original_calcDateRng_Param)));
SELECT calcDateRng_ID, calcDateRng_CnpTmpId, calcDateRng_FromDate, calcDateRng_ToDate, calcDateRng_Type, calcDateRng_Param FROM TA_CalculationDateRangeTemplate WHERE (calcDateRng_ID = @calcDateRng_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_CnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_CnpTmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_FromDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_ToDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_ToDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_Param", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Param", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_CnpTmpId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_CnpTmpId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_CnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_CnpTmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_FromDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_FromDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_FromDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_ToDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_ToDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_ToDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_ToDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_calcDateRng_Param", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Param", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calcDateRng_Param", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calcDateRng_Param", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcDateRng_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "calcDateRng_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     TA_CalculationDateRangeTemplate.*\r\nFROM         TA_CalculationDateRang" +
                "eTemplate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_CalculationDateRangeTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_CalculationDateRangeTemplateDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_CalculationDateRangeTemplateDataTable dataTable = new ClockDataSet.TA_CalculationDateRangeTemplateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_CalculationDateRangeTemplateDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_CalculationDateRangeTemplate");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_calcDateRng_ID, global::System.Nullable<decimal> Original_calcDateRng_CnpTmpId, global::System.Nullable<global::System.DateTime> Original_calcDateRng_FromDate, global::System.Nullable<global::System.DateTime> Original_calcDateRng_ToDate, global::System.Nullable<int> Original_calcDateRng_Type, global::System.Nullable<int> Original_calcDateRng_Param) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_calcDateRng_ID));
            if ((Original_calcDateRng_CnpTmpId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_calcDateRng_CnpTmpId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_FromDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_calcDateRng_FromDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_ToDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_calcDateRng_ToDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_calcDateRng_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_Param.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_calcDateRng_Param.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> calcDateRng_CnpTmpId, global::System.Nullable<global::System.DateTime> calcDateRng_FromDate, global::System.Nullable<global::System.DateTime> calcDateRng_ToDate, global::System.Nullable<int> calcDateRng_Type, global::System.Nullable<int> calcDateRng_Param) {
            if ((calcDateRng_CnpTmpId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(calcDateRng_CnpTmpId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_FromDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(calcDateRng_FromDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_ToDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(calcDateRng_ToDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(calcDateRng_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_Param.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(calcDateRng_Param.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> calcDateRng_CnpTmpId, global::System.Nullable<global::System.DateTime> calcDateRng_FromDate, global::System.Nullable<global::System.DateTime> calcDateRng_ToDate, global::System.Nullable<int> calcDateRng_Type, global::System.Nullable<int> calcDateRng_Param, decimal Original_calcDateRng_ID, global::System.Nullable<decimal> Original_calcDateRng_CnpTmpId, global::System.Nullable<global::System.DateTime> Original_calcDateRng_FromDate, global::System.Nullable<global::System.DateTime> Original_calcDateRng_ToDate, global::System.Nullable<int> Original_calcDateRng_Type, global::System.Nullable<int> Original_calcDateRng_Param, decimal calcDateRng_ID) {
            if ((calcDateRng_CnpTmpId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(calcDateRng_CnpTmpId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_FromDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(calcDateRng_FromDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_ToDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(calcDateRng_ToDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(calcDateRng_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((calcDateRng_Param.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(calcDateRng_Param.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_calcDateRng_ID));
            if ((Original_calcDateRng_CnpTmpId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_calcDateRng_CnpTmpId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_FromDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_calcDateRng_FromDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_ToDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_calcDateRng_ToDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_calcDateRng_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_calcDateRng_Param.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_calcDateRng_Param.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(calcDateRng_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> calcDateRng_CnpTmpId, global::System.Nullable<global::System.DateTime> calcDateRng_FromDate, global::System.Nullable<global::System.DateTime> calcDateRng_ToDate, global::System.Nullable<int> calcDateRng_Type, global::System.Nullable<int> calcDateRng_Param, decimal Original_calcDateRng_ID, global::System.Nullable<decimal> Original_calcDateRng_CnpTmpId, global::System.Nullable<global::System.DateTime> Original_calcDateRng_FromDate, global::System.Nullable<global::System.DateTime> Original_calcDateRng_ToDate, global::System.Nullable<int> Original_calcDateRng_Type, global::System.Nullable<int> Original_calcDateRng_Param) {
            return this.Update(calcDateRng_CnpTmpId, calcDateRng_FromDate, calcDateRng_ToDate, calcDateRng_Type, calcDateRng_Param, Original_calcDateRng_ID, Original_calcDateRng_CnpTmpId, Original_calcDateRng_FromDate, Original_calcDateRng_ToDate, Original_calcDateRng_Type, Original_calcDateRng_Param, Original_calcDateRng_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_RuleTemplateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_RuleTemplateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_RuleTemplate";
            tableMapping.ColumnMappings.Add("RuleTmp_ID", "RuleTmp_ID");
            tableMapping.ColumnMappings.Add("RuleTmp_Name", "RuleTmp_Name");
            tableMapping.ColumnMappings.Add("RuleTmp_Script", "RuleTmp_Script");
            tableMapping.ColumnMappings.Add("RuleTmp_CSharpCode", "RuleTmp_CSharpCode");
            tableMapping.ColumnMappings.Add("RuleTmp_CustomCode", "RuleTmp_CustomCode");
            tableMapping.ColumnMappings.Add("RuleTmp_CustomCategoryCode", "RuleTmp_CustomCategoryCode");
            tableMapping.ColumnMappings.Add("RuleTmp_IsPeriodic", "RuleTmp_IsPeriodic");
            tableMapping.ColumnMappings.Add("RuleTmp_IdentifierCode", "RuleTmp_IdentifierCode");
            tableMapping.ColumnMappings.Add("RuleTmp_RuleTypeId", "RuleTmp_RuleTypeId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TA_RuleTemplate] WHERE (([RuleTmp_ID] = @Original_RuleTmp_ID) AND ((@IsNull_RuleTmp_CustomCode = 1 AND [RuleTmp_CustomCode] IS NULL) OR ([RuleTmp_CustomCode] = @Original_RuleTmp_CustomCode)) AND ([RuleTmp_CustomCategoryCode] = @Original_RuleTmp_CustomCategoryCode) AND ((@IsNull_RuleTmp_RuleTypeId = 1 AND [RuleTmp_RuleTypeId] IS NULL) OR ([RuleTmp_RuleTypeId] = @Original_RuleTmp_RuleTypeId)) AND ((@IsNull_RuleTmp_IdentifierCode = 1 AND [RuleTmp_IdentifierCode] IS NULL) OR ([RuleTmp_IdentifierCode] = @Original_RuleTmp_IdentifierCode)) AND ((@IsNull_RuleTmp_IsPeriodic = 1 AND [RuleTmp_IsPeriodic] IS NULL) OR ([RuleTmp_IsPeriodic] = @Original_RuleTmp_IsPeriodic)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_RuleTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_RuleTypeId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_RuleTypeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_RuleTypeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_RuleTemplate] ( [RuleTmp_Name], [RuleTmp_Script], [RuleTmp_CSharpCode], [RuleTmp_CustomCode], [RuleTmp_CustomCategoryCode], [RuleTmp_RuleTypeId], [RuleTmp_IdentifierCode], [RuleTmp_IsPeriodic]) VALUES (@RuleTmp_Name, @RuleTmp_Script, @RuleTmp_CSharpCode, @RuleTmp_CustomCode, @RuleTmp_CustomCategoryCode, @RuleTmp_RuleTypeId, @RuleTmp_IdentifierCode, @RuleTmp_IsPeriodic);
SELECT RuleTmp_ID, RuleTmp_Name, RuleTmp_Script, RuleTmp_CSharpCode, RuleTmp_CustomCode, RuleTmp_CustomCategoryCode, RuleTmp_RuleTypeId, RuleTmp_IdentifierCode, RuleTmp_IsPeriodic FROM TA_RuleTemplate WHERE (RuleTmp_ID = @RuleTmp_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_RuleTypeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_RuleTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TA_RuleTemplate] SET [RuleTmp_Name] = @RuleTmp_Name, [RuleTmp_Script] = @RuleTmp_Script, [RuleTmp_CSharpCode] = @RuleTmp_CSharpCode, [RuleTmp_CustomCode] = @RuleTmp_CustomCode, [RuleTmp_CustomCategoryCode] = @RuleTmp_CustomCategoryCode, [RuleTmp_RuleTypeId] = @RuleTmp_RuleTypeId, [RuleTmp_IdentifierCode] = @RuleTmp_IdentifierCode, [RuleTmp_IsPeriodic] = @RuleTmp_IsPeriodic WHERE (([RuleTmp_ID] = @Original_RuleTmp_ID) AND ((@IsNull_RuleTmp_CustomCode = 1 AND [RuleTmp_CustomCode] IS NULL) OR ([RuleTmp_CustomCode] = @Original_RuleTmp_CustomCode)) AND ([RuleTmp_CustomCategoryCode] = @Original_RuleTmp_CustomCategoryCode) AND ((@IsNull_RuleTmp_RuleTypeId = 1 AND [RuleTmp_RuleTypeId] IS NULL) OR ([RuleTmp_RuleTypeId] = @Original_RuleTmp_RuleTypeId)) AND ((@IsNull_RuleTmp_IdentifierCode = 1 AND [RuleTmp_IdentifierCode] IS NULL) OR ([RuleTmp_IdentifierCode] = @Original_RuleTmp_IdentifierCode)) AND ((@IsNull_RuleTmp_IsPeriodic = 1 AND [RuleTmp_IsPeriodic] IS NULL) OR ([RuleTmp_IsPeriodic] = @Original_RuleTmp_IsPeriodic)));
SELECT RuleTmp_ID, RuleTmp_Name, RuleTmp_Script, RuleTmp_CSharpCode, RuleTmp_CustomCode, RuleTmp_CustomCategoryCode, RuleTmp_RuleTypeId, RuleTmp_IdentifierCode, RuleTmp_IsPeriodic FROM TA_RuleTemplate WHERE (RuleTmp_ID = @RuleTmp_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_RuleTypeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_RuleTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_RuleTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_RuleTypeId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_RuleTypeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleTmp_RuleTypeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RuleTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RuleTmp_ID, RuleTmp_Name, RuleTmp_Script, RuleTmp_CSharpCode, RuleTmp_Cust" +
                "omCode, RuleTmp_CustomCategoryCode, RuleTmp_RuleTypeId, RuleTmp_IdentifierCode, " +
                "RuleTmp_IsPeriodic FROM TA_RuleTemplate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_RuleTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_RuleTemplateDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_RuleTemplateDataTable dataTable = new ClockDataSet.TA_RuleTemplateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_RuleTemplateDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_RuleTemplate");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_RuleTmp_ID, string Original_RuleTmp_CustomCode, string Original_RuleTmp_CustomCategoryCode, global::System.Nullable<decimal> Original_RuleTmp_RuleTypeId, global::System.Nullable<int> Original_RuleTmp_IdentifierCode, global::System.Nullable<bool> Original_RuleTmp_IsPeriodic) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_RuleTmp_ID));
            if ((Original_RuleTmp_CustomCode == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_RuleTmp_CustomCode));
            }
            if ((Original_RuleTmp_CustomCategoryCode == null)) {
                throw new global::System.ArgumentNullException("Original_RuleTmp_CustomCategoryCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_RuleTmp_CustomCategoryCode));
            }
            if ((Original_RuleTmp_RuleTypeId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_RuleTmp_RuleTypeId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_RuleTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_RuleTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_RuleTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_RuleTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal RuleTmp_ID, string RuleTmp_Name, string RuleTmp_Script, string RuleTmp_CSharpCode, string RuleTmp_CustomCode, string RuleTmp_CustomCategoryCode, global::System.Nullable<decimal> RuleTmp_RuleTypeId, global::System.Nullable<int> RuleTmp_IdentifierCode, global::System.Nullable<bool> RuleTmp_IsPeriodic) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(RuleTmp_ID));
            if ((RuleTmp_Name == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RuleTmp_Name));
            }
            if ((RuleTmp_Script == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_Script");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RuleTmp_Script));
            }
            if ((RuleTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_CSharpCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RuleTmp_CSharpCode));
            }
            if ((RuleTmp_CustomCode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RuleTmp_CustomCode));
            }
            if ((RuleTmp_CustomCategoryCode == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_CustomCategoryCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RuleTmp_CustomCategoryCode));
            }
            if ((RuleTmp_RuleTypeId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(RuleTmp_RuleTypeId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RuleTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(RuleTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((RuleTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(RuleTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal RuleTmp_ID, string RuleTmp_Name, string RuleTmp_Script, string RuleTmp_CSharpCode, string RuleTmp_CustomCode, string RuleTmp_CustomCategoryCode, global::System.Nullable<decimal> RuleTmp_RuleTypeId, global::System.Nullable<int> RuleTmp_IdentifierCode, global::System.Nullable<bool> RuleTmp_IsPeriodic, decimal Original_RuleTmp_ID, string Original_RuleTmp_CustomCode, string Original_RuleTmp_CustomCategoryCode, global::System.Nullable<decimal> Original_RuleTmp_RuleTypeId, global::System.Nullable<int> Original_RuleTmp_IdentifierCode, global::System.Nullable<bool> Original_RuleTmp_IsPeriodic) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(RuleTmp_ID));
            if ((RuleTmp_Name == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RuleTmp_Name));
            }
            if ((RuleTmp_Script == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_Script");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(RuleTmp_Script));
            }
            if ((RuleTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_CSharpCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(RuleTmp_CSharpCode));
            }
            if ((RuleTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(RuleTmp_CustomCode));
            }
            if ((RuleTmp_CustomCategoryCode == null)) {
                throw new global::System.ArgumentNullException("RuleTmp_CustomCategoryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(RuleTmp_CustomCategoryCode));
            }
            if ((RuleTmp_RuleTypeId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(RuleTmp_RuleTypeId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RuleTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(RuleTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((RuleTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(RuleTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_RuleTmp_ID));
            if ((Original_RuleTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_RuleTmp_CustomCode));
            }
            if ((Original_RuleTmp_CustomCategoryCode == null)) {
                throw new global::System.ArgumentNullException("Original_RuleTmp_CustomCategoryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_RuleTmp_CustomCategoryCode));
            }
            if ((Original_RuleTmp_RuleTypeId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_RuleTmp_RuleTypeId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_RuleTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_RuleTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_RuleTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_RuleTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RuleTmp_Name, string RuleTmp_Script, string RuleTmp_CSharpCode, string RuleTmp_CustomCode, string RuleTmp_CustomCategoryCode, global::System.Nullable<decimal> RuleTmp_RuleTypeId, global::System.Nullable<int> RuleTmp_IdentifierCode, global::System.Nullable<bool> RuleTmp_IsPeriodic, decimal Original_RuleTmp_ID, string Original_RuleTmp_CustomCode, string Original_RuleTmp_CustomCategoryCode, global::System.Nullable<decimal> Original_RuleTmp_RuleTypeId, global::System.Nullable<int> Original_RuleTmp_IdentifierCode, global::System.Nullable<bool> Original_RuleTmp_IsPeriodic) {
            return this.Update(Original_RuleTmp_ID, RuleTmp_Name, RuleTmp_Script, RuleTmp_CSharpCode, RuleTmp_CustomCode, RuleTmp_CustomCategoryCode, RuleTmp_RuleTypeId, RuleTmp_IdentifierCode, RuleTmp_IsPeriodic, Original_RuleTmp_ID, Original_RuleTmp_CustomCode, Original_RuleTmp_CustomCategoryCode, Original_RuleTmp_RuleTypeId, Original_RuleTmp_IdentifierCode, Original_RuleTmp_IsPeriodic);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class holidayTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public holidayTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "holiday";
            tableMapping.ColumnMappings.Add("holiday_year", "holiday_year");
            tableMapping.ColumnMappings.Add("holiday_Month", "holiday_Month");
            tableMapping.ColumnMappings.Add("holiday_Rasmi", "holiday_Rasmi");
            tableMapping.ColumnMappings.Add("holiday_NonRasmi", "holiday_NonRasmi");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [holiday] ([holiday_year], [holiday_Month], [holiday_Rasmi], [holiday" +
                "_NonRasmi]) VALUES (@holiday_year, @holiday_Month, @holiday_Rasmi, @holiday_NonR" +
                "asmi)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@holiday_year", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "holiday_year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@holiday_Month", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "holiday_Month", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@holiday_Rasmi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "holiday_Rasmi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@holiday_NonRasmi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "holiday_NonRasmi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from holiday\r\norder by holiday_year";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "select * from holiday\r\nwhere holiday_year>=@fromYear and holiday_year<=@toYear\r\no" +
                "rder by holiday_year";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fromYear", global::System.Data.SqlDbType.Int, 2, global::System.Data.ParameterDirection.Input, 0, 0, "holiday_year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@toYear", global::System.Data.SqlDbType.Int, 2, global::System.Data.ParameterDirection.Input, 0, 0, "holiday_year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.holidayDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.holidayDataTable dataTable = new ClockDataSet.holidayDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ClockDataSet.holidayDataTable GetDataByYear(global::System.Nullable<int> fromYear, global::System.Nullable<int> toYear) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((fromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(fromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((toYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(toYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ClockDataSet.holidayDataTable dataTable = new ClockDataSet.holidayDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.holidayDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "holiday");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<short> holiday_year, global::System.Nullable<short> holiday_Month, string holiday_Rasmi, string holiday_NonRasmi) {
            if ((holiday_year.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((short)(holiday_year.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((holiday_Month.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(holiday_Month.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((holiday_Rasmi == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(holiday_Rasmi));
            }
            if ((holiday_NonRasmi == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(holiday_NonRasmi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_RuleTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_RuleTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_RuleType";
            tableMapping.ColumnMappings.Add("RuleType_ID", "RuleType_ID");
            tableMapping.ColumnMappings.Add("RuleType_Name", "RuleType_Name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TA_RuleType] WHERE (([RuleType_ID] = @Original_RuleType_ID) AND ([Ru" +
                "leType_Name] = @Original_RuleType_Name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleType_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleType_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleType_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleType_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TA_RuleType] ([RuleType_Name]) VALUES (@RuleType_Name);\r\nSELECT Rule" +
                "Type_ID, RuleType_Name FROM TA_RuleType WHERE (RuleType_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleType_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleType_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TA_RuleType] SET [RuleType_Name] = @RuleType_Name WHERE (([RuleType_ID] =" +
                " @Original_RuleType_ID) AND ([RuleType_Name] = @Original_RuleType_Name));\r\nSELEC" +
                "T RuleType_ID, RuleType_Name FROM TA_RuleType WHERE (RuleType_ID = @RuleType_ID)" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleType_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleType_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleType_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RuleType_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RuleType_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RuleType_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RuleType_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "RuleType_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from TA_RuleType";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClockDataSet.TA_RuleTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClockDataSet.TA_RuleTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClockDataSet.TA_RuleTypeDataTable dataTable = new ClockDataSet.TA_RuleTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet.TA_RuleTypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClockDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_RuleType");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_RuleType_ID, string Original_RuleType_Name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_RuleType_ID));
            if ((Original_RuleType_Name == null)) {
                throw new global::System.ArgumentNullException("Original_RuleType_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_RuleType_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RuleType_Name) {
            if ((RuleType_Name == null)) {
                throw new global::System.ArgumentNullException("RuleType_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RuleType_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RuleType_Name, decimal Original_RuleType_ID, string Original_RuleType_Name, decimal RuleType_ID) {
            if ((RuleType_Name == null)) {
                throw new global::System.ArgumentNullException("RuleType_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RuleType_Name));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_RuleType_ID));
            if ((Original_RuleType_Name == null)) {
                throw new global::System.ArgumentNullException("Original_RuleType_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_RuleType_Name));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(RuleType_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RuleType_Name, decimal Original_RuleType_ID, string Original_RuleType_Name) {
            return this.Update(RuleType_Name, Original_RuleType_ID, Original_RuleType_Name, Original_RuleType_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TA_RuleTemplateMappingTableAdapter _tA_RuleTemplateMappingTableAdapter;
        
        private TA_RuleTemplateParameterTableAdapter _tA_RuleTemplateParameterTableAdapter;
        
        private TA_TemplateConditionTableAdapter _tA_TemplateConditionTableAdapter;
        
        private TA_ConceptTemplateParameterTableAdapter _tA_ConceptTemplateParameterTableAdapter;
        
        private TA_ConceptTemplateTableAdapter _tA_ConceptTemplateTableAdapter;
        
        private TA_ConceptTemplateMappingTableAdapter _tA_ConceptTemplateMappingTableAdapter;
        
        private TA_CalculationDateRangeTemplateTableAdapter _tA_CalculationDateRangeTemplateTableAdapter;
        
        private TA_RuleTemplateTableAdapter _tA_RuleTemplateTableAdapter;
        
        private holidayTableAdapter _holidayTableAdapter;
        
        private TA_RuleTypeTableAdapter _tA_RuleTypeTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_RuleTemplateMappingTableAdapter TA_RuleTemplateMappingTableAdapter {
            get {
                return this._tA_RuleTemplateMappingTableAdapter;
            }
            set {
                this._tA_RuleTemplateMappingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_RuleTemplateParameterTableAdapter TA_RuleTemplateParameterTableAdapter {
            get {
                return this._tA_RuleTemplateParameterTableAdapter;
            }
            set {
                this._tA_RuleTemplateParameterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_TemplateConditionTableAdapter TA_TemplateConditionTableAdapter {
            get {
                return this._tA_TemplateConditionTableAdapter;
            }
            set {
                this._tA_TemplateConditionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_ConceptTemplateParameterTableAdapter TA_ConceptTemplateParameterTableAdapter {
            get {
                return this._tA_ConceptTemplateParameterTableAdapter;
            }
            set {
                this._tA_ConceptTemplateParameterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_ConceptTemplateTableAdapter TA_ConceptTemplateTableAdapter {
            get {
                return this._tA_ConceptTemplateTableAdapter;
            }
            set {
                this._tA_ConceptTemplateTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_ConceptTemplateMappingTableAdapter TA_ConceptTemplateMappingTableAdapter {
            get {
                return this._tA_ConceptTemplateMappingTableAdapter;
            }
            set {
                this._tA_ConceptTemplateMappingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_CalculationDateRangeTemplateTableAdapter TA_CalculationDateRangeTemplateTableAdapter {
            get {
                return this._tA_CalculationDateRangeTemplateTableAdapter;
            }
            set {
                this._tA_CalculationDateRangeTemplateTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_RuleTemplateTableAdapter TA_RuleTemplateTableAdapter {
            get {
                return this._tA_RuleTemplateTableAdapter;
            }
            set {
                this._tA_RuleTemplateTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public holidayTableAdapter holidayTableAdapter {
            get {
                return this._holidayTableAdapter;
            }
            set {
                this._holidayTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_RuleTypeTableAdapter TA_RuleTypeTableAdapter {
            get {
                return this._tA_RuleTypeTableAdapter;
            }
            set {
                this._tA_RuleTypeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tA_RuleTemplateMappingTableAdapter != null) 
                            && (this._tA_RuleTemplateMappingTableAdapter.Connection != null))) {
                    return this._tA_RuleTemplateMappingTableAdapter.Connection;
                }
                if (((this._tA_RuleTemplateParameterTableAdapter != null) 
                            && (this._tA_RuleTemplateParameterTableAdapter.Connection != null))) {
                    return this._tA_RuleTemplateParameterTableAdapter.Connection;
                }
                if (((this._tA_TemplateConditionTableAdapter != null) 
                            && (this._tA_TemplateConditionTableAdapter.Connection != null))) {
                    return this._tA_TemplateConditionTableAdapter.Connection;
                }
                if (((this._tA_ConceptTemplateParameterTableAdapter != null) 
                            && (this._tA_ConceptTemplateParameterTableAdapter.Connection != null))) {
                    return this._tA_ConceptTemplateParameterTableAdapter.Connection;
                }
                if (((this._tA_ConceptTemplateTableAdapter != null) 
                            && (this._tA_ConceptTemplateTableAdapter.Connection != null))) {
                    return this._tA_ConceptTemplateTableAdapter.Connection;
                }
                if (((this._tA_ConceptTemplateMappingTableAdapter != null) 
                            && (this._tA_ConceptTemplateMappingTableAdapter.Connection != null))) {
                    return this._tA_ConceptTemplateMappingTableAdapter.Connection;
                }
                if (((this._tA_CalculationDateRangeTemplateTableAdapter != null) 
                            && (this._tA_CalculationDateRangeTemplateTableAdapter.Connection != null))) {
                    return this._tA_CalculationDateRangeTemplateTableAdapter.Connection;
                }
                if (((this._tA_RuleTemplateTableAdapter != null) 
                            && (this._tA_RuleTemplateTableAdapter.Connection != null))) {
                    return this._tA_RuleTemplateTableAdapter.Connection;
                }
                if (((this._holidayTableAdapter != null) 
                            && (this._holidayTableAdapter.Connection != null))) {
                    return this._holidayTableAdapter.Connection;
                }
                if (((this._tA_RuleTypeTableAdapter != null) 
                            && (this._tA_RuleTypeTableAdapter.Connection != null))) {
                    return this._tA_RuleTypeTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tA_RuleTemplateMappingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_RuleTemplateParameterTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_TemplateConditionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_ConceptTemplateParameterTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_ConceptTemplateTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_ConceptTemplateMappingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_CalculationDateRangeTemplateTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_RuleTemplateTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._holidayTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_RuleTypeTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ClockDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tA_RuleTypeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_RuleType.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_RuleTypeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_ConceptTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_ConceptTemplate.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_RuleTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_RuleTemplate.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_RuleTemplateTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_RuleTemplateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_RuleTemplateMapping.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_RuleTemplateMappingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_RuleTemplateParameterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_RuleTemplateParameter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_RuleTemplateParameterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_TemplateConditionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_TemplateCondition.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_TemplateConditionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_ConceptTemplateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_ConceptTemplateMapping.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateMappingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_CalculationDateRangeTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_CalculationDateRangeTemplate.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_CalculationDateRangeTemplateTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._holidayTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.holiday.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._holidayTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_ConceptTemplateParameterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_ConceptTemplateParameter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateParameterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ClockDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tA_RuleTypeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_RuleType.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_RuleTypeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_ConceptTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_ConceptTemplate.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_RuleTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_RuleTemplate.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_RuleTemplateTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_RuleTemplateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_RuleTemplateMapping.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_RuleTemplateMappingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_RuleTemplateParameterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_RuleTemplateParameter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_RuleTemplateParameterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_TemplateConditionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_TemplateCondition.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_TemplateConditionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_ConceptTemplateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_ConceptTemplateMapping.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateMappingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_CalculationDateRangeTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_CalculationDateRangeTemplate.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_CalculationDateRangeTemplateTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._holidayTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.holiday.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._holidayTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_ConceptTemplateParameterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_ConceptTemplateParameter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateParameterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ClockDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tA_ConceptTemplateParameterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_ConceptTemplateParameter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateParameterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._holidayTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.holiday.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._holidayTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_CalculationDateRangeTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_CalculationDateRangeTemplate.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_CalculationDateRangeTemplateTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_ConceptTemplateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_ConceptTemplateMapping.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateMappingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_TemplateConditionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_TemplateCondition.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_TemplateConditionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_RuleTemplateParameterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_RuleTemplateParameter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_RuleTemplateParameterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_RuleTemplateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_RuleTemplateMapping.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_RuleTemplateMappingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_RuleTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_RuleTemplate.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_RuleTemplateTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_ConceptTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_ConceptTemplate.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_RuleTypeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_RuleType.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_RuleTypeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ClockDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tA_RuleTemplateMappingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_RuleTemplateMappingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_RuleTemplateParameterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_RuleTemplateParameterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_TemplateConditionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_TemplateConditionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_ConceptTemplateParameterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_ConceptTemplateParameterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_ConceptTemplateTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_ConceptTemplateTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_ConceptTemplateMappingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_ConceptTemplateMappingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_CalculationDateRangeTemplateTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_CalculationDateRangeTemplateTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_RuleTemplateTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_RuleTemplateTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._holidayTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._holidayTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_RuleTypeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_RuleTypeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tA_RuleTemplateMappingTableAdapter != null)) {
                    revertConnections.Add(this._tA_RuleTemplateMappingTableAdapter, this._tA_RuleTemplateMappingTableAdapter.Connection);
                    this._tA_RuleTemplateMappingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_RuleTemplateMappingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_RuleTemplateMappingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_RuleTemplateMappingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_RuleTemplateMappingTableAdapter.Adapter);
                    }
                }
                if ((this._tA_RuleTemplateParameterTableAdapter != null)) {
                    revertConnections.Add(this._tA_RuleTemplateParameterTableAdapter, this._tA_RuleTemplateParameterTableAdapter.Connection);
                    this._tA_RuleTemplateParameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_RuleTemplateParameterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_RuleTemplateParameterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_RuleTemplateParameterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_RuleTemplateParameterTableAdapter.Adapter);
                    }
                }
                if ((this._tA_TemplateConditionTableAdapter != null)) {
                    revertConnections.Add(this._tA_TemplateConditionTableAdapter, this._tA_TemplateConditionTableAdapter.Connection);
                    this._tA_TemplateConditionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_TemplateConditionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_TemplateConditionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_TemplateConditionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_TemplateConditionTableAdapter.Adapter);
                    }
                }
                if ((this._tA_ConceptTemplateParameterTableAdapter != null)) {
                    revertConnections.Add(this._tA_ConceptTemplateParameterTableAdapter, this._tA_ConceptTemplateParameterTableAdapter.Connection);
                    this._tA_ConceptTemplateParameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_ConceptTemplateParameterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_ConceptTemplateParameterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_ConceptTemplateParameterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_ConceptTemplateParameterTableAdapter.Adapter);
                    }
                }
                if ((this._tA_ConceptTemplateTableAdapter != null)) {
                    revertConnections.Add(this._tA_ConceptTemplateTableAdapter, this._tA_ConceptTemplateTableAdapter.Connection);
                    this._tA_ConceptTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_ConceptTemplateTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_ConceptTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_ConceptTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_ConceptTemplateTableAdapter.Adapter);
                    }
                }
                if ((this._tA_ConceptTemplateMappingTableAdapter != null)) {
                    revertConnections.Add(this._tA_ConceptTemplateMappingTableAdapter, this._tA_ConceptTemplateMappingTableAdapter.Connection);
                    this._tA_ConceptTemplateMappingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_ConceptTemplateMappingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_ConceptTemplateMappingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_ConceptTemplateMappingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_ConceptTemplateMappingTableAdapter.Adapter);
                    }
                }
                if ((this._tA_CalculationDateRangeTemplateTableAdapter != null)) {
                    revertConnections.Add(this._tA_CalculationDateRangeTemplateTableAdapter, this._tA_CalculationDateRangeTemplateTableAdapter.Connection);
                    this._tA_CalculationDateRangeTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_CalculationDateRangeTemplateTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_CalculationDateRangeTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_CalculationDateRangeTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_CalculationDateRangeTemplateTableAdapter.Adapter);
                    }
                }
                if ((this._tA_RuleTemplateTableAdapter != null)) {
                    revertConnections.Add(this._tA_RuleTemplateTableAdapter, this._tA_RuleTemplateTableAdapter.Connection);
                    this._tA_RuleTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_RuleTemplateTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_RuleTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_RuleTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_RuleTemplateTableAdapter.Adapter);
                    }
                }
                if ((this._holidayTableAdapter != null)) {
                    revertConnections.Add(this._holidayTableAdapter, this._holidayTableAdapter.Connection);
                    this._holidayTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._holidayTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._holidayTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._holidayTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._holidayTableAdapter.Adapter);
                    }
                }
                if ((this._tA_RuleTypeTableAdapter != null)) {
                    revertConnections.Add(this._tA_RuleTypeTableAdapter, this._tA_RuleTypeTableAdapter.Connection);
                    this._tA_RuleTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_RuleTypeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_RuleTypeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_RuleTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_RuleTypeTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tA_RuleTemplateMappingTableAdapter != null)) {
                    this._tA_RuleTemplateMappingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_RuleTemplateMappingTableAdapter]));
                    this._tA_RuleTemplateMappingTableAdapter.Transaction = null;
                }
                if ((this._tA_RuleTemplateParameterTableAdapter != null)) {
                    this._tA_RuleTemplateParameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_RuleTemplateParameterTableAdapter]));
                    this._tA_RuleTemplateParameterTableAdapter.Transaction = null;
                }
                if ((this._tA_TemplateConditionTableAdapter != null)) {
                    this._tA_TemplateConditionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_TemplateConditionTableAdapter]));
                    this._tA_TemplateConditionTableAdapter.Transaction = null;
                }
                if ((this._tA_ConceptTemplateParameterTableAdapter != null)) {
                    this._tA_ConceptTemplateParameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_ConceptTemplateParameterTableAdapter]));
                    this._tA_ConceptTemplateParameterTableAdapter.Transaction = null;
                }
                if ((this._tA_ConceptTemplateTableAdapter != null)) {
                    this._tA_ConceptTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_ConceptTemplateTableAdapter]));
                    this._tA_ConceptTemplateTableAdapter.Transaction = null;
                }
                if ((this._tA_ConceptTemplateMappingTableAdapter != null)) {
                    this._tA_ConceptTemplateMappingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_ConceptTemplateMappingTableAdapter]));
                    this._tA_ConceptTemplateMappingTableAdapter.Transaction = null;
                }
                if ((this._tA_CalculationDateRangeTemplateTableAdapter != null)) {
                    this._tA_CalculationDateRangeTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_CalculationDateRangeTemplateTableAdapter]));
                    this._tA_CalculationDateRangeTemplateTableAdapter.Transaction = null;
                }
                if ((this._tA_RuleTemplateTableAdapter != null)) {
                    this._tA_RuleTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_RuleTemplateTableAdapter]));
                    this._tA_RuleTemplateTableAdapter.Transaction = null;
                }
                if ((this._holidayTableAdapter != null)) {
                    this._holidayTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._holidayTableAdapter]));
                    this._holidayTableAdapter.Transaction = null;
                }
                if ((this._tA_RuleTypeTableAdapter != null)) {
                    this._tA_RuleTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_RuleTypeTableAdapter]));
                    this._tA_RuleTypeTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591