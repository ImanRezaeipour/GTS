//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GTS.Clock.AppSetup.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ghadircopyDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ghadircopyDataSet : global::System.Data.DataSet {
        
        private TA_PeriodicScndCnpDetailTemplateDataTable tableTA_PeriodicScndCnpDetailTemplate;
        
        private TA_ConceptTemplateDataTable tableTA_ConceptTemplate;
        
        private TA_ConceptTemplate1DataTable tableTA_ConceptTemplate1;
        
        private TA_PriorityDependencyDataTable tableTA_PriorityDependency;
        
        private global::System.Data.DataRelation relationPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ghadircopyDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ghadircopyDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TA_PeriodicScndCnpDetailTemplate"] != null)) {
                    base.Tables.Add(new TA_PeriodicScndCnpDetailTemplateDataTable(ds.Tables["TA_PeriodicScndCnpDetailTemplate"]));
                }
                if ((ds.Tables["TA_ConceptTemplate"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateDataTable(ds.Tables["TA_ConceptTemplate"]));
                }
                if ((ds.Tables["TA_ConceptTemplate1"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplate1DataTable(ds.Tables["TA_ConceptTemplate1"]));
                }
                if ((ds.Tables["TA_PriorityDependency"] != null)) {
                    base.Tables.Add(new TA_PriorityDependencyDataTable(ds.Tables["TA_PriorityDependency"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_PeriodicScndCnpDetailTemplateDataTable TA_PeriodicScndCnpDetailTemplate {
            get {
                return this.tableTA_PeriodicScndCnpDetailTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_ConceptTemplateDataTable TA_ConceptTemplate {
            get {
                return this.tableTA_ConceptTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_ConceptTemplate1DataTable TA_ConceptTemplate1 {
            get {
                return this.tableTA_ConceptTemplate1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TA_PriorityDependencyDataTable TA_PriorityDependency {
            get {
                return this.tableTA_PriorityDependency;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ghadircopyDataSet cln = ((ghadircopyDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TA_PeriodicScndCnpDetailTemplate"] != null)) {
                    base.Tables.Add(new TA_PeriodicScndCnpDetailTemplateDataTable(ds.Tables["TA_PeriodicScndCnpDetailTemplate"]));
                }
                if ((ds.Tables["TA_ConceptTemplate"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplateDataTable(ds.Tables["TA_ConceptTemplate"]));
                }
                if ((ds.Tables["TA_ConceptTemplate1"] != null)) {
                    base.Tables.Add(new TA_ConceptTemplate1DataTable(ds.Tables["TA_ConceptTemplate1"]));
                }
                if ((ds.Tables["TA_PriorityDependency"] != null)) {
                    base.Tables.Add(new TA_PriorityDependencyDataTable(ds.Tables["TA_PriorityDependency"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTA_PeriodicScndCnpDetailTemplate = ((TA_PeriodicScndCnpDetailTemplateDataTable)(base.Tables["TA_PeriodicScndCnpDetailTemplate"]));
            if ((initTable == true)) {
                if ((this.tableTA_PeriodicScndCnpDetailTemplate != null)) {
                    this.tableTA_PeriodicScndCnpDetailTemplate.InitVars();
                }
            }
            this.tableTA_ConceptTemplate = ((TA_ConceptTemplateDataTable)(base.Tables["TA_ConceptTemplate"]));
            if ((initTable == true)) {
                if ((this.tableTA_ConceptTemplate != null)) {
                    this.tableTA_ConceptTemplate.InitVars();
                }
            }
            this.tableTA_ConceptTemplate1 = ((TA_ConceptTemplate1DataTable)(base.Tables["TA_ConceptTemplate1"]));
            if ((initTable == true)) {
                if ((this.tableTA_ConceptTemplate1 != null)) {
                    this.tableTA_ConceptTemplate1.InitVars();
                }
            }
            this.tableTA_PriorityDependency = ((TA_PriorityDependencyDataTable)(base.Tables["TA_PriorityDependency"]));
            if ((initTable == true)) {
                if ((this.tableTA_PriorityDependency != null)) {
                    this.tableTA_PriorityDependency.InitVars();
                }
            }
            this.relationPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate = this.Relations["PRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ghadircopyDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ghadircopyDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTA_PeriodicScndCnpDetailTemplate = new TA_PeriodicScndCnpDetailTemplateDataTable();
            base.Tables.Add(this.tableTA_PeriodicScndCnpDetailTemplate);
            this.tableTA_ConceptTemplate = new TA_ConceptTemplateDataTable();
            base.Tables.Add(this.tableTA_ConceptTemplate);
            this.tableTA_ConceptTemplate1 = new TA_ConceptTemplate1DataTable();
            base.Tables.Add(this.tableTA_ConceptTemplate1);
            this.tableTA_PriorityDependency = new TA_PriorityDependencyDataTable();
            base.Tables.Add(this.tableTA_PriorityDependency);
            this.relationPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate = new global::System.Data.DataRelation("PRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate", new global::System.Data.DataColumn[] {
                        this.tableTA_ConceptTemplate.ConceptTmp_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_PrdCnpTmpIdColumn}, false);
            this.Relations.Add(this.relationPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_PeriodicScndCnpDetailTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_ConceptTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_ConceptTemplate1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTA_PriorityDependency() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ghadircopyDataSet ds = new ghadircopyDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_PeriodicScndCnpDetailTemplateRowChangeEventHandler(object sender, TA_PeriodicScndCnpDetailTemplateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_ConceptTemplateRowChangeEventHandler(object sender, TA_ConceptTemplateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_ConceptTemplate1RowChangeEventHandler(object sender, TA_ConceptTemplate1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TA_PriorityDependencyRowChangeEventHandler(object sender, TA_PriorityDependencyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_PeriodicScndCnpDetailTemplateDataTable : global::System.Data.TypedTableBase<TA_PeriodicScndCnpDetailTemplateRow> {
            
            private global::System.Data.DataColumn columnPrdCnpTmpDetail_ID;
            
            private global::System.Data.DataColumn columnPrdCnpTmpDetail_PrdCnpTmpId;
            
            private global::System.Data.DataColumn columnPrdCnpTmpDetail_DtlCnpTmpId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateDataTable() {
                this.TableName = "TA_PeriodicScndCnpDetailTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_PeriodicScndCnpDetailTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_PeriodicScndCnpDetailTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrdCnpTmpDetail_IDColumn {
                get {
                    return this.columnPrdCnpTmpDetail_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrdCnpTmpDetail_PrdCnpTmpIdColumn {
                get {
                    return this.columnPrdCnpTmpDetail_PrdCnpTmpId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrdCnpTmpDetail_DtlCnpTmpIdColumn {
                get {
                    return this.columnPrdCnpTmpDetail_DtlCnpTmpId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRow this[int index] {
                get {
                    return ((TA_PeriodicScndCnpDetailTemplateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PeriodicScndCnpDetailTemplateRowChangeEventHandler TA_PeriodicScndCnpDetailTemplateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PeriodicScndCnpDetailTemplateRowChangeEventHandler TA_PeriodicScndCnpDetailTemplateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PeriodicScndCnpDetailTemplateRowChangeEventHandler TA_PeriodicScndCnpDetailTemplateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PeriodicScndCnpDetailTemplateRowChangeEventHandler TA_PeriodicScndCnpDetailTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_PeriodicScndCnpDetailTemplateRow(TA_PeriodicScndCnpDetailTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRow AddTA_PeriodicScndCnpDetailTemplateRow(TA_ConceptTemplateRow parentTA_ConceptTemplateRowByPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate, decimal PrdCnpTmpDetail_DtlCnpTmpId) {
                TA_PeriodicScndCnpDetailTemplateRow rowTA_PeriodicScndCnpDetailTemplateRow = ((TA_PeriodicScndCnpDetailTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        PrdCnpTmpDetail_DtlCnpTmpId};
                if ((parentTA_ConceptTemplateRowByPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate != null)) {
                    columnValuesArray[1] = parentTA_ConceptTemplateRowByPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate[0];
                }
                rowTA_PeriodicScndCnpDetailTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_PeriodicScndCnpDetailTemplateRow);
                return rowTA_PeriodicScndCnpDetailTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRow FindByPrdCnpTmpDetail_ID(decimal PrdCnpTmpDetail_ID) {
                return ((TA_PeriodicScndCnpDetailTemplateRow)(this.Rows.Find(new object[] {
                            PrdCnpTmpDetail_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_PeriodicScndCnpDetailTemplateDataTable cln = ((TA_PeriodicScndCnpDetailTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_PeriodicScndCnpDetailTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPrdCnpTmpDetail_ID = base.Columns["PrdCnpTmpDetail_ID"];
                this.columnPrdCnpTmpDetail_PrdCnpTmpId = base.Columns["PrdCnpTmpDetail_PrdCnpTmpId"];
                this.columnPrdCnpTmpDetail_DtlCnpTmpId = base.Columns["PrdCnpTmpDetail_DtlCnpTmpId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPrdCnpTmpDetail_ID = new global::System.Data.DataColumn("PrdCnpTmpDetail_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrdCnpTmpDetail_ID);
                this.columnPrdCnpTmpDetail_PrdCnpTmpId = new global::System.Data.DataColumn("PrdCnpTmpDetail_PrdCnpTmpId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrdCnpTmpDetail_PrdCnpTmpId);
                this.columnPrdCnpTmpDetail_DtlCnpTmpId = new global::System.Data.DataColumn("PrdCnpTmpDetail_DtlCnpTmpId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrdCnpTmpDetail_DtlCnpTmpId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPrdCnpTmpDetail_ID}, true));
                this.columnPrdCnpTmpDetail_ID.AutoIncrement = true;
                this.columnPrdCnpTmpDetail_ID.AutoIncrementSeed = -1;
                this.columnPrdCnpTmpDetail_ID.AutoIncrementStep = -1;
                this.columnPrdCnpTmpDetail_ID.AllowDBNull = false;
                this.columnPrdCnpTmpDetail_ID.ReadOnly = true;
                this.columnPrdCnpTmpDetail_ID.Unique = true;
                this.columnPrdCnpTmpDetail_PrdCnpTmpId.AllowDBNull = false;
                this.columnPrdCnpTmpDetail_DtlCnpTmpId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRow NewTA_PeriodicScndCnpDetailTemplateRow() {
                return ((TA_PeriodicScndCnpDetailTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_PeriodicScndCnpDetailTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_PeriodicScndCnpDetailTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_PeriodicScndCnpDetailTemplateRowChanged != null)) {
                    this.TA_PeriodicScndCnpDetailTemplateRowChanged(this, new TA_PeriodicScndCnpDetailTemplateRowChangeEvent(((TA_PeriodicScndCnpDetailTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_PeriodicScndCnpDetailTemplateRowChanging != null)) {
                    this.TA_PeriodicScndCnpDetailTemplateRowChanging(this, new TA_PeriodicScndCnpDetailTemplateRowChangeEvent(((TA_PeriodicScndCnpDetailTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_PeriodicScndCnpDetailTemplateRowDeleted != null)) {
                    this.TA_PeriodicScndCnpDetailTemplateRowDeleted(this, new TA_PeriodicScndCnpDetailTemplateRowChangeEvent(((TA_PeriodicScndCnpDetailTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_PeriodicScndCnpDetailTemplateRowDeleting != null)) {
                    this.TA_PeriodicScndCnpDetailTemplateRowDeleting(this, new TA_PeriodicScndCnpDetailTemplateRowChangeEvent(((TA_PeriodicScndCnpDetailTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_PeriodicScndCnpDetailTemplateRow(TA_PeriodicScndCnpDetailTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ghadircopyDataSet ds = new ghadircopyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_PeriodicScndCnpDetailTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_ConceptTemplateDataTable : global::System.Data.TypedTableBase<TA_ConceptTemplateRow> {
            
            private global::System.Data.DataColumn columnConceptTmp_ID;
            
            private global::System.Data.DataColumn columnConceptTmp_Script;
            
            private global::System.Data.DataColumn columnConceptTmp_CSharpCode;
            
            private global::System.Data.DataColumn columnConceptTmp_IdentifierCode;
            
            private global::System.Data.DataColumn columnConceptTmp_CustomCode;
            
            private global::System.Data.DataColumn columnConceptTmp_CustomCategoryCode;
            
            private global::System.Data.DataColumn columnConceptTmp_Type;
            
            private global::System.Data.DataColumn columnConceptTmp_PColumn;
            
            private global::System.Data.DataColumn columnConceptTmp_Name;
            
            private global::System.Data.DataColumn columnConceptTmp_IsPeriodic;
            
            private global::System.Data.DataColumn columnConceptTmp_CalcSituationType;
            
            private global::System.Data.DataColumn columnConceptTmp_PersistSituationType;
            
            private global::System.Data.DataColumn columnConceptTmp_EngName;
            
            private global::System.Data.DataColumn columnConceptTmp_FnName;
            
            private global::System.Data.DataColumn columnConceptTmp_KeyColumnName;
            
            private global::System.Data.DataColumn columnConceptTmp_Color;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateDataTable() {
                this.TableName = "TA_ConceptTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_ConceptTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IDColumn {
                get {
                    return this.columnConceptTmp_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_ScriptColumn {
                get {
                    return this.columnConceptTmp_Script;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CSharpCodeColumn {
                get {
                    return this.columnConceptTmp_CSharpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IdentifierCodeColumn {
                get {
                    return this.columnConceptTmp_IdentifierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CustomCodeColumn {
                get {
                    return this.columnConceptTmp_CustomCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CustomCategoryCodeColumn {
                get {
                    return this.columnConceptTmp_CustomCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_TypeColumn {
                get {
                    return this.columnConceptTmp_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_PColumnColumn {
                get {
                    return this.columnConceptTmp_PColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_NameColumn {
                get {
                    return this.columnConceptTmp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IsPeriodicColumn {
                get {
                    return this.columnConceptTmp_IsPeriodic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CalcSituationTypeColumn {
                get {
                    return this.columnConceptTmp_CalcSituationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_PersistSituationTypeColumn {
                get {
                    return this.columnConceptTmp_PersistSituationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_EngNameColumn {
                get {
                    return this.columnConceptTmp_EngName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_FnNameColumn {
                get {
                    return this.columnConceptTmp_FnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_KeyColumnNameColumn {
                get {
                    return this.columnConceptTmp_KeyColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_ColorColumn {
                get {
                    return this.columnConceptTmp_Color;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow this[int index] {
                get {
                    return ((TA_ConceptTemplateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplateRowChangeEventHandler TA_ConceptTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_ConceptTemplateRow(TA_ConceptTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow AddTA_ConceptTemplateRow(string ConceptTmp_Script, string ConceptTmp_CSharpCode, int ConceptTmp_IdentifierCode, string ConceptTmp_CustomCode, string ConceptTmp_CustomCategoryCode, short ConceptTmp_Type, string ConceptTmp_PColumn, string ConceptTmp_Name, bool ConceptTmp_IsPeriodic, int ConceptTmp_CalcSituationType, int ConceptTmp_PersistSituationType, string ConceptTmp_EngName, string ConceptTmp_FnName, string ConceptTmp_KeyColumnName, string ConceptTmp_Color) {
                TA_ConceptTemplateRow rowTA_ConceptTemplateRow = ((TA_ConceptTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ConceptTmp_Script,
                        ConceptTmp_CSharpCode,
                        ConceptTmp_IdentifierCode,
                        ConceptTmp_CustomCode,
                        ConceptTmp_CustomCategoryCode,
                        ConceptTmp_Type,
                        ConceptTmp_PColumn,
                        ConceptTmp_Name,
                        ConceptTmp_IsPeriodic,
                        ConceptTmp_CalcSituationType,
                        ConceptTmp_PersistSituationType,
                        ConceptTmp_EngName,
                        ConceptTmp_FnName,
                        ConceptTmp_KeyColumnName,
                        ConceptTmp_Color};
                rowTA_ConceptTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_ConceptTemplateRow);
                return rowTA_ConceptTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow FindByConceptTmp_ID(decimal ConceptTmp_ID) {
                return ((TA_ConceptTemplateRow)(this.Rows.Find(new object[] {
                            ConceptTmp_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_ConceptTemplateDataTable cln = ((TA_ConceptTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_ConceptTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConceptTmp_ID = base.Columns["ConceptTmp_ID"];
                this.columnConceptTmp_Script = base.Columns["ConceptTmp_Script"];
                this.columnConceptTmp_CSharpCode = base.Columns["ConceptTmp_CSharpCode"];
                this.columnConceptTmp_IdentifierCode = base.Columns["ConceptTmp_IdentifierCode"];
                this.columnConceptTmp_CustomCode = base.Columns["ConceptTmp_CustomCode"];
                this.columnConceptTmp_CustomCategoryCode = base.Columns["ConceptTmp_CustomCategoryCode"];
                this.columnConceptTmp_Type = base.Columns["ConceptTmp_Type"];
                this.columnConceptTmp_PColumn = base.Columns["ConceptTmp_PColumn"];
                this.columnConceptTmp_Name = base.Columns["ConceptTmp_Name"];
                this.columnConceptTmp_IsPeriodic = base.Columns["ConceptTmp_IsPeriodic"];
                this.columnConceptTmp_CalcSituationType = base.Columns["ConceptTmp_CalcSituationType"];
                this.columnConceptTmp_PersistSituationType = base.Columns["ConceptTmp_PersistSituationType"];
                this.columnConceptTmp_EngName = base.Columns["ConceptTmp_EngName"];
                this.columnConceptTmp_FnName = base.Columns["ConceptTmp_FnName"];
                this.columnConceptTmp_KeyColumnName = base.Columns["ConceptTmp_KeyColumnName"];
                this.columnConceptTmp_Color = base.Columns["ConceptTmp_Color"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConceptTmp_ID = new global::System.Data.DataColumn("ConceptTmp_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_ID);
                this.columnConceptTmp_Script = new global::System.Data.DataColumn("ConceptTmp_Script", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Script);
                this.columnConceptTmp_CSharpCode = new global::System.Data.DataColumn("ConceptTmp_CSharpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CSharpCode);
                this.columnConceptTmp_IdentifierCode = new global::System.Data.DataColumn("ConceptTmp_IdentifierCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_IdentifierCode);
                this.columnConceptTmp_CustomCode = new global::System.Data.DataColumn("ConceptTmp_CustomCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CustomCode);
                this.columnConceptTmp_CustomCategoryCode = new global::System.Data.DataColumn("ConceptTmp_CustomCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CustomCategoryCode);
                this.columnConceptTmp_Type = new global::System.Data.DataColumn("ConceptTmp_Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Type);
                this.columnConceptTmp_PColumn = new global::System.Data.DataColumn("ConceptTmp_PColumn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_PColumn);
                this.columnConceptTmp_Name = new global::System.Data.DataColumn("ConceptTmp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Name);
                this.columnConceptTmp_IsPeriodic = new global::System.Data.DataColumn("ConceptTmp_IsPeriodic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_IsPeriodic);
                this.columnConceptTmp_CalcSituationType = new global::System.Data.DataColumn("ConceptTmp_CalcSituationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CalcSituationType);
                this.columnConceptTmp_PersistSituationType = new global::System.Data.DataColumn("ConceptTmp_PersistSituationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_PersistSituationType);
                this.columnConceptTmp_EngName = new global::System.Data.DataColumn("ConceptTmp_EngName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_EngName);
                this.columnConceptTmp_FnName = new global::System.Data.DataColumn("ConceptTmp_FnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_FnName);
                this.columnConceptTmp_KeyColumnName = new global::System.Data.DataColumn("ConceptTmp_KeyColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_KeyColumnName);
                this.columnConceptTmp_Color = new global::System.Data.DataColumn("ConceptTmp_Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Color);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnConceptTmp_ID}, true));
                this.columnConceptTmp_ID.AutoIncrement = true;
                this.columnConceptTmp_ID.AutoIncrementSeed = -1;
                this.columnConceptTmp_ID.AutoIncrementStep = -1;
                this.columnConceptTmp_ID.AllowDBNull = false;
                this.columnConceptTmp_ID.ReadOnly = true;
                this.columnConceptTmp_ID.Unique = true;
                this.columnConceptTmp_Script.AllowDBNull = false;
                this.columnConceptTmp_Script.MaxLength = 2147483647;
                this.columnConceptTmp_CSharpCode.AllowDBNull = false;
                this.columnConceptTmp_CSharpCode.MaxLength = 2147483647;
                this.columnConceptTmp_CustomCode.MaxLength = 10;
                this.columnConceptTmp_CustomCategoryCode.MaxLength = 10;
                this.columnConceptTmp_PColumn.MaxLength = 50;
                this.columnConceptTmp_Name.AllowDBNull = false;
                this.columnConceptTmp_Name.MaxLength = 100;
                this.columnConceptTmp_CalcSituationType.AllowDBNull = false;
                this.columnConceptTmp_PersistSituationType.AllowDBNull = false;
                this.columnConceptTmp_EngName.MaxLength = 50;
                this.columnConceptTmp_FnName.MaxLength = 50;
                this.columnConceptTmp_KeyColumnName.MaxLength = 50;
                this.columnConceptTmp_Color.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow NewTA_ConceptTemplateRow() {
                return ((TA_ConceptTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_ConceptTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_ConceptTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_ConceptTemplateRowChanged != null)) {
                    this.TA_ConceptTemplateRowChanged(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_ConceptTemplateRowChanging != null)) {
                    this.TA_ConceptTemplateRowChanging(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_ConceptTemplateRowDeleted != null)) {
                    this.TA_ConceptTemplateRowDeleted(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_ConceptTemplateRowDeleting != null)) {
                    this.TA_ConceptTemplateRowDeleting(this, new TA_ConceptTemplateRowChangeEvent(((TA_ConceptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_ConceptTemplateRow(TA_ConceptTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ghadircopyDataSet ds = new ghadircopyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_ConceptTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_ConceptTemplate1DataTable : global::System.Data.TypedTableBase<TA_ConceptTemplate1Row> {
            
            private global::System.Data.DataColumn columnConceptTmp_ID;
            
            private global::System.Data.DataColumn columnConceptTmp_Name;
            
            private global::System.Data.DataColumn columnConceptTmp_Script;
            
            private global::System.Data.DataColumn columnConceptTmp_CSharpCode;
            
            private global::System.Data.DataColumn columnConceptTmp_IdentifierCode;
            
            private global::System.Data.DataColumn columnConceptTmp_CustomCode;
            
            private global::System.Data.DataColumn columnConceptTmp_CustomCategoryCode;
            
            private global::System.Data.DataColumn columnConceptTmp_Type;
            
            private global::System.Data.DataColumn columnConceptTmp_PColumn;
            
            private global::System.Data.DataColumn columnIDName;
            
            private global::System.Data.DataColumn columnConceptTmp_IsPeriodic;
            
            private global::System.Data.DataColumn columnConceptTmp_CalcSituationType;
            
            private global::System.Data.DataColumn columnConceptTmp_PersistSituationType;
            
            private global::System.Data.DataColumn columnConceptTmp_EngName;
            
            private global::System.Data.DataColumn columnConceptTmp_FnName;
            
            private global::System.Data.DataColumn columnConceptTmp_KeyColumnName;
            
            private global::System.Data.DataColumn columnConceptTmp_Color;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1DataTable() {
                this.TableName = "TA_ConceptTemplate1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplate1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_ConceptTemplate1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IDColumn {
                get {
                    return this.columnConceptTmp_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_NameColumn {
                get {
                    return this.columnConceptTmp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_ScriptColumn {
                get {
                    return this.columnConceptTmp_Script;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CSharpCodeColumn {
                get {
                    return this.columnConceptTmp_CSharpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IdentifierCodeColumn {
                get {
                    return this.columnConceptTmp_IdentifierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CustomCodeColumn {
                get {
                    return this.columnConceptTmp_CustomCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CustomCategoryCodeColumn {
                get {
                    return this.columnConceptTmp_CustomCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_TypeColumn {
                get {
                    return this.columnConceptTmp_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_PColumnColumn {
                get {
                    return this.columnConceptTmp_PColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDNameColumn {
                get {
                    return this.columnIDName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_IsPeriodicColumn {
                get {
                    return this.columnConceptTmp_IsPeriodic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_CalcSituationTypeColumn {
                get {
                    return this.columnConceptTmp_CalcSituationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_PersistSituationTypeColumn {
                get {
                    return this.columnConceptTmp_PersistSituationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_EngNameColumn {
                get {
                    return this.columnConceptTmp_EngName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_FnNameColumn {
                get {
                    return this.columnConceptTmp_FnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_KeyColumnNameColumn {
                get {
                    return this.columnConceptTmp_KeyColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConceptTmp_ColorColumn {
                get {
                    return this.columnConceptTmp_Color;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1Row this[int index] {
                get {
                    return ((TA_ConceptTemplate1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplate1RowChangeEventHandler TA_ConceptTemplate1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplate1RowChangeEventHandler TA_ConceptTemplate1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplate1RowChangeEventHandler TA_ConceptTemplate1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_ConceptTemplate1RowChangeEventHandler TA_ConceptTemplate1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_ConceptTemplate1Row(TA_ConceptTemplate1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1Row AddTA_ConceptTemplate1Row(
                        string ConceptTmp_Name, 
                        string ConceptTmp_Script, 
                        string ConceptTmp_CSharpCode, 
                        int ConceptTmp_IdentifierCode, 
                        string ConceptTmp_CustomCode, 
                        string ConceptTmp_CustomCategoryCode, 
                        short ConceptTmp_Type, 
                        string ConceptTmp_PColumn, 
                        string IDName, 
                        bool ConceptTmp_IsPeriodic, 
                        int ConceptTmp_CalcSituationType, 
                        int ConceptTmp_PersistSituationType, 
                        string ConceptTmp_EngName, 
                        string ConceptTmp_FnName, 
                        string ConceptTmp_KeyColumnName, 
                        string ConceptTmp_Color) {
                TA_ConceptTemplate1Row rowTA_ConceptTemplate1Row = ((TA_ConceptTemplate1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ConceptTmp_Name,
                        ConceptTmp_Script,
                        ConceptTmp_CSharpCode,
                        ConceptTmp_IdentifierCode,
                        ConceptTmp_CustomCode,
                        ConceptTmp_CustomCategoryCode,
                        ConceptTmp_Type,
                        ConceptTmp_PColumn,
                        IDName,
                        ConceptTmp_IsPeriodic,
                        ConceptTmp_CalcSituationType,
                        ConceptTmp_PersistSituationType,
                        ConceptTmp_EngName,
                        ConceptTmp_FnName,
                        ConceptTmp_KeyColumnName,
                        ConceptTmp_Color};
                rowTA_ConceptTemplate1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_ConceptTemplate1Row);
                return rowTA_ConceptTemplate1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1Row FindByConceptTmp_ID(decimal ConceptTmp_ID) {
                return ((TA_ConceptTemplate1Row)(this.Rows.Find(new object[] {
                            ConceptTmp_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_ConceptTemplate1DataTable cln = ((TA_ConceptTemplate1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_ConceptTemplate1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConceptTmp_ID = base.Columns["ConceptTmp_ID"];
                this.columnConceptTmp_Name = base.Columns["ConceptTmp_Name"];
                this.columnConceptTmp_Script = base.Columns["ConceptTmp_Script"];
                this.columnConceptTmp_CSharpCode = base.Columns["ConceptTmp_CSharpCode"];
                this.columnConceptTmp_IdentifierCode = base.Columns["ConceptTmp_IdentifierCode"];
                this.columnConceptTmp_CustomCode = base.Columns["ConceptTmp_CustomCode"];
                this.columnConceptTmp_CustomCategoryCode = base.Columns["ConceptTmp_CustomCategoryCode"];
                this.columnConceptTmp_Type = base.Columns["ConceptTmp_Type"];
                this.columnConceptTmp_PColumn = base.Columns["ConceptTmp_PColumn"];
                this.columnIDName = base.Columns["IDName"];
                this.columnConceptTmp_IsPeriodic = base.Columns["ConceptTmp_IsPeriodic"];
                this.columnConceptTmp_CalcSituationType = base.Columns["ConceptTmp_CalcSituationType"];
                this.columnConceptTmp_PersistSituationType = base.Columns["ConceptTmp_PersistSituationType"];
                this.columnConceptTmp_EngName = base.Columns["ConceptTmp_EngName"];
                this.columnConceptTmp_FnName = base.Columns["ConceptTmp_FnName"];
                this.columnConceptTmp_KeyColumnName = base.Columns["ConceptTmp_KeyColumnName"];
                this.columnConceptTmp_Color = base.Columns["ConceptTmp_Color"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConceptTmp_ID = new global::System.Data.DataColumn("ConceptTmp_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_ID);
                this.columnConceptTmp_Name = new global::System.Data.DataColumn("ConceptTmp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Name);
                this.columnConceptTmp_Script = new global::System.Data.DataColumn("ConceptTmp_Script", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Script);
                this.columnConceptTmp_CSharpCode = new global::System.Data.DataColumn("ConceptTmp_CSharpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CSharpCode);
                this.columnConceptTmp_IdentifierCode = new global::System.Data.DataColumn("ConceptTmp_IdentifierCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_IdentifierCode);
                this.columnConceptTmp_CustomCode = new global::System.Data.DataColumn("ConceptTmp_CustomCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CustomCode);
                this.columnConceptTmp_CustomCategoryCode = new global::System.Data.DataColumn("ConceptTmp_CustomCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CustomCategoryCode);
                this.columnConceptTmp_Type = new global::System.Data.DataColumn("ConceptTmp_Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Type);
                this.columnConceptTmp_PColumn = new global::System.Data.DataColumn("ConceptTmp_PColumn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_PColumn);
                this.columnIDName = new global::System.Data.DataColumn("IDName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDName);
                this.columnConceptTmp_IsPeriodic = new global::System.Data.DataColumn("ConceptTmp_IsPeriodic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_IsPeriodic);
                this.columnConceptTmp_CalcSituationType = new global::System.Data.DataColumn("ConceptTmp_CalcSituationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_CalcSituationType);
                this.columnConceptTmp_PersistSituationType = new global::System.Data.DataColumn("ConceptTmp_PersistSituationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_PersistSituationType);
                this.columnConceptTmp_EngName = new global::System.Data.DataColumn("ConceptTmp_EngName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_EngName);
                this.columnConceptTmp_FnName = new global::System.Data.DataColumn("ConceptTmp_FnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_FnName);
                this.columnConceptTmp_KeyColumnName = new global::System.Data.DataColumn("ConceptTmp_KeyColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_KeyColumnName);
                this.columnConceptTmp_Color = new global::System.Data.DataColumn("ConceptTmp_Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConceptTmp_Color);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnConceptTmp_ID}, true));
                this.columnConceptTmp_ID.AutoIncrement = true;
                this.columnConceptTmp_ID.AutoIncrementSeed = -1;
                this.columnConceptTmp_ID.AutoIncrementStep = -1;
                this.columnConceptTmp_ID.AllowDBNull = false;
                this.columnConceptTmp_ID.ReadOnly = true;
                this.columnConceptTmp_ID.Unique = true;
                this.columnConceptTmp_Name.AllowDBNull = false;
                this.columnConceptTmp_Name.MaxLength = 100;
                this.columnConceptTmp_Script.AllowDBNull = false;
                this.columnConceptTmp_Script.MaxLength = 2147483647;
                this.columnConceptTmp_CSharpCode.AllowDBNull = false;
                this.columnConceptTmp_CSharpCode.MaxLength = 2147483647;
                this.columnConceptTmp_CustomCode.MaxLength = 10;
                this.columnConceptTmp_CustomCategoryCode.MaxLength = 10;
                this.columnConceptTmp_PColumn.MaxLength = 50;
                this.columnIDName.ReadOnly = true;
                this.columnIDName.MaxLength = 113;
                this.columnConceptTmp_CalcSituationType.AllowDBNull = false;
                this.columnConceptTmp_PersistSituationType.AllowDBNull = false;
                this.columnConceptTmp_EngName.MaxLength = 50;
                this.columnConceptTmp_FnName.MaxLength = 50;
                this.columnConceptTmp_KeyColumnName.MaxLength = 50;
                this.columnConceptTmp_Color.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1Row NewTA_ConceptTemplate1Row() {
                return ((TA_ConceptTemplate1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_ConceptTemplate1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_ConceptTemplate1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_ConceptTemplate1RowChanged != null)) {
                    this.TA_ConceptTemplate1RowChanged(this, new TA_ConceptTemplate1RowChangeEvent(((TA_ConceptTemplate1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_ConceptTemplate1RowChanging != null)) {
                    this.TA_ConceptTemplate1RowChanging(this, new TA_ConceptTemplate1RowChangeEvent(((TA_ConceptTemplate1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_ConceptTemplate1RowDeleted != null)) {
                    this.TA_ConceptTemplate1RowDeleted(this, new TA_ConceptTemplate1RowChangeEvent(((TA_ConceptTemplate1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_ConceptTemplate1RowDeleting != null)) {
                    this.TA_ConceptTemplate1RowDeleting(this, new TA_ConceptTemplate1RowChangeEvent(((TA_ConceptTemplate1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_ConceptTemplate1Row(TA_ConceptTemplate1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ghadircopyDataSet ds = new ghadircopyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_ConceptTemplate1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TA_PriorityDependencyDataTable : global::System.Data.TypedTableBase<TA_PriorityDependencyRow> {
            
            private global::System.Data.DataColumn columnPrioDep_ID;
            
            private global::System.Data.DataColumn columnPrioDep_RuleName;
            
            private global::System.Data.DataColumn columnPrioDep_ConceptIdentifier;
            
            private global::System.Data.DataColumn columnPrioDep_Action;
            
            private global::System.Data.DataColumn columnPrioDep_Note;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyDataTable() {
                this.TableName = "TA_PriorityDependency";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_PriorityDependencyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TA_PriorityDependencyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrioDep_IDColumn {
                get {
                    return this.columnPrioDep_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrioDep_RuleNameColumn {
                get {
                    return this.columnPrioDep_RuleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrioDep_ConceptIdentifierColumn {
                get {
                    return this.columnPrioDep_ConceptIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrioDep_ActionColumn {
                get {
                    return this.columnPrioDep_Action;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrioDep_NoteColumn {
                get {
                    return this.columnPrioDep_Note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyRow this[int index] {
                get {
                    return ((TA_PriorityDependencyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PriorityDependencyRowChangeEventHandler TA_PriorityDependencyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PriorityDependencyRowChangeEventHandler TA_PriorityDependencyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PriorityDependencyRowChangeEventHandler TA_PriorityDependencyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TA_PriorityDependencyRowChangeEventHandler TA_PriorityDependencyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTA_PriorityDependencyRow(TA_PriorityDependencyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyRow AddTA_PriorityDependencyRow(int PrioDep_ID, string PrioDep_RuleName, string PrioDep_ConceptIdentifier, string PrioDep_Action, string PrioDep_Note) {
                TA_PriorityDependencyRow rowTA_PriorityDependencyRow = ((TA_PriorityDependencyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PrioDep_ID,
                        PrioDep_RuleName,
                        PrioDep_ConceptIdentifier,
                        PrioDep_Action,
                        PrioDep_Note};
                rowTA_PriorityDependencyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTA_PriorityDependencyRow);
                return rowTA_PriorityDependencyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyRow FindByPrioDep_ID(int PrioDep_ID) {
                return ((TA_PriorityDependencyRow)(this.Rows.Find(new object[] {
                            PrioDep_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TA_PriorityDependencyDataTable cln = ((TA_PriorityDependencyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TA_PriorityDependencyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPrioDep_ID = base.Columns["PrioDep_ID"];
                this.columnPrioDep_RuleName = base.Columns["PrioDep_RuleName"];
                this.columnPrioDep_ConceptIdentifier = base.Columns["PrioDep_ConceptIdentifier"];
                this.columnPrioDep_Action = base.Columns["PrioDep_Action"];
                this.columnPrioDep_Note = base.Columns["PrioDep_Note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPrioDep_ID = new global::System.Data.DataColumn("PrioDep_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrioDep_ID);
                this.columnPrioDep_RuleName = new global::System.Data.DataColumn("PrioDep_RuleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrioDep_RuleName);
                this.columnPrioDep_ConceptIdentifier = new global::System.Data.DataColumn("PrioDep_ConceptIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrioDep_ConceptIdentifier);
                this.columnPrioDep_Action = new global::System.Data.DataColumn("PrioDep_Action", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrioDep_Action);
                this.columnPrioDep_Note = new global::System.Data.DataColumn("PrioDep_Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrioDep_Note);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPrioDep_ID}, true));
                this.columnPrioDep_ID.AllowDBNull = false;
                this.columnPrioDep_ID.Unique = true;
                this.columnPrioDep_RuleName.MaxLength = 200;
                this.columnPrioDep_ConceptIdentifier.MaxLength = 200;
                this.columnPrioDep_Action.MaxLength = 200;
                this.columnPrioDep_Note.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyRow NewTA_PriorityDependencyRow() {
                return ((TA_PriorityDependencyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TA_PriorityDependencyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TA_PriorityDependencyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TA_PriorityDependencyRowChanged != null)) {
                    this.TA_PriorityDependencyRowChanged(this, new TA_PriorityDependencyRowChangeEvent(((TA_PriorityDependencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TA_PriorityDependencyRowChanging != null)) {
                    this.TA_PriorityDependencyRowChanging(this, new TA_PriorityDependencyRowChangeEvent(((TA_PriorityDependencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TA_PriorityDependencyRowDeleted != null)) {
                    this.TA_PriorityDependencyRowDeleted(this, new TA_PriorityDependencyRowChangeEvent(((TA_PriorityDependencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TA_PriorityDependencyRowDeleting != null)) {
                    this.TA_PriorityDependencyRowDeleting(this, new TA_PriorityDependencyRowChangeEvent(((TA_PriorityDependencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTA_PriorityDependencyRow(TA_PriorityDependencyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ghadircopyDataSet ds = new ghadircopyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TA_PriorityDependencyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_PeriodicScndCnpDetailTemplateRow : global::System.Data.DataRow {
            
            private TA_PeriodicScndCnpDetailTemplateDataTable tableTA_PeriodicScndCnpDetailTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_PeriodicScndCnpDetailTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_PeriodicScndCnpDetailTemplate = ((TA_PeriodicScndCnpDetailTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PrdCnpTmpDetail_ID {
                get {
                    return ((decimal)(this[this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_IDColumn]));
                }
                set {
                    this[this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PrdCnpTmpDetail_PrdCnpTmpId {
                get {
                    return ((decimal)(this[this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_PrdCnpTmpIdColumn]));
                }
                set {
                    this[this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_PrdCnpTmpIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PrdCnpTmpDetail_DtlCnpTmpId {
                get {
                    return ((decimal)(this[this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_DtlCnpTmpIdColumn]));
                }
                set {
                    this[this.tableTA_PeriodicScndCnpDetailTemplate.PrdCnpTmpDetail_DtlCnpTmpIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow TA_ConceptTemplateRowByPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate {
                get {
                    return ((TA_ConceptTemplateRow)(this.GetParentRow(this.Table.ParentRelations["PRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_ConceptTemplateRow : global::System.Data.DataRow {
            
            private TA_ConceptTemplateDataTable tableTA_ConceptTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_ConceptTemplate = ((TA_ConceptTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmp_ID {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplate.ConceptTmp_IDColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Script {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_ScriptColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_ScriptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CSharpCode {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_CSharpCodeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CSharpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_IdentifierCode {
                get {
                    try {
                        return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_IdentifierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_IdentifierCode\' in table \'TA_ConceptTemplate\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_IdentifierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CustomCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_CustomCode\' in table \'TA_ConceptTemplate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CustomCategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_CustomCategoryCode\' in table \'TA_ConceptTemplate" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ConceptTmp_Type {
                get {
                    try {
                        return ((short)(this[this.tableTA_ConceptTemplate.ConceptTmp_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_Type\' in table \'TA_ConceptTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_PColumn {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_PColumn\' in table \'TA_ConceptTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Name {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_NameColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConceptTmp_IsPeriodic {
                get {
                    try {
                        return ((bool)(this[this.tableTA_ConceptTemplate.ConceptTmp_IsPeriodicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_IsPeriodic\' in table \'TA_ConceptTemplate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_IsPeriodicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_CalcSituationType {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_CalcSituationTypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_CalcSituationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_PersistSituationType {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate.ConceptTmp_PersistSituationTypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_PersistSituationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_EngName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_EngName\' in table \'TA_ConceptTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_FnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_FnName\' in table \'TA_ConceptTemplate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_KeyColumnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_KeyColumnName\' in table \'TA_ConceptTemplate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Color {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_Color\' in table \'TA_ConceptTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_IdentifierCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_IdentifierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_IdentifierCodeNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_IdentifierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_CustomCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_CustomCodeNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_CustomCategoryCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_CustomCategoryCodeNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_CustomCategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_TypeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_TypeNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_PColumnNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_PColumnNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_PColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_IsPeriodicNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_IsPeriodicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_IsPeriodicNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_IsPeriodicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_EngNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_EngNameNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_EngNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_FnNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_FnNameNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_FnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_KeyColumnNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_KeyColumnNameNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_KeyColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_ColorNull() {
                return this.IsNull(this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_ColorNull() {
                this[this.tableTA_ConceptTemplate.ConceptTmp_ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRow[] GetTA_PeriodicScndCnpDetailTemplateRowsByPRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate() {
                if ((this.Table.ChildRelations["PRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate"] == null)) {
                    return new TA_PeriodicScndCnpDetailTemplateRow[0];
                }
                else {
                    return ((TA_PeriodicScndCnpDetailTemplateRow[])(base.GetChildRows(this.Table.ChildRelations["PRD_TA_ConceptTemplate_TA_PeriodicScndCnpDetailTemplate"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_ConceptTemplate1Row : global::System.Data.DataRow {
            
            private TA_ConceptTemplate1DataTable tableTA_ConceptTemplate1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_ConceptTemplate1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_ConceptTemplate1 = ((TA_ConceptTemplate1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConceptTmp_ID {
                get {
                    return ((decimal)(this[this.tableTA_ConceptTemplate1.ConceptTmp_IDColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Name {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_NameColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Script {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_ScriptColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_ScriptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CSharpCode {
                get {
                    return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_CSharpCodeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_CSharpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_IdentifierCode {
                get {
                    try {
                        return ((int)(this[this.tableTA_ConceptTemplate1.ConceptTmp_IdentifierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_IdentifierCode\' in table \'TA_ConceptTemplate1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_IdentifierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CustomCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_CustomCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_CustomCode\' in table \'TA_ConceptTemplate1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_CustomCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_CustomCategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_CustomCategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_CustomCategoryCode\' in table \'TA_ConceptTemplate" +
                                "1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_CustomCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ConceptTmp_Type {
                get {
                    try {
                        return ((short)(this[this.tableTA_ConceptTemplate1.ConceptTmp_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_Type\' in table \'TA_ConceptTemplate1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_PColumn {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_PColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_PColumn\' in table \'TA_ConceptTemplate1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_PColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.IDNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDName\' in table \'TA_ConceptTemplate1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.IDNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConceptTmp_IsPeriodic {
                get {
                    try {
                        return ((bool)(this[this.tableTA_ConceptTemplate1.ConceptTmp_IsPeriodicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_IsPeriodic\' in table \'TA_ConceptTemplate1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_IsPeriodicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_CalcSituationType {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate1.ConceptTmp_CalcSituationTypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_CalcSituationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConceptTmp_PersistSituationType {
                get {
                    return ((int)(this[this.tableTA_ConceptTemplate1.ConceptTmp_PersistSituationTypeColumn]));
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_PersistSituationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_EngName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_EngNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_EngName\' in table \'TA_ConceptTemplate1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_EngNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_FnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_FnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_FnName\' in table \'TA_ConceptTemplate1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_FnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_KeyColumnName {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_KeyColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_KeyColumnName\' in table \'TA_ConceptTemplate1\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_KeyColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConceptTmp_Color {
                get {
                    try {
                        return ((string)(this[this.tableTA_ConceptTemplate1.ConceptTmp_ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConceptTmp_Color\' in table \'TA_ConceptTemplate1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTA_ConceptTemplate1.ConceptTmp_ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_IdentifierCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_IdentifierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_IdentifierCodeNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_IdentifierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_CustomCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_CustomCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_CustomCodeNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_CustomCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_CustomCategoryCodeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_CustomCategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_CustomCategoryCodeNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_CustomCategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_TypeNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_TypeNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_PColumnNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_PColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_PColumnNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_PColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.IDNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNameNull() {
                this[this.tableTA_ConceptTemplate1.IDNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_IsPeriodicNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_IsPeriodicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_IsPeriodicNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_IsPeriodicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_EngNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_EngNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_EngNameNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_EngNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_FnNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_FnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_FnNameNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_FnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_KeyColumnNameNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_KeyColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_KeyColumnNameNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_KeyColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConceptTmp_ColorNull() {
                return this.IsNull(this.tableTA_ConceptTemplate1.ConceptTmp_ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConceptTmp_ColorNull() {
                this[this.tableTA_ConceptTemplate1.ConceptTmp_ColorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TA_PriorityDependencyRow : global::System.Data.DataRow {
            
            private TA_PriorityDependencyDataTable tableTA_PriorityDependency;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TA_PriorityDependencyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTA_PriorityDependency = ((TA_PriorityDependencyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrioDep_ID {
                get {
                    return ((int)(this[this.tableTA_PriorityDependency.PrioDep_IDColumn]));
                }
                set {
                    this[this.tableTA_PriorityDependency.PrioDep_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrioDep_RuleName {
                get {
                    try {
                        return ((string)(this[this.tableTA_PriorityDependency.PrioDep_RuleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrioDep_RuleName\' in table \'TA_PriorityDependency\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTA_PriorityDependency.PrioDep_RuleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrioDep_ConceptIdentifier {
                get {
                    try {
                        return ((string)(this[this.tableTA_PriorityDependency.PrioDep_ConceptIdentifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrioDep_ConceptIdentifier\' in table \'TA_PriorityDependency\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_PriorityDependency.PrioDep_ConceptIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrioDep_Action {
                get {
                    try {
                        return ((string)(this[this.tableTA_PriorityDependency.PrioDep_ActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrioDep_Action\' in table \'TA_PriorityDependency\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTA_PriorityDependency.PrioDep_ActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrioDep_Note {
                get {
                    try {
                        return ((string)(this[this.tableTA_PriorityDependency.PrioDep_NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrioDep_Note\' in table \'TA_PriorityDependency\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTA_PriorityDependency.PrioDep_NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrioDep_RuleNameNull() {
                return this.IsNull(this.tableTA_PriorityDependency.PrioDep_RuleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrioDep_RuleNameNull() {
                this[this.tableTA_PriorityDependency.PrioDep_RuleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrioDep_ConceptIdentifierNull() {
                return this.IsNull(this.tableTA_PriorityDependency.PrioDep_ConceptIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrioDep_ConceptIdentifierNull() {
                this[this.tableTA_PriorityDependency.PrioDep_ConceptIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrioDep_ActionNull() {
                return this.IsNull(this.tableTA_PriorityDependency.PrioDep_ActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrioDep_ActionNull() {
                this[this.tableTA_PriorityDependency.PrioDep_ActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrioDep_NoteNull() {
                return this.IsNull(this.tableTA_PriorityDependency.PrioDep_NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrioDep_NoteNull() {
                this[this.tableTA_PriorityDependency.PrioDep_NoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_PeriodicScndCnpDetailTemplateRowChangeEvent : global::System.EventArgs {
            
            private TA_PeriodicScndCnpDetailTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRowChangeEvent(TA_PeriodicScndCnpDetailTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PeriodicScndCnpDetailTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_ConceptTemplateRowChangeEvent : global::System.EventArgs {
            
            private TA_ConceptTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRowChangeEvent(TA_ConceptTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_ConceptTemplate1RowChangeEvent : global::System.EventArgs {
            
            private TA_ConceptTemplate1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1RowChangeEvent(TA_ConceptTemplate1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_ConceptTemplate1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TA_PriorityDependencyRowChangeEvent : global::System.EventArgs {
            
            private TA_PriorityDependencyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyRowChangeEvent(TA_PriorityDependencyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TA_PriorityDependencyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GTS.Clock.AppSetup.DataSet.ghadircopyDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_PeriodicScndCnpDetailTemplateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_PeriodicScndCnpDetailTemplateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_PeriodicScndCnpDetailTemplate";
            tableMapping.ColumnMappings.Add("PrdCnpTmpDetail_ID", "PrdCnpTmpDetail_ID");
            tableMapping.ColumnMappings.Add("PrdCnpTmpDetail_PrdCnpTmpId", "PrdCnpTmpDetail_PrdCnpTmpId");
            tableMapping.ColumnMappings.Add("PrdCnpTmpDetail_DtlCnpTmpId", "PrdCnpTmpDetail_DtlCnpTmpId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TA_PeriodicCnpTmpDetail] WHERE (([PrdCnpTmpDetail_ID] = @Original_Pr" +
                "dCnpTmpDetail_ID) AND ([PrdCnpTmpDetail_PrdCnpTmpId] = @Original_PrdCnpTmpDetail" +
                "_PrdCnpTmpId) AND ([PrdCnpTmpDetail_DtlCnpTmpId] = @Original_PrdCnpTmpDetail_Dtl" +
                "CnpTmpId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrdCnpTmpDetail_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_PeriodicCnpTmpDetail] ([PrdCnpTmpDetail_PrdCnpTmpId], [PrdCnpTmpDetail_DtlCnpTmpId]) VALUES (@PrdCnpTmpDetail_PrdCnpTmpId, @PrdCnpTmpDetail_DtlCnpTmpId);
SELECT PrdCnpTmpDetail_ID, PrdCnpTmpDetail_PrdCnpTmpId, PrdCnpTmpDetail_DtlCnpTmpId FROM TA_PeriodicCnpTmpDetail WHERE (PrdCnpTmpDetail_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TA_PeriodicCnpTmpDetail] SET [PrdCnpTmpDetail_PrdCnpTmpId] = @PrdCnpTmpDetail_PrdCnpTmpId, [PrdCnpTmpDetail_DtlCnpTmpId] = @PrdCnpTmpDetail_DtlCnpTmpId WHERE (([PrdCnpTmpDetail_ID] = @Original_PrdCnpTmpDetail_ID) AND ([PrdCnpTmpDetail_PrdCnpTmpId] = @Original_PrdCnpTmpDetail_PrdCnpTmpId) AND ([PrdCnpTmpDetail_DtlCnpTmpId] = @Original_PrdCnpTmpDetail_DtlCnpTmpId));
SELECT PrdCnpTmpDetail_ID, PrdCnpTmpDetail_PrdCnpTmpId, PrdCnpTmpDetail_DtlCnpTmpId FROM TA_PeriodicCnpTmpDetail WHERE (PrdCnpTmpDetail_ID = @PrdCnpTmpDetail_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrdCnpTmpDetail_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_PrdCnpTmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_DtlCnpTmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrdCnpTmpDetail_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "PrdCnpTmpDetail_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * from TA_PeriodicCnpTmpDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ghadircopyDataSet.TA_PeriodicScndCnpDetailTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ghadircopyDataSet.TA_PeriodicScndCnpDetailTemplateDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ghadircopyDataSet.TA_PeriodicScndCnpDetailTemplateDataTable dataTable = new ghadircopyDataSet.TA_PeriodicScndCnpDetailTemplateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet.TA_PeriodicScndCnpDetailTemplateDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_PeriodicScndCnpDetailTemplate");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_ConceptTemplateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_ConceptTemplateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_ConceptTemplate";
            tableMapping.ColumnMappings.Add("ConceptTmp_ID", "ConceptTmp_ID");
            tableMapping.ColumnMappings.Add("ConceptTmp_Script", "ConceptTmp_Script");
            tableMapping.ColumnMappings.Add("ConceptTmp_CSharpCode", "ConceptTmp_CSharpCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_IdentifierCode", "ConceptTmp_IdentifierCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_CustomCode", "ConceptTmp_CustomCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_CustomCategoryCode", "ConceptTmp_CustomCategoryCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_Type", "ConceptTmp_Type");
            tableMapping.ColumnMappings.Add("ConceptTmp_PColumn", "ConceptTmp_PColumn");
            tableMapping.ColumnMappings.Add("ConceptTmp_Name", "ConceptTmp_Name");
            tableMapping.ColumnMappings.Add("ConceptTmp_IsPeriodic", "ConceptTmp_IsPeriodic");
            tableMapping.ColumnMappings.Add("ConceptTmp_CalcSituationType", "ConceptTmp_CalcSituationType");
            tableMapping.ColumnMappings.Add("ConceptTmp_PersistSituationType", "ConceptTmp_PersistSituationType");
            tableMapping.ColumnMappings.Add("ConceptTmp_EngName", "ConceptTmp_EngName");
            tableMapping.ColumnMappings.Add("ConceptTmp_FnName", "ConceptTmp_FnName");
            tableMapping.ColumnMappings.Add("ConceptTmp_KeyColumnName", "ConceptTmp_KeyColumnName");
            tableMapping.ColumnMappings.Add("ConceptTmp_Color", "ConceptTmp_Color");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TA_ConceptTemplate] WHERE (([ConceptTmp_ID] = @Original_ConceptTmp_I" +
                "D) AND ((@IsNull_ConceptTmp_IdentifierCode = 1 AND [ConceptTmp_IdentifierCode] I" +
                "S NULL) OR ([ConceptTmp_IdentifierCode] = @Original_ConceptTmp_IdentifierCode)) " +
                "AND ((@IsNull_ConceptTmp_CustomCode = 1 AND [ConceptTmp_CustomCode] IS NULL) OR " +
                "([ConceptTmp_CustomCode] = @Original_ConceptTmp_CustomCode)) AND ((@IsNull_Conce" +
                "ptTmp_CustomCategoryCode = 1 AND [ConceptTmp_CustomCategoryCode] IS NULL) OR ([C" +
                "onceptTmp_CustomCategoryCode] = @Original_ConceptTmp_CustomCategoryCode)) AND ((" +
                "@IsNull_ConceptTmp_Type = 1 AND [ConceptTmp_Type] IS NULL) OR ([ConceptTmp_Type]" +
                " = @Original_ConceptTmp_Type)) AND ((@IsNull_ConceptTmp_PColumn = 1 AND [Concept" +
                "Tmp_PColumn] IS NULL) OR ([ConceptTmp_PColumn] = @Original_ConceptTmp_PColumn)) " +
                "AND ([ConceptTmp_Name] = @Original_ConceptTmp_Name) AND ((@IsNull_ConceptTmp_IsP" +
                "eriodic = 1 AND [ConceptTmp_IsPeriodic] IS NULL) OR ([ConceptTmp_IsPeriodic] = @" +
                "Original_ConceptTmp_IsPeriodic)) AND ([ConceptTmp_CalcSituationType] = @Original" +
                "_ConceptTmp_CalcSituationType) AND ([ConceptTmp_PersistSituationType] = @Origina" +
                "l_ConceptTmp_PersistSituationType) AND ((@IsNull_ConceptTmp_EngName = 1 AND [Con" +
                "ceptTmp_EngName] IS NULL) OR ([ConceptTmp_EngName] = @Original_ConceptTmp_EngNam" +
                "e)) AND ((@IsNull_ConceptTmp_FnName = 1 AND [ConceptTmp_FnName] IS NULL) OR ([Co" +
                "nceptTmp_FnName] = @Original_ConceptTmp_FnName)) AND ((@IsNull_ConceptTmp_KeyCol" +
                "umnName = 1 AND [ConceptTmp_KeyColumnName] IS NULL) OR ([ConceptTmp_KeyColumnNam" +
                "e] = @Original_ConceptTmp_KeyColumnName)) AND ((@IsNull_ConceptTmp_Color = 1 AND" +
                " [ConceptTmp_Color] IS NULL) OR ([ConceptTmp_Color] = @Original_ConceptTmp_Color" +
                ")))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_PColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_EngName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_FnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_ConceptTemplate] ([ConceptTmp_ID], [ConceptTmp_Script], [ConceptTmp_CSharpCode], [ConceptTmp_IdentifierCode], [ConceptTmp_CustomCode], [ConceptTmp_CustomCategoryCode], [ConceptTmp_Type], [ConceptTmp_PColumn], [ConceptTmp_Name], [ConceptTmp_IsPeriodic], [ConceptTmp_CalcSituationType], [ConceptTmp_PersistSituationType], [ConceptTmp_EngName], [ConceptTmp_FnName], [ConceptTmp_KeyColumnName], [ConceptTmp_Color]) VALUES (@ConceptTmp_ID, @ConceptTmp_Script, @ConceptTmp_CSharpCode, @ConceptTmp_IdentifierCode, @ConceptTmp_CustomCode, @ConceptTmp_CustomCategoryCode, @ConceptTmp_Type, @ConceptTmp_PColumn, @ConceptTmp_Name, @ConceptTmp_IsPeriodic, @ConceptTmp_CalcSituationType, @ConceptTmp_PersistSituationType, @ConceptTmp_EngName, @ConceptTmp_FnName, @ConceptTmp_KeyColumnName, @ConceptTmp_Color);
SELECT ConceptTmp_ID, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_Name, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color FROM TA_ConceptTemplate WHERE (ConceptTmp_ID = @ConceptTmp_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TA_ConceptTemplate] SET [ConceptTmp_ID] = @ConceptTmp_ID, [ConceptTmp_Scr" +
                "ipt] = @ConceptTmp_Script, [ConceptTmp_CSharpCode] = @ConceptTmp_CSharpCode, [Co" +
                "nceptTmp_IdentifierCode] = @ConceptTmp_IdentifierCode, [ConceptTmp_CustomCode] =" +
                " @ConceptTmp_CustomCode, [ConceptTmp_CustomCategoryCode] = @ConceptTmp_CustomCat" +
                "egoryCode, [ConceptTmp_Type] = @ConceptTmp_Type, [ConceptTmp_PColumn] = @Concept" +
                "Tmp_PColumn, [ConceptTmp_Name] = @ConceptTmp_Name, [ConceptTmp_IsPeriodic] = @Co" +
                "nceptTmp_IsPeriodic, [ConceptTmp_CalcSituationType] = @ConceptTmp_CalcSituationT" +
                "ype, [ConceptTmp_PersistSituationType] = @ConceptTmp_PersistSituationType, [Conc" +
                "eptTmp_EngName] = @ConceptTmp_EngName, [ConceptTmp_FnName] = @ConceptTmp_FnName," +
                " [ConceptTmp_KeyColumnName] = @ConceptTmp_KeyColumnName, [ConceptTmp_Color] = @C" +
                "onceptTmp_Color WHERE (([ConceptTmp_ID] = @Original_ConceptTmp_ID) AND ((@IsNull" +
                "_ConceptTmp_IdentifierCode = 1 AND [ConceptTmp_IdentifierCode] IS NULL) OR ([Con" +
                "ceptTmp_IdentifierCode] = @Original_ConceptTmp_IdentifierCode)) AND ((@IsNull_Co" +
                "nceptTmp_CustomCode = 1 AND [ConceptTmp_CustomCode] IS NULL) OR ([ConceptTmp_Cus" +
                "tomCode] = @Original_ConceptTmp_CustomCode)) AND ((@IsNull_ConceptTmp_CustomCate" +
                "goryCode = 1 AND [ConceptTmp_CustomCategoryCode] IS NULL) OR ([ConceptTmp_Custom" +
                "CategoryCode] = @Original_ConceptTmp_CustomCategoryCode)) AND ((@IsNull_ConceptT" +
                "mp_Type = 1 AND [ConceptTmp_Type] IS NULL) OR ([ConceptTmp_Type] = @Original_Con" +
                "ceptTmp_Type)) AND ((@IsNull_ConceptTmp_PColumn = 1 AND [ConceptTmp_PColumn] IS " +
                "NULL) OR ([ConceptTmp_PColumn] = @Original_ConceptTmp_PColumn)) AND ([ConceptTmp" +
                "_Name] = @Original_ConceptTmp_Name) AND ((@IsNull_ConceptTmp_IsPeriodic = 1 AND " +
                "[ConceptTmp_IsPeriodic] IS NULL) OR ([ConceptTmp_IsPeriodic] = @Original_Concept" +
                "Tmp_IsPeriodic)) AND ([ConceptTmp_CalcSituationType] = @Original_ConceptTmp_Calc" +
                "SituationType) AND ([ConceptTmp_PersistSituationType] = @Original_ConceptTmp_Per" +
                "sistSituationType) AND ((@IsNull_ConceptTmp_EngName = 1 AND [ConceptTmp_EngName]" +
                " IS NULL) OR ([ConceptTmp_EngName] = @Original_ConceptTmp_EngName)) AND ((@IsNul" +
                "l_ConceptTmp_FnName = 1 AND [ConceptTmp_FnName] IS NULL) OR ([ConceptTmp_FnName]" +
                " = @Original_ConceptTmp_FnName)) AND ((@IsNull_ConceptTmp_KeyColumnName = 1 AND " +
                "[ConceptTmp_KeyColumnName] IS NULL) OR ([ConceptTmp_KeyColumnName] = @Original_C" +
                "onceptTmp_KeyColumnName)) AND ((@IsNull_ConceptTmp_Color = 1 AND [ConceptTmp_Col" +
                "or] IS NULL) OR ([ConceptTmp_Color] = @Original_ConceptTmp_Color)));\r\nSELECT Con" +
                "ceptTmp_ID, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode," +
                " ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptT" +
                "mp_PColumn, ConceptTmp_Name, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType" +
                ", ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, Concep" +
                "tTmp_KeyColumnName, ConceptTmp_Color FROM TA_ConceptTemplate WHERE (ConceptTmp_I" +
                "D = @ConceptTmp_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_PColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_EngName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_FnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ConceptTmp_ID, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, 
                      ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_Name, ConceptTmp_IsPeriodic, 
                      ConceptTmp_CalcSituationType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, 
                      ConceptTmp_Color
FROM         TA_ConceptTemplate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = new global::System.Data.SqlClient.SqlConnection(global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString);
            this._commandCollection[1].CommandText = "SELECT *  FROM TA_ConceptTemplate WHERE (ConceptTmp_ID = @identifier)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@identifier", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ghadircopyDataSet.TA_ConceptTemplateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ghadircopyDataSet.TA_ConceptTemplateDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ghadircopyDataSet.TA_ConceptTemplateDataTable dataTable = new ghadircopyDataSet.TA_ConceptTemplateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(ghadircopyDataSet.TA_ConceptTemplateDataTable dataTable, decimal identifier) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(identifier));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ghadircopyDataSet.TA_ConceptTemplateDataTable GetDataByID(decimal identifier) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(identifier));
            ghadircopyDataSet.TA_ConceptTemplateDataTable dataTable = new ghadircopyDataSet.TA_ConceptTemplateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet.TA_ConceptTemplateDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_ConceptTemplate");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ConceptTmp_ID, global::System.Nullable<int> Original_ConceptTmp_IdentifierCode, string Original_ConceptTmp_CustomCode, string Original_ConceptTmp_CustomCategoryCode, global::System.Nullable<short> Original_ConceptTmp_Type, string Original_ConceptTmp_PColumn, string Original_ConceptTmp_Name, global::System.Nullable<bool> Original_ConceptTmp_IsPeriodic, int Original_ConceptTmp_CalcSituationType, int Original_ConceptTmp_PersistSituationType, string Original_ConceptTmp_EngName, string Original_ConceptTmp_FnName, string Original_ConceptTmp_KeyColumnName, string Original_ConceptTmp_Color) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ConceptTmp_ID));
            if ((Original_ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_CustomCode == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ConceptTmp_CustomCode));
            }
            if ((Original_ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ConceptTmp_CustomCategoryCode));
            }
            if ((Original_ConceptTmp_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_PColumn == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ConceptTmp_PColumn));
            }
            if ((Original_ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmp_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ConceptTmp_Name));
            }
            if ((Original_ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ConceptTmp_CalcSituationType));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_ConceptTmp_PersistSituationType));
            if ((Original_ConceptTmp_EngName == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ConceptTmp_EngName));
            }
            if ((Original_ConceptTmp_FnName == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ConceptTmp_FnName));
            }
            if ((Original_ConceptTmp_KeyColumnName == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_ConceptTmp_KeyColumnName));
            }
            if ((Original_ConceptTmp_Color == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ConceptTmp_Color));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal ConceptTmp_ID, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    global::System.Nullable<int> ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    string ConceptTmp_Name, 
                    global::System.Nullable<bool> ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ConceptTmp_ID));
            if ((ConceptTmp_Script == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Script");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ConceptTmp_Script));
            }
            if ((ConceptTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_CSharpCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ConceptTmp_CSharpCode));
            }
            if ((ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_CustomCode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ConceptTmp_CustomCode));
            }
            if ((ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ConceptTmp_CustomCategoryCode));
            }
            if ((ConceptTmp_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((short)(ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_PColumn == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ConceptTmp_PColumn));
            }
            if ((ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ConceptTmp_Name));
            }
            if ((ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ConceptTmp_CalcSituationType));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(ConceptTmp_PersistSituationType));
            if ((ConceptTmp_EngName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ConceptTmp_EngName));
            }
            if ((ConceptTmp_FnName == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ConceptTmp_FnName));
            }
            if ((ConceptTmp_KeyColumnName == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ConceptTmp_KeyColumnName));
            }
            if ((ConceptTmp_Color == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ConceptTmp_Color));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ConceptTmp_ID, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    global::System.Nullable<int> ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    string ConceptTmp_Name, 
                    global::System.Nullable<bool> ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    decimal Original_ConceptTmp_ID, 
                    global::System.Nullable<int> Original_ConceptTmp_IdentifierCode, 
                    string Original_ConceptTmp_CustomCode, 
                    string Original_ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> Original_ConceptTmp_Type, 
                    string Original_ConceptTmp_PColumn, 
                    string Original_ConceptTmp_Name, 
                    global::System.Nullable<bool> Original_ConceptTmp_IsPeriodic, 
                    int Original_ConceptTmp_CalcSituationType, 
                    int Original_ConceptTmp_PersistSituationType, 
                    string Original_ConceptTmp_EngName, 
                    string Original_ConceptTmp_FnName, 
                    string Original_ConceptTmp_KeyColumnName, 
                    string Original_ConceptTmp_Color) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ConceptTmp_ID));
            if ((ConceptTmp_Script == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Script");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ConceptTmp_Script));
            }
            if ((ConceptTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_CSharpCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ConceptTmp_CSharpCode));
            }
            if ((ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ConceptTmp_CustomCode));
            }
            if ((ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ConceptTmp_CustomCategoryCode));
            }
            if ((ConceptTmp_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_PColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ConceptTmp_PColumn));
            }
            if ((ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ConceptTmp_Name));
            }
            if ((ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ConceptTmp_CalcSituationType));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ConceptTmp_PersistSituationType));
            if ((ConceptTmp_EngName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ConceptTmp_EngName));
            }
            if ((ConceptTmp_FnName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ConceptTmp_FnName));
            }
            if ((ConceptTmp_KeyColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ConceptTmp_KeyColumnName));
            }
            if ((ConceptTmp_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ConceptTmp_Color));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_ConceptTmp_ID));
            if ((Original_ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ConceptTmp_CustomCode));
            }
            if ((Original_ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ConceptTmp_CustomCategoryCode));
            }
            if ((Original_ConceptTmp_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(Original_ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_PColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ConceptTmp_PColumn));
            }
            if ((Original_ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ConceptTmp_Name));
            }
            if ((Original_ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_ConceptTmp_CalcSituationType));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_ConceptTmp_PersistSituationType));
            if ((Original_ConceptTmp_EngName == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ConceptTmp_EngName));
            }
            if ((Original_ConceptTmp_FnName == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_ConceptTmp_FnName));
            }
            if ((Original_ConceptTmp_KeyColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_ConceptTmp_KeyColumnName));
            }
            if ((Original_ConceptTmp_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_ConceptTmp_Color));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    global::System.Nullable<int> ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    string ConceptTmp_Name, 
                    global::System.Nullable<bool> ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    decimal Original_ConceptTmp_ID, 
                    global::System.Nullable<int> Original_ConceptTmp_IdentifierCode, 
                    string Original_ConceptTmp_CustomCode, 
                    string Original_ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> Original_ConceptTmp_Type, 
                    string Original_ConceptTmp_PColumn, 
                    string Original_ConceptTmp_Name, 
                    global::System.Nullable<bool> Original_ConceptTmp_IsPeriodic, 
                    int Original_ConceptTmp_CalcSituationType, 
                    int Original_ConceptTmp_PersistSituationType, 
                    string Original_ConceptTmp_EngName, 
                    string Original_ConceptTmp_FnName, 
                    string Original_ConceptTmp_KeyColumnName, 
                    string Original_ConceptTmp_Color) {
            return this.Update(Original_ConceptTmp_ID, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_Name, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color, Original_ConceptTmp_ID, Original_ConceptTmp_IdentifierCode, Original_ConceptTmp_CustomCode, Original_ConceptTmp_CustomCategoryCode, Original_ConceptTmp_Type, Original_ConceptTmp_PColumn, Original_ConceptTmp_Name, Original_ConceptTmp_IsPeriodic, Original_ConceptTmp_CalcSituationType, Original_ConceptTmp_PersistSituationType, Original_ConceptTmp_EngName, Original_ConceptTmp_FnName, Original_ConceptTmp_KeyColumnName, Original_ConceptTmp_Color);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_ConceptTemplate1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_ConceptTemplate1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_ConceptTemplate1";
            tableMapping.ColumnMappings.Add("ConceptTmp_ID", "ConceptTmp_ID");
            tableMapping.ColumnMappings.Add("ConceptTmp_Name", "ConceptTmp_Name");
            tableMapping.ColumnMappings.Add("ConceptTmp_Script", "ConceptTmp_Script");
            tableMapping.ColumnMappings.Add("ConceptTmp_CSharpCode", "ConceptTmp_CSharpCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_IdentifierCode", "ConceptTmp_IdentifierCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_CustomCode", "ConceptTmp_CustomCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_CustomCategoryCode", "ConceptTmp_CustomCategoryCode");
            tableMapping.ColumnMappings.Add("ConceptTmp_Type", "ConceptTmp_Type");
            tableMapping.ColumnMappings.Add("ConceptTmp_PColumn", "ConceptTmp_PColumn");
            tableMapping.ColumnMappings.Add("IDName", "IDName");
            tableMapping.ColumnMappings.Add("ConceptTmp_IsPeriodic", "ConceptTmp_IsPeriodic");
            tableMapping.ColumnMappings.Add("ConceptTmp_CalcSituationType", "ConceptTmp_CalcSituationType");
            tableMapping.ColumnMappings.Add("ConceptTmp_PersistSituationType", "ConceptTmp_PersistSituationType");
            tableMapping.ColumnMappings.Add("ConceptTmp_EngName", "ConceptTmp_EngName");
            tableMapping.ColumnMappings.Add("ConceptTmp_FnName", "ConceptTmp_FnName");
            tableMapping.ColumnMappings.Add("ConceptTmp_KeyColumnName", "ConceptTmp_KeyColumnName");
            tableMapping.ColumnMappings.Add("ConceptTmp_Color", "ConceptTmp_Color");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TA_ConceptTemplate] WHERE (([ConceptTmp_ID] = @Original_ConceptTmp_I" +
                "D) AND ([ConceptTmp_Name] = @Original_ConceptTmp_Name) AND ((@IsNull_ConceptTmp_" +
                "IdentifierCode = 1 AND [ConceptTmp_IdentifierCode] IS NULL) OR ([ConceptTmp_Iden" +
                "tifierCode] = @Original_ConceptTmp_IdentifierCode)) AND ((@IsNull_ConceptTmp_Cus" +
                "tomCode = 1 AND [ConceptTmp_CustomCode] IS NULL) OR ([ConceptTmp_CustomCode] = @" +
                "Original_ConceptTmp_CustomCode)) AND ((@IsNull_ConceptTmp_CustomCategoryCode = 1" +
                " AND [ConceptTmp_CustomCategoryCode] IS NULL) OR ([ConceptTmp_CustomCategoryCode" +
                "] = @Original_ConceptTmp_CustomCategoryCode)) AND ((@IsNull_ConceptTmp_Type = 1 " +
                "AND [ConceptTmp_Type] IS NULL) OR ([ConceptTmp_Type] = @Original_ConceptTmp_Type" +
                ")) AND ((@IsNull_ConceptTmp_PColumn = 1 AND [ConceptTmp_PColumn] IS NULL) OR ([C" +
                "onceptTmp_PColumn] = @Original_ConceptTmp_PColumn)) AND ((@IsNull_ConceptTmp_IsP" +
                "eriodic = 1 AND [ConceptTmp_IsPeriodic] IS NULL) OR ([ConceptTmp_IsPeriodic] = @" +
                "Original_ConceptTmp_IsPeriodic)) AND ([ConceptTmp_CalcSituationType] = @Original" +
                "_ConceptTmp_CalcSituationType) AND ([ConceptTmp_PersistSituationType] = @Origina" +
                "l_ConceptTmp_PersistSituationType) AND ((@IsNull_ConceptTmp_EngName = 1 AND [Con" +
                "ceptTmp_EngName] IS NULL) OR ([ConceptTmp_EngName] = @Original_ConceptTmp_EngNam" +
                "e)) AND ((@IsNull_ConceptTmp_FnName = 1 AND [ConceptTmp_FnName] IS NULL) OR ([Co" +
                "nceptTmp_FnName] = @Original_ConceptTmp_FnName)) AND ((@IsNull_ConceptTmp_KeyCol" +
                "umnName = 1 AND [ConceptTmp_KeyColumnName] IS NULL) OR ([ConceptTmp_KeyColumnNam" +
                "e] = @Original_ConceptTmp_KeyColumnName)) AND ((@IsNull_ConceptTmp_Color = 1 AND" +
                " [ConceptTmp_Color] IS NULL) OR ([ConceptTmp_Color] = @Original_ConceptTmp_Color" +
                ")))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_PColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_EngName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_FnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_ConceptTemplate] ([ConceptTmp_ID], [ConceptTmp_Name], [ConceptTmp_Script], [ConceptTmp_CSharpCode], [ConceptTmp_IdentifierCode], [ConceptTmp_CustomCode], [ConceptTmp_CustomCategoryCode], [ConceptTmp_Type], [ConceptTmp_PColumn], [ConceptTmp_IsPeriodic], [ConceptTmp_CalcSituationType], [ConceptTmp_PersistSituationType], [ConceptTmp_EngName], [ConceptTmp_FnName], [ConceptTmp_KeyColumnName], [ConceptTmp_Color]) VALUES (@ConceptTmp_ID, @ConceptTmp_Name, @ConceptTmp_Script, @ConceptTmp_CSharpCode, @ConceptTmp_IdentifierCode, @ConceptTmp_CustomCode, @ConceptTmp_CustomCategoryCode, @ConceptTmp_Type, @ConceptTmp_PColumn, @ConceptTmp_IsPeriodic, @ConceptTmp_CalcSituationType, @ConceptTmp_PersistSituationType, @ConceptTmp_EngName, @ConceptTmp_FnName, @ConceptTmp_KeyColumnName, @ConceptTmp_Color);
SELECT ConceptTmp_ID, CONVERT (varchar(10), ConceptTmp_IdentifierCode) + ' - ' + ConceptTmp_Name AS IDName, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color FROM TA_ConceptTemplate WHERE (ConceptTmp_ID = @ConceptTmp_ID) ORDER BY ConceptTmp_IdentifierCode";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TA_ConceptTemplate] SET [ConceptTmp_ID] = @ConceptTmp_ID, [ConceptTmp_Nam" +
                "e] = @ConceptTmp_Name, [ConceptTmp_Script] = @ConceptTmp_Script, [ConceptTmp_CSh" +
                "arpCode] = @ConceptTmp_CSharpCode, [ConceptTmp_IdentifierCode] = @ConceptTmp_Ide" +
                "ntifierCode, [ConceptTmp_CustomCode] = @ConceptTmp_CustomCode, [ConceptTmp_Custo" +
                "mCategoryCode] = @ConceptTmp_CustomCategoryCode, [ConceptTmp_Type] = @ConceptTmp" +
                "_Type, [ConceptTmp_PColumn] = @ConceptTmp_PColumn, [ConceptTmp_IsPeriodic] = @Co" +
                "nceptTmp_IsPeriodic, [ConceptTmp_CalcSituationType] = @ConceptTmp_CalcSituationT" +
                "ype, [ConceptTmp_PersistSituationType] = @ConceptTmp_PersistSituationType, [Conc" +
                "eptTmp_EngName] = @ConceptTmp_EngName, [ConceptTmp_FnName] = @ConceptTmp_FnName," +
                " [ConceptTmp_KeyColumnName] = @ConceptTmp_KeyColumnName, [ConceptTmp_Color] = @C" +
                "onceptTmp_Color WHERE (([ConceptTmp_ID] = @Original_ConceptTmp_ID) AND ([Concept" +
                "Tmp_Name] = @Original_ConceptTmp_Name) AND ((@IsNull_ConceptTmp_IdentifierCode =" +
                " 1 AND [ConceptTmp_IdentifierCode] IS NULL) OR ([ConceptTmp_IdentifierCode] = @O" +
                "riginal_ConceptTmp_IdentifierCode)) AND ((@IsNull_ConceptTmp_CustomCode = 1 AND " +
                "[ConceptTmp_CustomCode] IS NULL) OR ([ConceptTmp_CustomCode] = @Original_Concept" +
                "Tmp_CustomCode)) AND ((@IsNull_ConceptTmp_CustomCategoryCode = 1 AND [ConceptTmp" +
                "_CustomCategoryCode] IS NULL) OR ([ConceptTmp_CustomCategoryCode] = @Original_Co" +
                "nceptTmp_CustomCategoryCode)) AND ((@IsNull_ConceptTmp_Type = 1 AND [ConceptTmp_" +
                "Type] IS NULL) OR ([ConceptTmp_Type] = @Original_ConceptTmp_Type)) AND ((@IsNull" +
                "_ConceptTmp_PColumn = 1 AND [ConceptTmp_PColumn] IS NULL) OR ([ConceptTmp_PColum" +
                "n] = @Original_ConceptTmp_PColumn)) AND ((@IsNull_ConceptTmp_IsPeriodic = 1 AND " +
                "[ConceptTmp_IsPeriodic] IS NULL) OR ([ConceptTmp_IsPeriodic] = @Original_Concept" +
                "Tmp_IsPeriodic)) AND ([ConceptTmp_CalcSituationType] = @Original_ConceptTmp_Calc" +
                "SituationType) AND ([ConceptTmp_PersistSituationType] = @Original_ConceptTmp_Per" +
                "sistSituationType) AND ((@IsNull_ConceptTmp_EngName = 1 AND [ConceptTmp_EngName]" +
                " IS NULL) OR ([ConceptTmp_EngName] = @Original_ConceptTmp_EngName)) AND ((@IsNul" +
                "l_ConceptTmp_FnName = 1 AND [ConceptTmp_FnName] IS NULL) OR ([ConceptTmp_FnName]" +
                " = @Original_ConceptTmp_FnName)) AND ((@IsNull_ConceptTmp_KeyColumnName = 1 AND " +
                "[ConceptTmp_KeyColumnName] IS NULL) OR ([ConceptTmp_KeyColumnName] = @Original_C" +
                "onceptTmp_KeyColumnName)) AND ((@IsNull_ConceptTmp_Color = 1 AND [ConceptTmp_Col" +
                "or] IS NULL) OR ([ConceptTmp_Color] = @Original_ConceptTmp_Color)));\r\nSELECT Con" +
                "ceptTmp_ID, CONVERT (varchar(10), ConceptTmp_IdentifierCode) + \' - \' + ConceptTm" +
                "p_Name AS IDName, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCode, Con" +
                "ceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, Co" +
                "nceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituati" +
                "onType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, " +
                "ConceptTmp_KeyColumnName, ConceptTmp_Color FROM TA_ConceptTemplate WHERE (Concep" +
                "tTmp_ID = @ConceptTmp_ID) ORDER BY ConceptTmp_IdentifierCode";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Script", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Script", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CSharpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CSharpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ConceptTmp_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IdentifierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IdentifierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CustomCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CustomCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Type", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_PColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_IsPeriodic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_IsPeriodic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_CalcSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_CalcSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_PersistSituationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_PersistSituationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_EngName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_EngName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_EngName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_FnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_FnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_FnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_KeyColumnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_KeyColumnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConceptTmp_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptTmp_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptTmp_Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.FalatConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ConceptTmp_ID, CONVERT(varchar(10), ConceptTmp_IdentifierCode) + ' - ' + ConceptTmp_Name AS IDName, ConceptTmp_Name, ConceptTmp_Script, 
                      ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, 
                      ConceptTmp_PColumn, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, 
                      ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color
FROM         TA_ConceptTemplate
ORDER BY ConceptTmp_IdentifierCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ghadircopyDataSet.TA_ConceptTemplate1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ghadircopyDataSet.TA_ConceptTemplate1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ghadircopyDataSet.TA_ConceptTemplate1DataTable dataTable = new ghadircopyDataSet.TA_ConceptTemplate1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet.TA_ConceptTemplate1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_ConceptTemplate1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ConceptTmp_ID, string Original_ConceptTmp_Name, global::System.Nullable<int> Original_ConceptTmp_IdentifierCode, string Original_ConceptTmp_CustomCode, string Original_ConceptTmp_CustomCategoryCode, global::System.Nullable<short> Original_ConceptTmp_Type, string Original_ConceptTmp_PColumn, global::System.Nullable<bool> Original_ConceptTmp_IsPeriodic, int Original_ConceptTmp_CalcSituationType, int Original_ConceptTmp_PersistSituationType, string Original_ConceptTmp_EngName, string Original_ConceptTmp_FnName, string Original_ConceptTmp_KeyColumnName, string Original_ConceptTmp_Color) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ConceptTmp_ID));
            if ((Original_ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmp_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ConceptTmp_Name));
            }
            if ((Original_ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_CustomCode == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ConceptTmp_CustomCode));
            }
            if ((Original_ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ConceptTmp_CustomCategoryCode));
            }
            if ((Original_ConceptTmp_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((short)(Original_ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_PColumn == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ConceptTmp_PColumn));
            }
            if ((Original_ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ConceptTmp_CalcSituationType));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_ConceptTmp_PersistSituationType));
            if ((Original_ConceptTmp_EngName == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ConceptTmp_EngName));
            }
            if ((Original_ConceptTmp_FnName == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ConceptTmp_FnName));
            }
            if ((Original_ConceptTmp_KeyColumnName == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_ConceptTmp_KeyColumnName));
            }
            if ((Original_ConceptTmp_Color == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ConceptTmp_Color));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal ConceptTmp_ID, 
                    string ConceptTmp_Name, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    global::System.Nullable<int> ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    global::System.Nullable<bool> ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ConceptTmp_ID));
            if ((ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ConceptTmp_Name));
            }
            if ((ConceptTmp_Script == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Script");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ConceptTmp_Script));
            }
            if ((ConceptTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_CSharpCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ConceptTmp_CSharpCode));
            }
            if ((ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_CustomCode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ConceptTmp_CustomCode));
            }
            if ((ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ConceptTmp_CustomCategoryCode));
            }
            if ((ConceptTmp_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((short)(ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_PColumn == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ConceptTmp_PColumn));
            }
            if ((ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ConceptTmp_CalcSituationType));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(ConceptTmp_PersistSituationType));
            if ((ConceptTmp_EngName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ConceptTmp_EngName));
            }
            if ((ConceptTmp_FnName == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ConceptTmp_FnName));
            }
            if ((ConceptTmp_KeyColumnName == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ConceptTmp_KeyColumnName));
            }
            if ((ConceptTmp_Color == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ConceptTmp_Color));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ConceptTmp_ID, 
                    string ConceptTmp_Name, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    global::System.Nullable<int> ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    global::System.Nullable<bool> ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    decimal Original_ConceptTmp_ID, 
                    string Original_ConceptTmp_Name, 
                    global::System.Nullable<int> Original_ConceptTmp_IdentifierCode, 
                    string Original_ConceptTmp_CustomCode, 
                    string Original_ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> Original_ConceptTmp_Type, 
                    string Original_ConceptTmp_PColumn, 
                    global::System.Nullable<bool> Original_ConceptTmp_IsPeriodic, 
                    int Original_ConceptTmp_CalcSituationType, 
                    int Original_ConceptTmp_PersistSituationType, 
                    string Original_ConceptTmp_EngName, 
                    string Original_ConceptTmp_FnName, 
                    string Original_ConceptTmp_KeyColumnName, 
                    string Original_ConceptTmp_Color) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ConceptTmp_ID));
            if ((ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ConceptTmp_Name));
            }
            if ((ConceptTmp_Script == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_Script");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ConceptTmp_Script));
            }
            if ((ConceptTmp_CSharpCode == null)) {
                throw new global::System.ArgumentNullException("ConceptTmp_CSharpCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ConceptTmp_CSharpCode));
            }
            if ((ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ConceptTmp_CustomCode));
            }
            if ((ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ConceptTmp_CustomCategoryCode));
            }
            if ((ConceptTmp_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ConceptTmp_PColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ConceptTmp_PColumn));
            }
            if ((ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ConceptTmp_CalcSituationType));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ConceptTmp_PersistSituationType));
            if ((ConceptTmp_EngName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ConceptTmp_EngName));
            }
            if ((ConceptTmp_FnName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ConceptTmp_FnName));
            }
            if ((ConceptTmp_KeyColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ConceptTmp_KeyColumnName));
            }
            if ((ConceptTmp_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ConceptTmp_Color));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_ConceptTmp_ID));
            if ((Original_ConceptTmp_Name == null)) {
                throw new global::System.ArgumentNullException("Original_ConceptTmp_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ConceptTmp_Name));
            }
            if ((Original_ConceptTmp_IdentifierCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ConceptTmp_IdentifierCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_CustomCode == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ConceptTmp_CustomCode));
            }
            if ((Original_ConceptTmp_CustomCategoryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ConceptTmp_CustomCategoryCode));
            }
            if ((Original_ConceptTmp_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(Original_ConceptTmp_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ConceptTmp_PColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ConceptTmp_PColumn));
            }
            if ((Original_ConceptTmp_IsPeriodic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_ConceptTmp_IsPeriodic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_ConceptTmp_CalcSituationType));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_ConceptTmp_PersistSituationType));
            if ((Original_ConceptTmp_EngName == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ConceptTmp_EngName));
            }
            if ((Original_ConceptTmp_FnName == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_ConceptTmp_FnName));
            }
            if ((Original_ConceptTmp_KeyColumnName == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_ConceptTmp_KeyColumnName));
            }
            if ((Original_ConceptTmp_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_ConceptTmp_Color));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ConceptTmp_Name, 
                    string ConceptTmp_Script, 
                    string ConceptTmp_CSharpCode, 
                    global::System.Nullable<int> ConceptTmp_IdentifierCode, 
                    string ConceptTmp_CustomCode, 
                    string ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> ConceptTmp_Type, 
                    string ConceptTmp_PColumn, 
                    global::System.Nullable<bool> ConceptTmp_IsPeriodic, 
                    int ConceptTmp_CalcSituationType, 
                    int ConceptTmp_PersistSituationType, 
                    string ConceptTmp_EngName, 
                    string ConceptTmp_FnName, 
                    string ConceptTmp_KeyColumnName, 
                    string ConceptTmp_Color, 
                    decimal Original_ConceptTmp_ID, 
                    string Original_ConceptTmp_Name, 
                    global::System.Nullable<int> Original_ConceptTmp_IdentifierCode, 
                    string Original_ConceptTmp_CustomCode, 
                    string Original_ConceptTmp_CustomCategoryCode, 
                    global::System.Nullable<short> Original_ConceptTmp_Type, 
                    string Original_ConceptTmp_PColumn, 
                    global::System.Nullable<bool> Original_ConceptTmp_IsPeriodic, 
                    int Original_ConceptTmp_CalcSituationType, 
                    int Original_ConceptTmp_PersistSituationType, 
                    string Original_ConceptTmp_EngName, 
                    string Original_ConceptTmp_FnName, 
                    string Original_ConceptTmp_KeyColumnName, 
                    string Original_ConceptTmp_Color) {
            return this.Update(Original_ConceptTmp_ID, ConceptTmp_Name, ConceptTmp_Script, ConceptTmp_CSharpCode, ConceptTmp_IdentifierCode, ConceptTmp_CustomCode, ConceptTmp_CustomCategoryCode, ConceptTmp_Type, ConceptTmp_PColumn, ConceptTmp_IsPeriodic, ConceptTmp_CalcSituationType, ConceptTmp_PersistSituationType, ConceptTmp_EngName, ConceptTmp_FnName, ConceptTmp_KeyColumnName, ConceptTmp_Color, Original_ConceptTmp_ID, Original_ConceptTmp_Name, Original_ConceptTmp_IdentifierCode, Original_ConceptTmp_CustomCode, Original_ConceptTmp_CustomCategoryCode, Original_ConceptTmp_Type, Original_ConceptTmp_PColumn, Original_ConceptTmp_IsPeriodic, Original_ConceptTmp_CalcSituationType, Original_ConceptTmp_PersistSituationType, Original_ConceptTmp_EngName, Original_ConceptTmp_FnName, Original_ConceptTmp_KeyColumnName, Original_ConceptTmp_Color);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TA_PriorityDependencyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TA_PriorityDependencyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TA_PriorityDependency";
            tableMapping.ColumnMappings.Add("PrioDep_ID", "PrioDep_ID");
            tableMapping.ColumnMappings.Add("PrioDep_RuleName", "PrioDep_RuleName");
            tableMapping.ColumnMappings.Add("PrioDep_ConceptIdentifier", "PrioDep_ConceptIdentifier");
            tableMapping.ColumnMappings.Add("PrioDep_Action", "PrioDep_Action");
            tableMapping.ColumnMappings.Add("PrioDep_Note", "PrioDep_Note");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TA_PriorityDependency] WHERE (([PrioDep_ID] = @Original_PrioDep_ID) AND ((@IsNull_PrioDep_RuleName = 1 AND [PrioDep_RuleName] IS NULL) OR ([PrioDep_RuleName] = @Original_PrioDep_RuleName)) AND ((@IsNull_PrioDep_ConceptIdentifier = 1 AND [PrioDep_ConceptIdentifier] IS NULL) OR ([PrioDep_ConceptIdentifier] = @Original_PrioDep_ConceptIdentifier)) AND ((@IsNull_PrioDep_Action = 1 AND [PrioDep_Action] IS NULL) OR ([PrioDep_Action] = @Original_PrioDep_Action)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrioDep_RuleName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_RuleName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_RuleName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_RuleName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrioDep_ConceptIdentifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ConceptIdentifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_ConceptIdentifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ConceptIdentifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrioDep_Action", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Action", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Action", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TA_PriorityDependency] ([PrioDep_ID], [PrioDep_RuleName], [PrioDep_ConceptIdentifier], [PrioDep_Action], [PrioDep_Note]) VALUES (@PrioDep_ID, @PrioDep_RuleName, @PrioDep_ConceptIdentifier, @PrioDep_Action, @PrioDep_Note);
SELECT PrioDep_ID, PrioDep_RuleName, PrioDep_ConceptIdentifier, PrioDep_Action, PrioDep_Note FROM TA_PriorityDependency WHERE (PrioDep_ID = @PrioDep_ID) ORDER BY PrioDep_RuleIdentifier";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_RuleName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_RuleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_ConceptIdentifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ConceptIdentifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_Note", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TA_PriorityDependency] SET [PrioDep_ID] = @PrioDep_ID, [PrioDep_RuleName] = @PrioDep_RuleName, [PrioDep_ConceptIdentifier] = @PrioDep_ConceptIdentifier, [PrioDep_Action] = @PrioDep_Action, [PrioDep_Note] = @PrioDep_Note WHERE (([PrioDep_ID] = @Original_PrioDep_ID) AND ((@IsNull_PrioDep_RuleName = 1 AND [PrioDep_RuleName] IS NULL) OR ([PrioDep_RuleName] = @Original_PrioDep_RuleName)) AND ((@IsNull_PrioDep_ConceptIdentifier = 1 AND [PrioDep_ConceptIdentifier] IS NULL) OR ([PrioDep_ConceptIdentifier] = @Original_PrioDep_ConceptIdentifier)) AND ((@IsNull_PrioDep_Action = 1 AND [PrioDep_Action] IS NULL) OR ([PrioDep_Action] = @Original_PrioDep_Action)));
SELECT PrioDep_ID, PrioDep_RuleName, PrioDep_ConceptIdentifier, PrioDep_Action, PrioDep_Note FROM TA_PriorityDependency WHERE (PrioDep_ID = @PrioDep_ID) ORDER BY PrioDep_RuleIdentifier";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_RuleName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_RuleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_ConceptIdentifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ConceptIdentifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrioDep_Note", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrioDep_RuleName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_RuleName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_RuleName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_RuleName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrioDep_ConceptIdentifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ConceptIdentifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_ConceptIdentifier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_ConceptIdentifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrioDep_Action", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Action", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrioDep_Action", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrioDep_Action", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTS.Clock.AppSetup.Properties.Settings.Default.ClockConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PrioDep_ID, PrioDep_RuleName, PrioDep_ConceptIdentifier, PrioDep_Actio" +
                "n, PrioDep_Note\r\nFROM         TA_PriorityDependency\r\norder by PrioDep_RuleIdenti" +
                "fier";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ghadircopyDataSet.TA_PriorityDependencyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ghadircopyDataSet.TA_PriorityDependencyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ghadircopyDataSet.TA_PriorityDependencyDataTable dataTable = new ghadircopyDataSet.TA_PriorityDependencyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet.TA_PriorityDependencyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ghadircopyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TA_PriorityDependency");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PrioDep_ID, string Original_PrioDep_RuleName, string Original_PrioDep_ConceptIdentifier, string Original_PrioDep_Action) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PrioDep_ID));
            if ((Original_PrioDep_RuleName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PrioDep_RuleName));
            }
            if ((Original_PrioDep_ConceptIdentifier == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PrioDep_ConceptIdentifier));
            }
            if ((Original_PrioDep_Action == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PrioDep_Action));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int PrioDep_ID, string PrioDep_RuleName, string PrioDep_ConceptIdentifier, string PrioDep_Action, string PrioDep_Note) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PrioDep_ID));
            if ((PrioDep_RuleName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PrioDep_RuleName));
            }
            if ((PrioDep_ConceptIdentifier == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PrioDep_ConceptIdentifier));
            }
            if ((PrioDep_Action == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PrioDep_Action));
            }
            if ((PrioDep_Note == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PrioDep_Note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int PrioDep_ID, string PrioDep_RuleName, string PrioDep_ConceptIdentifier, string PrioDep_Action, string PrioDep_Note, int Original_PrioDep_ID, string Original_PrioDep_RuleName, string Original_PrioDep_ConceptIdentifier, string Original_PrioDep_Action) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PrioDep_ID));
            if ((PrioDep_RuleName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PrioDep_RuleName));
            }
            if ((PrioDep_ConceptIdentifier == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PrioDep_ConceptIdentifier));
            }
            if ((PrioDep_Action == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PrioDep_Action));
            }
            if ((PrioDep_Note == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PrioDep_Note));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_PrioDep_ID));
            if ((Original_PrioDep_RuleName == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_PrioDep_RuleName));
            }
            if ((Original_PrioDep_ConceptIdentifier == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PrioDep_ConceptIdentifier));
            }
            if ((Original_PrioDep_Action == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PrioDep_Action));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PrioDep_RuleName, string PrioDep_ConceptIdentifier, string PrioDep_Action, string PrioDep_Note, int Original_PrioDep_ID, string Original_PrioDep_RuleName, string Original_PrioDep_ConceptIdentifier, string Original_PrioDep_Action) {
            return this.Update(Original_PrioDep_ID, PrioDep_RuleName, PrioDep_ConceptIdentifier, PrioDep_Action, PrioDep_Note, Original_PrioDep_ID, Original_PrioDep_RuleName, Original_PrioDep_ConceptIdentifier, Original_PrioDep_Action);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TA_PeriodicScndCnpDetailTemplateTableAdapter _tA_PeriodicScndCnpDetailTemplateTableAdapter;
        
        private TA_ConceptTemplateTableAdapter _tA_ConceptTemplateTableAdapter;
        
        private TA_ConceptTemplate1TableAdapter _tA_ConceptTemplate1TableAdapter;
        
        private TA_PriorityDependencyTableAdapter _tA_PriorityDependencyTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_PeriodicScndCnpDetailTemplateTableAdapter TA_PeriodicScndCnpDetailTemplateTableAdapter {
            get {
                return this._tA_PeriodicScndCnpDetailTemplateTableAdapter;
            }
            set {
                this._tA_PeriodicScndCnpDetailTemplateTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_ConceptTemplateTableAdapter TA_ConceptTemplateTableAdapter {
            get {
                return this._tA_ConceptTemplateTableAdapter;
            }
            set {
                this._tA_ConceptTemplateTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_ConceptTemplate1TableAdapter TA_ConceptTemplate1TableAdapter {
            get {
                return this._tA_ConceptTemplate1TableAdapter;
            }
            set {
                this._tA_ConceptTemplate1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TA_PriorityDependencyTableAdapter TA_PriorityDependencyTableAdapter {
            get {
                return this._tA_PriorityDependencyTableAdapter;
            }
            set {
                this._tA_PriorityDependencyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null) 
                            && (this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Connection != null))) {
                    return this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Connection;
                }
                if (((this._tA_ConceptTemplateTableAdapter != null) 
                            && (this._tA_ConceptTemplateTableAdapter.Connection != null))) {
                    return this._tA_ConceptTemplateTableAdapter.Connection;
                }
                if (((this._tA_ConceptTemplate1TableAdapter != null) 
                            && (this._tA_ConceptTemplate1TableAdapter.Connection != null))) {
                    return this._tA_ConceptTemplate1TableAdapter.Connection;
                }
                if (((this._tA_PriorityDependencyTableAdapter != null) 
                            && (this._tA_PriorityDependencyTableAdapter.Connection != null))) {
                    return this._tA_PriorityDependencyTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_ConceptTemplateTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_ConceptTemplate1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tA_PriorityDependencyTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ghadircopyDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tA_ConceptTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_ConceptTemplate.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_PeriodicScndCnpDetailTemplate.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_ConceptTemplate1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_ConceptTemplate1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_ConceptTemplate1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tA_PriorityDependencyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TA_PriorityDependency.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tA_PriorityDependencyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ghadircopyDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tA_ConceptTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_ConceptTemplate.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_PeriodicScndCnpDetailTemplate.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_ConceptTemplate1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_ConceptTemplate1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_ConceptTemplate1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tA_PriorityDependencyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TA_PriorityDependency.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tA_PriorityDependencyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ghadircopyDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tA_PriorityDependencyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_PriorityDependency.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_PriorityDependencyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_ConceptTemplate1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_ConceptTemplate1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_ConceptTemplate1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_PeriodicScndCnpDetailTemplate.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tA_ConceptTemplateTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TA_ConceptTemplate.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tA_ConceptTemplateTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ghadircopyDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_ConceptTemplateTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_ConceptTemplateTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_ConceptTemplate1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_ConceptTemplate1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tA_PriorityDependencyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tA_PriorityDependencyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null)) {
                    revertConnections.Add(this._tA_PeriodicScndCnpDetailTemplateTableAdapter, this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Connection);
                    this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Adapter);
                    }
                }
                if ((this._tA_ConceptTemplateTableAdapter != null)) {
                    revertConnections.Add(this._tA_ConceptTemplateTableAdapter, this._tA_ConceptTemplateTableAdapter.Connection);
                    this._tA_ConceptTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_ConceptTemplateTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_ConceptTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_ConceptTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_ConceptTemplateTableAdapter.Adapter);
                    }
                }
                if ((this._tA_ConceptTemplate1TableAdapter != null)) {
                    revertConnections.Add(this._tA_ConceptTemplate1TableAdapter, this._tA_ConceptTemplate1TableAdapter.Connection);
                    this._tA_ConceptTemplate1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_ConceptTemplate1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_ConceptTemplate1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_ConceptTemplate1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_ConceptTemplate1TableAdapter.Adapter);
                    }
                }
                if ((this._tA_PriorityDependencyTableAdapter != null)) {
                    revertConnections.Add(this._tA_PriorityDependencyTableAdapter, this._tA_PriorityDependencyTableAdapter.Connection);
                    this._tA_PriorityDependencyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tA_PriorityDependencyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tA_PriorityDependencyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tA_PriorityDependencyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tA_PriorityDependencyTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tA_PeriodicScndCnpDetailTemplateTableAdapter != null)) {
                    this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_PeriodicScndCnpDetailTemplateTableAdapter]));
                    this._tA_PeriodicScndCnpDetailTemplateTableAdapter.Transaction = null;
                }
                if ((this._tA_ConceptTemplateTableAdapter != null)) {
                    this._tA_ConceptTemplateTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_ConceptTemplateTableAdapter]));
                    this._tA_ConceptTemplateTableAdapter.Transaction = null;
                }
                if ((this._tA_ConceptTemplate1TableAdapter != null)) {
                    this._tA_ConceptTemplate1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_ConceptTemplate1TableAdapter]));
                    this._tA_ConceptTemplate1TableAdapter.Transaction = null;
                }
                if ((this._tA_PriorityDependencyTableAdapter != null)) {
                    this._tA_PriorityDependencyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tA_PriorityDependencyTableAdapter]));
                    this._tA_PriorityDependencyTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591